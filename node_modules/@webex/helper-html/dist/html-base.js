"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.escape = escape;
exports.escapeSync = escapeSync;

var _promise = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/promise"));

/*!
 * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.
 */
var escapeMe = /(<|>|&)/g; // escape and escapeSync probably don't both need to exist, but it seemed like a
// good idea in case we ever want to for the future.

/**
 * Escapes HTML
 * @param {[type]} html
 * @returns {[type]}
 */

function escape(html) {
  return new _promise.default(function (resolve) {
    return resolve(escapeSync(html));
  });
}
/**
 * Synchronously escape HTML
 * @param {[type]} html
 * @returns {[type]}
 */


function escapeSync(html) {
  return html.replace(escapeMe, entityReplacer);
}
/**
 * @param {string} char
 * @private
 * @returns {string}
 */


function entityReplacer(char) {
  switch (char) {
    case '<':
      return '&lt;';

    case '>':
      return '&gt;';

    case '&':
      return '&amp;';

    default:
      return char;
  }
}
//# sourceMappingURL=html-base.js.map
