"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _keys = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/keys"));

var _ampersandState = _interopRequireDefault(require("ampersand-state"));

var _constants = require("../constants");

var _featureCollection = _interopRequireDefault(require("./feature-collection"));

// External dependencies.
// Local Dependencies

/**
 * Feature collection parent container.
 *
 * @description
 * This class contains all of the feature collection class objects to help
 * organize the data retrieved from the **wdm** service on device registration.
 */
var FeaturesModel = _ampersandState.default.extend({
  // Ampersand property members.
  collections: {
    /**
     * This collection contains the developer feature collection.
     *
     * @type {FeatureCollection}
     */
    developer: _featureCollection.default,

    /**
     * This collection contains the entitlement feature collection.
     *
     * @type {FeatureCollection}
     */
    entitlement: _featureCollection.default,

    /**
     * This collection contains the user feature collection.
     *
     * @type {FeatureCollection}
     */
    user: _featureCollection.default
  },
  // Helper method members.

  /**
   * Recursively clear attributes, children, and collections.
   *
   * @param {Object} options - Attribute options to unset.
   * @returns {this}
   */
  clear: function clear(options) {
    var _this = this;

    // Clear the ampersand attributes safely if there are any. This class should
    // never have any attributes.
    (0, _keys.default)(this.attributes).forEach(function (key) {
      _this.unset(key, options);
    }); // Clear the ampersand children safely if there are any. This class should
    // never have any children.

    /* eslint-disable-next-line no-underscore-dangle */

    (0, _keys.default)(this._children).forEach(function (key) {
      _this[key].clear();
    }); // Clear the ampersand collections safely.

    /* eslint-disable-next-line no-underscore-dangle */

    (0, _keys.default)(this._collections).forEach(function (key) {
      _this[key].reset();
    });
    return this;
  },
  // Ampersand method members.

  /**
   * Initializer method for FeatureModel class object.
   *
   * @override
   * @returns {void}
   */
  initialize: function initialize() {
    var _this2 = this;

    // Declare the collection event names.
    var eventNames = ['change:value', 'add', 'remove']; // Initialize collection event listeners.

    eventNames.forEach(function (eventName) {
      _constants.FEATURE_COLLECTION_NAMES.forEach(function (collectionName) {
        _this2[collectionName].on(eventName, function (model, options) {
          _this2.trigger("change:".concat(collectionName), _this2, _this2[collectionName], options);
        });
      });
    });
  }
});

var _default = FeaturesModel;
exports.default = _default;
//# sourceMappingURL=features-model.js.map
