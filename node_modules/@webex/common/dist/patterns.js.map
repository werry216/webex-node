{"version":3,"sources":["patterns.js"],"names":["email","containsEmails","uuid","execEmail","execUuid"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;eACe;AACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEA,EAAAA,KAAK,EAAE,sJATM;;AAWb;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,cAAc,EAAE,qJAlBH;;AAoBb;AACF;AACA;AACA;AACEC,EAAAA,IAAI,EAAE,4CAxBO;;AA0Bb;AACF;AACA;AACA;AACEC,EAAAA,SAAS,EAAE,iBA9BE;;AAgCb;AACF;AACA;AACA;AACEC,EAAAA,QAAQ,EAAE;AApCG,C","sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n/**\n * @description Set of regex patterns to compile once and use throughout the\n * app. All non-prefixed patterns have start/end characters to ensure exact\n * matches. Patterns prefixed with \"exec\" are the same as their non-prefixed\n * counterparts but without the start/end characters so they can be used with\n * methods like `RegExp#exec`.\n */\nexport default {\n  /**\n   * Regular express that validates a string is strictly an email.\n   * Allows for validation of emails within services such as conversation\n   * activities or user details.\n   * See [RegEx information here]{@link https://ihateregex.io/expr/email-2}.\n   *\n   * @type {RegExp}\n   */\n  email: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n\n  /**\n   * Regular expression that validates an ambiguous string contains emails\n   * (one or more) within.\n   * See [RegEx information here]{@link https://ihateregex.io/expr/email-2}.\n   *\n   * @type {RegExp}\n   */\n  containsEmails: /(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/g,\n\n  /**\n   * Matches a UUID\n   * @type {RegExp}\n   */\n  uuid: /^[a-f\\d]{8}(?:-[a-f\\d]{4}){3}-[a-f\\d]{12}$/,\n\n  /**\n   * Same as this.email, but allows for surrounding characters\n   * @type {RegExp}\n   */\n  execEmail: /[^\\s]+?@[^\\s]+?/,\n\n  /**\n   * Same as this.uuid but allows for surrounding characters\n   * @type {RegExp}\n   */\n  execUuid: /[a-f\\d]{8}(?:-[a-f\\d]{4}){3}-[a-f\\d]{12}/\n};\n"]}