{"version":3,"sources":["index.js"],"names":["OSMap","OS_NAME","chrome","macOS","MAC","Windows","WINDOWS","iOS","IOS","Android","ANDROID","Linux","LINUX","getOSName","getOSVersion","getBrowserName","getBrowserVersion","Metrics","instance","_events","meetingCollection","keys","eventType","webex","options","meetingId","data","event","meeting","indexOf","LoggerProxy","logger","error","get","callEvents","MEDIA_QUALITY","sendMediaQualityAnalyzerMetrics","push","sendCallAnalyzerMetrics","info","identifiers","payload","eventId","uuid","v4","version","origin","buildType","name","networkType","userAgent","userAgentToString","clientInfo","clientType","clientVersion","CLIENT_NAME","osVersion","subClientType","os","getOsName","browser","browserVersion","originTime","triggered","Date","toISOString","senderCountryCode","meetings","geoHintInfo","countryCode","canProceed","eventData","webClientDomain","window","location","hostname","Object","prototype","hasOwnProperty","call","errors","mediaType","trigger","pstnAudioType","mediaCapabilities","recoveredBy","OTHERS","UNKNOWN","intervals","intervalData","sourceMetadata","applicationSoftwareType","applicationSoftwareVersion","mediaEngineSoftwareType","mediaEngineSoftwareVersion","startTime","err","showToUser","errorCode","body","ERROR_CODE","MEETING_ERRORS","FREE_USER_MAX_PARTICIPANTS_EXCEEDED","PAID_USER_MAX_PARTICIPANTS_EXCEEDED","SERVICE_MAX_PARTICIPANTS_EXCEEDED","INACTIVE","EXCEEDED_MAX_JOINED_PARTICIPANTS","EXCEEDED_SERVICE_MAX_PARTICIPANTS","MEETING_IS_LOCKED","MEETING_IS_TERMINATING","MEETING_REQUIRE_MODERATOR_PIN_INTENT","MEETING_REQUIRE_MODERATOR_PIN","MEETING_REQUIRE_MODERATOR_ROLE","JOIN_RESTRICTED_USER","GET_RESTRICTED_USER","CREATE_MEDIA_RESTRICTED_USER","JOIN_RESTRICTED_USER_NOT_IN_ROOM","MEETING_NOT_FOUND","NOT_WEBEX_SITE","INVALID_JOIN_TIME","PHONE_NUMBER_NOT_A_NUMBER","PHONE_NUMBER_TOO_LONG","INVALID_DIALABLE_KEY","ONE_ON_ONE_TO_SELF_NOT_ALLOWED","REMOVED_PARTICIPANT","MEETING_LINK_NOT_FOUND","PHONE_NUMBER_TOO_SHORT_AFTER_IDD","INVALID_INVITEE_ADDRESS","PMR_ACCOUNT_LOCKED","RESOURCE_GUEST_FORBIDDEN","PMR_ACCOUNT_SUSPENDED","EMPTY_PHONE_NUMBER_OR_COUNTRY_CODE","INVALID_SINCE_OR_SEQUENCE_HASH_IN_REQUEST","CONVERSATION_NOT_FOUND","RECORDING_CONTROL_NOT_SUPPORTED","RECORDING_NOT_STARTED","RECORDING_NOT_ENABLED","generateErrorPayload","LOCUS_RESPONSE","shownToUser","errorPayload","category","errorDescription","fatal","notFatalErrorList","OTHER","errorData","userAgentOption","browserInfo","util","format","StaticConfig","metrics","clientName","toLowerCase","split","osInfo","process","env","NODE_ENV","metricName","metricFields","metricTags","fields","browser_version","os_version","sdk_version","tags","org_id","credentials","getOrgId","domain","client_id","config","Error","internal","submitClientMetrics","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAGA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAIA,IAAMA,KAAK,GAAG;AACZ,eAAaC,iBAAQC,MADT;AAEZC,EAAAA,KAAK,EAAEF,iBAAQG,GAFH;AAGZC,EAAAA,OAAO,EAAEJ,iBAAQK,OAHL;AAIZC,EAAAA,GAAG,EAAEN,iBAAQO,GAJD;AAKZC,EAAAA,OAAO,EAAER,iBAAQS,OALL;AAMZC,EAAAA,KAAK,EAAEV,iBAAQW;AANH,CAAd;;wBAcI,gC;IAJFC,S,qBAAAA,S;IACAC,Y,qBAAAA,Y;IACAC,c,qBAAAA,c;IACAC,iB,qBAAAA,iB;AAGF;AACA;AACA;AACA;AACA;;;IACMC,O;AACJ;AACF;AACA;AACA;AACA;AACA;AACE,qBAAc;AAAA;;AACZ,QAAI,CAACA,OAAO,CAACC,QAAb,EAAuB;AACvB;AACJ;AACA;AACA;AACA;AACA;AACM,WAAKC,OAAL,GAAe,EAAf;AACA;AACN;AACA;AACA;AACA;AACA;;AACM,WAAKC,iBAAL,GAAyB,IAAzB;AACA;AACN;AACA;AACA;AACA;AACA;;AACM,WAAKC,IAAL,GAAY,qBAAcC,kBAAd,CAAZ;AACA;AACN;AACA;AACA;AACA;AACA;;AACML,MAAAA,OAAO,CAACC,QAAR,GAAmB,IAAnB;AACD;;AAED,WAAOD,OAAO,CAACC,QAAf;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WACE,sBAAaE,iBAAb,EAAgCG,KAAhC,EAAuC;AACrC,WAAKH,iBAAL,GAAyBA,iBAAzB;AACA,WAAKG,KAAL,GAAaA,KAAb;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,mBAAUC,OAAV,EAAmB;AAAA,UACVC,SADU,GACqBD,OADrB,CACVC,SADU;AAAA,0BACqBD,OADrB,CACCE,IADD;AAAA,UACCA,IADD,8BACQ,EADR;AAAA,UACYC,KADZ,GACqBH,OADrB,CACYG,KADZ;AAAA,UAEZC,OAFY,GAEDJ,OAFC,CAEZI,OAFY;;AAIjB,UAAI,KAAKP,IAAL,CAAUQ,OAAV,CAAkBF,KAAlB,MAA6B,CAAC,CAAlC,EAAqC;AACnCG,6BAAYC,MAAZ,CAAmBC,KAAnB,6CAA8DL,KAA9D;AACD;;AAED,UAAI,CAACC,OAAD,IAAYH,SAAhB,EAA2B;AACzBG,QAAAA,OAAO,GAAG,KAAKR,iBAAL,CAAuBa,GAAvB,CAA2BR,SAA3B,CAAV;AACD;;AAED,UAAIG,OAAJ,EAAa;AACX,YAAI,CAACA,OAAO,CAACM,UAAb,EAAyB;AACvBN,UAAAA,OAAO,CAACM,UAAR,GAAqB,EAArB;AACD;;AACD,YAAIP,KAAK,KAAKL,mBAAUa,aAAxB,EAAuC;AACrCT,UAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;AACAC,UAAAA,OAAO,CAACQ,+BAAR,CAAwCV,IAAxC;AACD,SAHD,MAIK;AACHE,UAAAA,OAAO,CAACM,UAAR,CAAmBG,IAAnB,CAAwBV,KAAxB;AACAD,UAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;AACAC,UAAAA,OAAO,CAACU,uBAAR,CAAgCZ,IAAhC;AACD;AACF,OAbD,MAeK;AACHI,6BAAYC,MAAZ,CAAmBQ,IAAnB,oEAAoFd,SAApF;AACD;AACF;AAED;AACF;AACA;AACA;AACA;;;;WAEE,qBAAYH,SAAZ,EAAuBkB,WAAvB,EAAoChB,OAApC,EAA6C;AAAA;;AAC3C,UAAMiB,OAAO,GAAG;AACdC,QAAAA,OAAO,EAAEC,cAAKC,EAAL,EADK;AAEdC,QAAAA,OAAO,EAAE,CAFK;AAGdC,QAAAA,MAAM,EAAE;AACNC,UAAAA,SAAS,EAAE,MADL;AAENC,UAAAA,IAAI,EAAE,UAFA;AAGNC,UAAAA,WAAW,EAAE,SAHP;AAINC,UAAAA,SAAS,EAAE,KAAKC,iBAAL,EAJL;AAKNC,UAAAA,UAAU,EAAE;AACVC,YAAAA,UAAU,EAAE7B,OAAO,CAAC6B,UADV;AAEVC,YAAAA,aAAa,YAAKC,oBAAL,cAAoB,KAAKhC,KAAL,CAAWsB,OAA/B,CAFH;AAGVW,YAAAA,SAAS,EAAE1C,YAAY,MAAM,SAHnB;AAIV2C,YAAAA,aAAa,EAAEjC,OAAO,CAACiC,aAJb;AAKVC,YAAAA,EAAE,EAAE,KAAKC,SAAL,EALM;AAMVC,YAAAA,OAAO,EAAE7C,cAAc,EANb;AAOV8C,YAAAA,cAAc,EAAE7C,iBAAiB;AAPvB;AALN,SAHM;AAkBd8C,QAAAA,UAAU,EAAE;AACVC,UAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AADD,SAlBE;AAqBdC,QAAAA,iBAAiB,2BAAE,KAAK3C,KAAL,CAAW4C,QAAX,CAAoBC,WAAtB,0DAAE,sBAAiCC,WArBtC;AAsBd1C,QAAAA,KAAK,EAAE;AACLqB,UAAAA,IAAI,EAAE1B,SADD;AAELgD,UAAAA,UAAU,EAAE,IAFP;AAGL9B,UAAAA,WAAW,EAAXA,WAHK;AAIL+B,UAAAA,SAAS,EAAE;AAACC,YAAAA,eAAe,EAAEC,gBAAOC,QAAP,CAAgBC;AAAlC;AAJN;AAtBO,OAAhB,CAD2C,CA+B3C;;AACA,UAAInD,OAAJ,EAAa;AACX,YAAIoD,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCvD,OAArC,EAA8C,YAA9C,CAAJ,EAAiE;AAC/DiB,UAAAA,OAAO,CAACd,KAAR,CAAc2C,UAAd,GAA2B9C,OAAO,CAAC8C,UAAnC;AACD;;AACD,YAAI9C,OAAO,CAACwD,MAAZ,EAAoB;AAClBvC,UAAAA,OAAO,CAACd,KAAR,CAAcqD,MAAd,GAAuBxD,OAAO,CAACwD,MAA/B;AACD;;AACD,YAAIxD,OAAO,CAACyD,SAAZ,EAAuB;AACrBxC,UAAAA,OAAO,CAACd,KAAR,CAAcsD,SAAd,GAA0BzD,OAAO,CAACyD,SAAlC;AACD;;AACD,YAAIzD,OAAO,CAAC0D,OAAZ,EAAqB;AACnBzC,UAAAA,OAAO,CAACd,KAAR,CAAcuD,OAAd,GAAwB1D,OAAO,CAAC0D,OAAhC;AACD;;AACD,YAAI1D,OAAO,CAAC2D,aAAZ,EAA2B;AACzB1C,UAAAA,OAAO,CAACd,KAAR,CAAcwD,aAAd,GAA8B3D,OAAO,CAAC2D,aAAtC;AACD;;AACD,YAAI3D,OAAO,CAAC4D,iBAAZ,EAA+B;AAC7B3C,UAAAA,OAAO,CAACd,KAAR,CAAcyD,iBAAd,GAAkC5D,OAAO,CAAC4D,iBAA1C;AACD;;AACD,YAAI5D,OAAO,CAAC6D,WAAZ,EAAyB;AACvB5C,UAAAA,OAAO,CAACd,KAAR,CAAc0D,WAAd,GAA4B7D,OAAO,CAAC6D,WAApC;AACD;AACF;;AAED,aAAO5C,OAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;WACE,qBAAY;AAAA;;AACV,iCAAOzC,KAAK,CAACa,SAAS,EAAV,CAAZ,+DAA6BZ,iBAAQqF,MAArC;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,0BAAiBhE,SAAjB,EAA4BkB,WAA5B,EAAyChB,OAAzC,EAAkD;AAAA;;AAChD,UAAMiB,OAAO,GAAG;AACdC,QAAAA,OAAO,EAAEC,cAAKC,EAAL,EADK;AAEdC,QAAAA,OAAO,EAAE,CAFK;AAGdC,QAAAA,MAAM,EAAE;AACNC,UAAAA,SAAS,EAAE,MADL;AAENC,UAAAA,IAAI,EAAE,UAFA;AAGNC,UAAAA,WAAW,EAAEzB,OAAO,CAACyB,WAAR,IAAuBsC,gBAH9B;AAINrC,UAAAA,SAAS,EAAE,KAAKC,iBAAL,EAJL;AAKNC,UAAAA,UAAU,EAAE;AACVC,YAAAA,UAAU,EAAE7B,OAAO,CAAC6B,UADV;AACsB;AAChCC,YAAAA,aAAa,YAAKC,oBAAL,cAAoB,KAAKhC,KAAL,CAAWsB,OAA/B,CAFH;AAGVa,YAAAA,EAAE,EAAE,KAAKC,SAAL,EAHM;AAIVH,YAAAA,SAAS,EAAE1C,YAAY,MAAMyE,gBAJnB;AAKV9B,YAAAA,aAAa,EAAEjC,OAAO,CAACiC,aALb;AAMVG,YAAAA,OAAO,EAAE7C,cAAc,EANb;AAOV8C,YAAAA,cAAc,EAAE7C,iBAAiB;AAPvB;AALN,SAHM;AAkBd8C,QAAAA,UAAU,EAAE;AACVC,UAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AADD,SAlBE;AAqBdC,QAAAA,iBAAiB,4BAAE,KAAK3C,KAAL,CAAW4C,QAAX,CAAoBC,WAAtB,2DAAE,uBAAiCC,WArBtC;AAsBd1C,QAAAA,KAAK,EAAE;AACLqB,UAAAA,IAAI,EAAE1B,SADD;AAELgD,UAAAA,UAAU,EAAE,IAFP;AAGL9B,UAAAA,WAAW,EAAXA,WAHK;AAILgD,UAAAA,SAAS,EAAE,CAAChE,OAAO,CAACiE,YAAT,CAJN;AAKLlB,UAAAA,SAAS,EAAE;AAACC,YAAAA,eAAe,EAAEC,gBAAOC,QAAP,CAAgBC;AAAlC,WALN;AAMLe,UAAAA,cAAc,EAAE;AACdC,YAAAA,uBAAuB,EAAEpC,oBADX;AAEdqC,YAAAA,0BAA0B,EAAE,KAAKrE,KAAL,CAAWsB,OAFzB;AAGdgD,YAAAA,uBAAuB,EAAE9E,cAAc,MAAM,SAH/B;AAId+E,YAAAA,0BAA0B,EAAEhF,YAAY,MAAMyE,gBAJhC;AAKdQ,YAAAA,SAAS,EAAE,IAAI/B,IAAJ,GAAWC,WAAX;AALG;AANX;AAtBO,OAAhB;AAsCA,aAAOxB,OAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,yBAAgBuD,GAAhB,EAAqBC,UAArB,EAAiC;AAC/B,UAAIC,SAAJ;;AAEA,UAAIF,GAAG,IAAIA,GAAG,CAACG,IAAX,IAAmBH,GAAG,CAACG,IAAJ,CAASD,SAAhC,EAA2C;AACzC,gBAAQE,oBAAWJ,GAAG,CAACG,IAAJ,CAASD,SAApB,CAAR;AACE,eAAKG,0BAAeC,mCAApB;AACEJ,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeE,mCAApB;AACA,eAAKF,0BAAeG,iCAApB;AACEN,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeI,QAApB;AACEP,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeK,gCAApB;AACA,eAAKL,0BAAeM,iCAApB;AACET,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeO,iBAApB;AACEV,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeQ,sBAApB;AACEX,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeS,oCAApB;AACEZ,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeU,6BAApB;AACEb,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeW,8BAApB;AACEd,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeY,oBAApB;AACA,eAAKZ,0BAAea,mBAApB;AACA,eAAKb,0BAAec,4BAApB;AACEjB,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAee,gCAApB;AACElB,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAegB,iBAApB;AACEnB,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeiB,cAApB;AACEpB,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAekB,iBAApB;AACErB,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAemB,yBAApB;AACEtB,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeoB,qBAApB;AACEvB,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeqB,oBAApB;AACExB,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAesB,8BAApB;AACEzB,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeuB,mBAApB;AACE1B,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAewB,sBAApB;AACE3B,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeyB,gCAApB;AACE5B,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAe0B,uBAApB;AACE7B,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAe2B,kBAApB;AACE9B,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAe4B,wBAApB;AACE/B,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAe6B,qBAApB;AACEhC,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAe8B,kCAApB;AACEjC,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAe+B,yCAApB;AACElC,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAegC,sBAApB;AACEnC,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF,eAAKG,0BAAeiC,+BAApB;AACA,eAAKjC,0BAAekC,qBAApB;AACA,eAAKlC,0BAAemC,qBAApB;AACEtC,YAAAA,SAAS,GAAG,IAAZ;AACA;;AACF;AACEA,YAAAA,SAAS,GAAG,IAAZ;AA/FJ;AAiGD,OAlGD,MAmGK;AACHA,QAAAA,SAAS,GAAG,IAAZ;AACD;;AAED,aAAO,KAAKuC,oBAAL,CACLvC,SADK,EACMD,UADN,EACkBjE,eAAMgB,IAAN,CAAW0F,cAD7B,EAC6C1C,GAD7C,CAAP;AAGD;;;WAGD,8BAAqBE,SAArB,EAAgCyC,WAAhC,EAA6C3F,IAA7C,EAAmDgD,GAAnD,EAAwD;AACtD,UAAIhE,eAAMgD,MAAN,CAAakB,SAAb,CAAJ,EAA6B;AAC3B,YAAM0C,YAAY,GAAG;AACnBD,UAAAA,WAAW,EAAEA,WAAW,IAAI,KADT;AAEnBE,UAAAA,QAAQ,EAAE7G,eAAMgD,MAAN,CAAakB,SAAb,EAAwB,CAAxB,CAFS;AAGnB4C,UAAAA,gBAAgB,EAAE9G,eAAMgD,MAAN,CAAakB,SAAb,EAAwB,CAAxB,CAHC;AAInBA,UAAAA,SAAS,EAATA,SAJmB;AAKnB6C,UAAAA,KAAK,EAAE,CAAC,wBAAS/G,eAAMgH,iBAAf,EAAkC9C,SAAlC,CALW;AAMnBlD,UAAAA,IAAI,EAAEA,IAAI,IAAIhB,eAAMgB,IAAN,CAAWiG;AANN,SAArB;;AASA,YAAIjD,GAAG,IAAIA,GAAG,CAACG,IAAf,EAAqB;AACnByC,UAAAA,YAAY,CAACM,SAAb,GAAyBlD,GAAG,CAACG,IAA7B;AACD;;AAED,eAAOyC,YAAP;AACD;;AAED,aAAO,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,6BAAoB;AAClB,UAAIO,eAAJ;AACA,UAAIC,WAAJ;;AACA,UAAMhG,UAAU,GAAGiG,cAAKC,MAAL,CAAY,WAAZ,YAA4BC,gBAAapF,QAAb,CAAsBqF,OAAtB,CAA8BC,UAA1D,EAAnB;;AAEA,UAAI,CAAC,QAAD,EAAW,SAAX,EAAsB,MAAtB,EAA8B,QAA9B,EAAwC,QAAxC,EAAkD5H,OAAlD,CAA0Dd,cAAc,GAAG2I,WAAjB,EAA1D,MAA8F,CAAC,CAAnG,EAAsG;AACpGN,QAAAA,WAAW,GAAGC,cAAKC,MAAL,CAAY,YAAZ,YAA6BvI,cAAc,GAAG2I,WAAjB,EAA7B,cAA+D1I,iBAAiB,GAAG2I,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAA/D,EAAd;AACD;;AACD,UAAMC,MAAM,GAAGP,cAAKC,MAAL,CAAY,OAAZ,YAAwBzI,SAAS,EAAjC,cAAuCC,YAAY,GAAG6I,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAvC,EAAf;;AAEA,UAAIP,WAAJ,EAAiB;AACfD,QAAAA,eAAe,cAAOC,WAAP,CAAf;AACD;;AACD,UAAIQ,MAAJ,EAAY;AACVT,QAAAA,eAAe,GAAGA,eAAe,aAAMA,eAAN,eAA0B/F,UAA1B,eAAyCwG,MAAzC,cAAuDxG,UAAvD,gBAAuEwG,MAAvE,CAAjC;AACD;;AACD,UAAIT,eAAJ,EAAqB;AACnBA,QAAAA,eAAe,IAAI,GAAnB;AAEA,eAAOE,cAAKC,MAAL,CAAY,oBAAZ,YAAqCO,OAAO,CAACC,GAAR,CAAYC,QAAjD,cAA6D,KAAKxI,KAAL,CAAWsB,OAAxE,GAAmFsG,eAAnF,CAAP;AACD;;AAED,aAAOE,cAAKC,MAAL,CAAY,iBAAZ,YAAkCO,OAAO,CAACC,GAAR,CAAYC,QAA9C,cAA0D,KAAKxI,KAAL,CAAWsB,OAArE,EAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,+BAAsBmH,UAAtB,EAAsE;AAAA,UAApCC,YAAoC,uEAArB,EAAqB;AAAA,UAAjBC,UAAiB,uEAAJ,EAAI;;AACpE,UAAMC,MAAM,mCACPF,YADO;AAEVG,QAAAA,eAAe,EAAEpJ,iBAAiB,EAFxB;AAGVqJ,QAAAA,UAAU,EAAEvJ,YAAY,EAHd;AAIVwJ,QAAAA,WAAW,EAAE,KAAK/I,KAAL,CAAWsB;AAJd,QAAZ;;AAOA,UAAM0H,IAAI,mCACLL,UADK;AAERtG,QAAAA,OAAO,EAAE7C,cAAc,EAFf;AAGRyJ,QAAAA,MAAM,EAAE,KAAKjJ,KAAL,CAAWkJ,WAAX,CAAuBC,QAAvB,EAHA;AAIRhH,QAAAA,EAAE,EAAE7C,SAAS,EAJL;AAKR8J,QAAAA,MAAM,EAAElG,gBAAOC,QAAP,CAAgBC,QALhB;AAMRiG,QAAAA,SAAS,EAAE,KAAKrJ,KAAL,CAAWkJ,WAAX,CAAuBI,MAAvB,CAA8BD;AANjC,QAAV;;AASA,UAAI,CAACZ,UAAL,EAAiB;AACf,cAAMc,KAAK,CAAC,qDAAD,CAAX;AACD;;AAED,WAAKvJ,KAAL,CAAWwJ,QAAX,CAAoBvB,OAApB,CAA4BwB,mBAA5B,CAAgDhB,UAAhD,EAA4D;AAC1DiB,QAAAA,IAAI,EAAE,CAAC,aAAD,CADoD;AAE1Dd,QAAAA,MAAM,EAANA,MAF0D;AAG1DI,QAAAA,IAAI,EAAJA;AAH0D,OAA5D;AAKD;;;KAGH;;;AACA,IAAMrJ,QAAQ,GAAG,IAAID,OAAJ,EAAjB;eAEeC,Q","sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\nimport util from 'util';\n\nimport {includes} from 'lodash';\nimport uuid from 'uuid';\nimport window from 'global/window';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {MEETING_ERRORS} from '../constants';\nimport StaticConfig from '../common/config';\nimport BrowserDetection from '../common/browser-detection';\n\nimport {\n  error, eventType, errorCodes as ERROR_CODE, OS_NAME, UNKNOWN, CLIENT_NAME\n} from './config';\n\nconst OSMap = {\n  'Chrome OS': OS_NAME.chrome,\n  macOS: OS_NAME.MAC,\n  Windows: OS_NAME.WINDOWS,\n  iOS: OS_NAME.IOS,\n  Android: OS_NAME.ANDROID,\n  Linux: OS_NAME.LINUX\n};\n\nconst {\n  getOSName,\n  getOSVersion,\n  getBrowserName,\n  getBrowserVersion\n} = BrowserDetection();\n\n/**\n * @description Metrics handles all the call metrics events\n * @export\n * @class Metrics\n */\nclass Metrics {\n  /**\n     * Create Metrics Object\n     * @constructor\n     * @public\n     * @memberof Meetings\n     */\n  constructor() {\n    if (!Metrics.instance) {\n    /**\n     * @instance\n     * @type {Array}\n     * @private\n     * @memberof Metrics\n     */\n      this._events = [];\n      /**\n     * @instance\n     * @type {MeetingCollection}\n     * @private\n     * @memberof Metrics\n     */\n      this.meetingCollection = null;\n      /**\n     * @instance\n     * @type {MeetingCollection}\n     * @private\n     * @memberof Metrics\n     */\n      this.keys = Object.values(eventType);\n      /**\n       * @instance\n       * @type {Metrics}\n       * @private\n       * @memberof Metrics\n       */\n      Metrics.instance = this;\n    }\n\n    return Metrics.instance;\n  }\n\n  /**\n   * Initializes the Metrics singleton with a meeting Collection.\n   *\n   * @param {Object} meetingCollection meetings object\n   * @param {Object} webex  webex SDK object\n   *\n   * @returns {void}\n   */\n  initialSetup(meetingCollection, webex) {\n    this.meetingCollection = meetingCollection;\n    this.webex = webex;\n  }\n\n  /**\n   * poste Meeting event metrics\n   * @param {object} options {meetingId/meeting} as a json object\n   * @param {Meeting} options.meeting Meeting object\n   * @param {String} options.meetingId\n   * @param {object} options.data\n   * @param {object} options.event\n   * @returns {object} null\n   */\n  postEvent(options) {\n    const {meetingId, data = {}, event} = options;\n    let {meeting} = options;\n\n    if (this.keys.indexOf(event) === -1) {\n      LoggerProxy.logger.error(`Metrics:index#postEvent --> Event ${event} doesn't exist in dictionary`);\n    }\n\n    if (!meeting && meetingId) {\n      meeting = this.meetingCollection.get(meetingId);\n    }\n\n    if (meeting) {\n      if (!meeting.callEvents) {\n        meeting.callEvents = [];\n      }\n      if (event === eventType.MEDIA_QUALITY) {\n        data.event = event;\n        meeting.sendMediaQualityAnalyzerMetrics(data);\n      }\n      else {\n        meeting.callEvents.push(event);\n        data.event = event;\n        meeting.sendCallAnalyzerMetrics(data);\n      }\n    }\n\n    else {\n      LoggerProxy.logger.info(`Metrics:index#postEvent --> Event received for meetingId:${meetingId}, but meeting not found in collection.`);\n    }\n  }\n\n  /**\n   *  Docs for Call analyzer metrics\n  *   https://sqbu-github.cisco.com/WebExSquared/call-analyzer/wiki\n  *   https://sqbu-github.cisco.com/WebExSquared/event-dictionary/blob/master/diagnostic-events.raml\n */\n\n  initPayload(eventType, identifiers, options) {\n    const payload = {\n      eventId: uuid.v4(),\n      version: 1,\n      origin: {\n        buildType: 'prod',\n        name: 'endpoint',\n        networkType: 'unknown',\n        userAgent: this.userAgentToString(),\n        clientInfo: {\n          clientType: options.clientType,\n          clientVersion: `${CLIENT_NAME}/${this.webex.version}`,\n          osVersion: getOSVersion() || 'unknown',\n          subClientType: options.subClientType,\n          os: this.getOsName(),\n          browser: getBrowserName(),\n          browserVersion: getBrowserVersion()\n        }\n      },\n      originTime: {\n        triggered: new Date().toISOString()\n      },\n      senderCountryCode: this.webex.meetings.geoHintInfo?.countryCode,\n      event: {\n        name: eventType,\n        canProceed: true,\n        identifiers,\n        eventData: {webClientDomain: window.location.hostname}\n      }\n    };\n\n    // TODO: more options should be checked and some of them should be mandatory in certain conditions\n    if (options) {\n      if (Object.prototype.hasOwnProperty.call(options, 'canProceed')) {\n        payload.event.canProceed = options.canProceed;\n      }\n      if (options.errors) {\n        payload.event.errors = options.errors;\n      }\n      if (options.mediaType) {\n        payload.event.mediaType = options.mediaType;\n      }\n      if (options.trigger) {\n        payload.event.trigger = options.trigger;\n      }\n      if (options.pstnAudioType) {\n        payload.event.pstnAudioType = options.pstnAudioType;\n      }\n      if (options.mediaCapabilities) {\n        payload.event.mediaCapabilities = options.mediaCapabilities;\n      }\n      if (options.recoveredBy) {\n        payload.event.recoveredBy = options.recoveredBy;\n      }\n    }\n\n    return payload;\n  }\n\n  /**\n   * returns metrics friendly OS versions\n   * @param {String} osName Os name\n   * @returns {String}\n   * @private\n   * @memberof Metrics\n   */\n  getOsName() {\n    return OSMap[getOSName()] ?? OS_NAME.OTHERS;\n  }\n\n  /**\n   * get the payload specific for a media quality event through call analyzer\n   * @param {String} eventType the event name\n   * @param {Object} identifiers contains the identifiers needed for CA\n   * @param {String} identifiers.correlationId\n   * @param {String} identifiers.locusUrl\n   * @param {String} identifiers.locusId\n   * @param {Object} options\n   * @param {Object} options.intervalData\n   * @param {String} options.clientType\n   * @returns {Object}\n   * @public\n   * @memberof Metrics\n   */\n  initMediaPayload(eventType, identifiers, options) {\n    const payload = {\n      eventId: uuid.v4(),\n      version: 1,\n      origin: {\n        buildType: 'prod',\n        name: 'endpoint',\n        networkType: options.networkType || UNKNOWN,\n        userAgent: this.userAgentToString(),\n        clientInfo: {\n          clientType: options.clientType, // TODO: Only clientType: 'TEAMS_CLIENT' is whitelisted\n          clientVersion: `${CLIENT_NAME}/${this.webex.version}`,\n          os: this.getOsName(),\n          osVersion: getOSVersion() || UNKNOWN,\n          subClientType: options.subClientType,\n          browser: getBrowserName(),\n          browserVersion: getBrowserVersion()\n        }\n      },\n      originTime: {\n        triggered: new Date().toISOString()\n      },\n      senderCountryCode: this.webex.meetings.geoHintInfo?.countryCode,\n      event: {\n        name: eventType,\n        canProceed: true,\n        identifiers,\n        intervals: [options.intervalData],\n        eventData: {webClientDomain: window.location.hostname},\n        sourceMetadata: {\n          applicationSoftwareType: CLIENT_NAME,\n          applicationSoftwareVersion: this.webex.version,\n          mediaEngineSoftwareType: getBrowserName() || 'browser',\n          mediaEngineSoftwareVersion: getOSVersion() || UNKNOWN,\n          startTime: new Date().toISOString()\n        }\n      }\n    };\n\n    return payload;\n  }\n\n  /**\n   * This function Parses a Locus error and returns a diagnostic event payload.\n   * It should keep updating from:\n   * https://sqbu-github.cisco.com/WebExSquared/spark-client-framework/blob/master/spark-client-framework/Adapters/TelephonyAdapter/TelephonyAdapter.cpp#L920\n   *\n   * @param {Object} err the error Object from Locus response\n   * @param {boolean} showToUser true if a toast is shown to user\n   * @returns {{showToUser: boolean, category: string, errorDescription: string,\n   *  errorCode: number, errorData: *, fatal: boolean, name: string}}\n   */\n  parseLocusError(err, showToUser) {\n    let errorCode;\n\n    if (err && err.body && err.body.errorCode) {\n      switch (ERROR_CODE[err.body.errorCode]) {\n        case MEETING_ERRORS.FREE_USER_MAX_PARTICIPANTS_EXCEEDED:\n          errorCode = 3007;\n          break;\n        case MEETING_ERRORS.PAID_USER_MAX_PARTICIPANTS_EXCEEDED:\n        case MEETING_ERRORS.SERVICE_MAX_PARTICIPANTS_EXCEEDED:\n          errorCode = 3002;\n          break;\n        case MEETING_ERRORS.INACTIVE:\n          errorCode = 4001;\n          break;\n        case MEETING_ERRORS.EXCEEDED_MAX_JOINED_PARTICIPANTS:\n        case MEETING_ERRORS.EXCEEDED_SERVICE_MAX_PARTICIPANTS:\n          errorCode = 3001;\n          break;\n        case MEETING_ERRORS.MEETING_IS_LOCKED:\n          errorCode = 4002;\n          break;\n        case MEETING_ERRORS.MEETING_IS_TERMINATING:\n          errorCode = 4003;\n          break;\n        case MEETING_ERRORS.MEETING_REQUIRE_MODERATOR_PIN_INTENT:\n          errorCode = 4004;\n          break;\n        case MEETING_ERRORS.MEETING_REQUIRE_MODERATOR_PIN:\n          errorCode = 4005;\n          break;\n        case MEETING_ERRORS.MEETING_REQUIRE_MODERATOR_ROLE:\n          errorCode = 4006;\n          break;\n        case MEETING_ERRORS.JOIN_RESTRICTED_USER:\n        case MEETING_ERRORS.GET_RESTRICTED_USER:\n        case MEETING_ERRORS.CREATE_MEDIA_RESTRICTED_USER:\n          errorCode = 3005;\n          break;\n        case MEETING_ERRORS.JOIN_RESTRICTED_USER_NOT_IN_ROOM:\n          errorCode = 4007;\n          break;\n        case MEETING_ERRORS.MEETING_NOT_FOUND:\n          errorCode = 4011;\n          break;\n        case MEETING_ERRORS.NOT_WEBEX_SITE:\n          errorCode = 4012;\n          break;\n        case MEETING_ERRORS.INVALID_JOIN_TIME:\n          errorCode = 4013;\n          break;\n        case MEETING_ERRORS.PHONE_NUMBER_NOT_A_NUMBER:\n          errorCode = 4016;\n          break;\n        case MEETING_ERRORS.PHONE_NUMBER_TOO_LONG:\n          errorCode = 4017;\n          break;\n        case MEETING_ERRORS.INVALID_DIALABLE_KEY:\n          errorCode = 4018;\n          break;\n        case MEETING_ERRORS.ONE_ON_ONE_TO_SELF_NOT_ALLOWED:\n          errorCode = 4019;\n          break;\n        case MEETING_ERRORS.REMOVED_PARTICIPANT:\n          errorCode = 4020;\n          break;\n        case MEETING_ERRORS.MEETING_LINK_NOT_FOUND:\n          errorCode = 4021;\n          break;\n        case MEETING_ERRORS.PHONE_NUMBER_TOO_SHORT_AFTER_IDD:\n          errorCode = 4022;\n          break;\n        case MEETING_ERRORS.INVALID_INVITEE_ADDRESS:\n          errorCode = 4023;\n          break;\n        case MEETING_ERRORS.PMR_ACCOUNT_LOCKED:\n          errorCode = 4024;\n          break;\n        case MEETING_ERRORS.RESOURCE_GUEST_FORBIDDEN:\n          errorCode = 4025;\n          break;\n        case MEETING_ERRORS.PMR_ACCOUNT_SUSPENDED:\n          errorCode = 4026;\n          break;\n        case MEETING_ERRORS.EMPTY_PHONE_NUMBER_OR_COUNTRY_CODE:\n          errorCode = 4027;\n          break;\n        case MEETING_ERRORS.INVALID_SINCE_OR_SEQUENCE_HASH_IN_REQUEST:\n          errorCode = 1006;\n          break;\n        case MEETING_ERRORS.CONVERSATION_NOT_FOUND:\n          errorCode = 4028;\n          break;\n        case MEETING_ERRORS.RECORDING_CONTROL_NOT_SUPPORTED:\n        case MEETING_ERRORS.RECORDING_NOT_STARTED:\n        case MEETING_ERRORS.RECORDING_NOT_ENABLED:\n          errorCode = 4029;\n          break;\n        default:\n          errorCode = 4008;\n      }\n    }\n    else {\n      errorCode = 4008;\n    }\n\n    return this.generateErrorPayload(\n      errorCode, showToUser, error.name.LOCUS_RESPONSE, err\n    );\n  }\n\n\n  generateErrorPayload(errorCode, shownToUser, name, err) {\n    if (error.errors[errorCode]) {\n      const errorPayload = {\n        shownToUser: shownToUser || false,\n        category: error.errors[errorCode][2],\n        errorDescription: error.errors[errorCode][0],\n        errorCode,\n        fatal: !includes(error.notFatalErrorList, errorCode),\n        name: name || error.name.OTHER\n      };\n\n      if (err && err.body) {\n        errorPayload.errorData = err.body;\n      }\n\n      return errorPayload;\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns a formated string of the user agent.\n   *\n   * @returns {string} formatted user agent information\n   */\n  userAgentToString() {\n    let userAgentOption;\n    let browserInfo;\n    const clientInfo = util.format('client=%s', `${StaticConfig.meetings.metrics.clientName}`);\n\n    if (['chrome', 'firefox', 'msie', 'msedge', 'safari'].indexOf(getBrowserName().toLowerCase()) !== -1) {\n      browserInfo = util.format('browser=%s', `${getBrowserName().toLowerCase()}/${getBrowserVersion().split('.')[0]}`);\n    }\n    const osInfo = util.format('os=%s', `${getOSName()}/${getOSVersion().split('.')[0]}`);\n\n    if (browserInfo) {\n      userAgentOption = `(${browserInfo}`;\n    }\n    if (osInfo) {\n      userAgentOption = userAgentOption ? `${userAgentOption}; ${clientInfo}; ${osInfo}` : `${clientInfo}; (${osInfo}`;\n    }\n    if (userAgentOption) {\n      userAgentOption += ')';\n\n      return util.format('webex-js-sdk/%s %s', `${process.env.NODE_ENV}-${this.webex.version}`, userAgentOption);\n    }\n\n    return util.format('webex-js-sdk/%s', `${process.env.NODE_ENV}-${this.webex.version}`);\n  }\n\n  /**\n   * Uploads given metric to the Metrics service as an operational metric.\n   * Metadata about the environment such as browser, OS, SDK and their versions\n   * are automatically added when the metric is sent.\n   *\n   * The Metrics service will send an operational metric to InfluxDB for\n   * aggregation.\n   * See https://confluence-eng-gpk2.cisco.com/conf/display/WBXT/Getting+started+with+Metrics+Service.\n   *\n   * @param {string} metricName  Name of the metric (measurement) to send\n   * @param {Object} metricFields  Key-valye pairs of data or values about this metric\n   * @param {Object} metricTags  Key-value pairs of metric metadata\n   *\n   * @returns {void}\n   */\n  sendOperationalMetric(metricName, metricFields = {}, metricTags = {}) {\n    const fields = {\n      ...metricFields,\n      browser_version: getBrowserVersion(),\n      os_version: getOSVersion(),\n      sdk_version: this.webex.version\n    };\n\n    const tags = {\n      ...metricTags,\n      browser: getBrowserName(),\n      org_id: this.webex.credentials.getOrgId(),\n      os: getOSName(),\n      domain: window.location.hostname,\n      client_id: this.webex.credentials.config.client_id\n    };\n\n    if (!metricName) {\n      throw Error('Missing operational metric name. Please provide one');\n    }\n\n    this.webex.internal.metrics.submitClientMetrics(metricName, {\n      type: ['operational'],\n      fields,\n      tags\n    });\n  }\n}\n\n// Export Metrics singleton ---------------------------------------------------\nconst instance = new Metrics();\n\nexport default instance;\n"]}