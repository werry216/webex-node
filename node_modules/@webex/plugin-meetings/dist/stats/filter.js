"use strict";

var _Reflect$construct = require("@babel/runtime-corejs2/core-js/reflect/construct");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _readableStream = require("readable-stream");

var _transformer = _interopRequireDefault(require("../stats/transformer"));

var _data = _interopRequireDefault(require("../stats/data"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

/**
 * Reforms the interesting data from an RTCStatsReport to a new format
 */
var StatsFilter = /*#__PURE__*/function (_Transform) {
  (0, _inherits2.default)(StatsFilter, _Transform);

  var _super = _createSuper(StatsFilter);

  /**
   * Tells the Stream we're operating in objectMode
   * @private
   */
  function StatsFilter() {
    (0, _classCallCheck2.default)(this, StatsFilter);
    return _super.call(this, {
      objectMode: true
    });
  }
  /**
   * Filters out data on the RTCStatsReport to the data around call quality and pushes it as a WebRTCData object
   * @param {RTCStatsReport} report
   * @param {*} encoding
   * @param {Function} callback
   * @private
   * @returns {undefined}
   */


  (0, _createClass2.default)(StatsFilter, [{
    key: "_transform",
    value: function _transform(report, encoding, callback) {
      if (!report) {
        callback();
        return;
      }

      var data = _transformer.default.transform(report);

      var push = new _data.default(data);
      this.push({
        data: push
      });
      callback();
    }
  }]);
  return StatsFilter;
}(_readableStream.Transform);

exports.default = StatsFilter;
//# sourceMappingURL=filter.js.map
