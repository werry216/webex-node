{"version":3,"sources":["index.js"],"names":["WebRTCStats","attrs","options","optionalCreateOptions","MEETINGS","senders","receivers","meetingRef","statsConfig","populate","config","setConfig","meeting","associateMeeting","addSenders","addReceivers","useConfig","forEach","TypeError","sender","addSender","StatsUtil","generateSingularOptions","STATS","SENDERS","type","SENDER","id","MeetingStats","newSender","newReceiver","receiver","addReceiver","RECEIVERS","RECEIVER","v","k","destroySender","destroyReceiver","getSender","stream","destroy","getReceiver","StatelessWebexPlugin"],"mappings":"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","sourcesContent":["import {forEach} from 'lodash';\nimport {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport {\n  MEETINGS,\n  STATS\n} from '../constants';\nimport MeetingStats from '../stats/stats';\nimport StatsUtil from '../stats/util';\n\n/**\n * @class WebRTCStats\n */\nexport default class WebRTCStats extends StatelessWebexPlugin {\n    namespace = MEETINGS;\n\n    /**\n    *\n    * @param {Object} attrs\n    * @param {Object} options\n    * @param {Object} [optionalCreateOptions]\n   */\n    constructor(attrs, options, optionalCreateOptions) {\n      super({}, options);\n      /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof WebRTCStats\n     */\n      this.attrs = attrs;\n      /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof WebRTCStats\n     */\n      this.options = options;\n      /**\n     * @instance\n     * @type {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n      this.senders = {};\n      /**\n     * @instance\n     * @type {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n      this.receivers = {};\n      /**\n     * @instance\n     * @type {Meeting}\n     * @private\n     * @memberof WebRTCStats\n     */\n      this.meetingRef = null;\n      /**\n     * @instance\n     * @type {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n      this.statsConfig = null;\n      this.populate(optionalCreateOptions);\n    }\n\n    /**\n     * @param {Object} [optionalCreateOptions]\n     * @param {Object} optionalCreateOptions.config\n     * @param {Meeting} optionalCreateOptions.meeting\n     * @param {Object} optionalCreateOptions.senders\n     * @param {Object} optionalCreateOptions.receivers\n     * @returns {WebRTCStats}\n     * @private\n     * @memberof WebRTCStats\n     */\n    populate(optionalCreateOptions) {\n      if (optionalCreateOptions) {\n        if (optionalCreateOptions.config) {\n          this.setConfig(optionalCreateOptions.config);\n        }\n        if (optionalCreateOptions.meeting) {\n          this.associateMeeting(optionalCreateOptions.meeting);\n        }\n        if (optionalCreateOptions.senders) {\n          this.addSenders(optionalCreateOptions.senders);\n        }\n        if (optionalCreateOptions.receivers) {\n          this.addReceivers(optionalCreateOptions.receivers);\n        }\n      }\n\n      return this;\n    }\n\n    /**\n     * @param {Object} config\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    setConfig(config) {\n      this.statsConfig = config;\n    }\n\n    /**\n     * @param {Meeting} meeting\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    associateMeeting(meeting) {\n      this.meetingRef = meeting;\n\n      return this;\n    }\n\n    /**\n     * @param {Object} senders\n     * @param {Boolean} useConfig\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    addSenders(senders, useConfig = false) {\n      if (!senders.forEach) {\n        throw new TypeError('Stats senders must be created with an iterable array of senders to act on.');\n      }\n      senders.forEach((sender) => {\n        this.addSender(sender, useConfig);\n      });\n\n      return this;\n    }\n\n    /**\n     * @param {Object} sender\n     * @param {Boolean} useConfig\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    addSender(sender, useConfig = false) {\n      if (sender) {\n        if (useConfig) {\n          StatsUtil.generateSingularOptions(sender, this.statsConfig, this.meetingRef, STATS.SENDERS);\n        }\n        sender.type = STATS.SENDER;\n        this.senders[sender.id] = new MeetingStats(this.attrs, this.options, sender);\n      }\n\n      return this;\n    }\n\n    /**\n     *\n     * @param {String} id\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    addSenderStats(id) {\n      const newSender = new MeetingStats(this.attrs, this.options);\n\n      this.senders[id] = newSender;\n\n      return newSender;\n    }\n\n    /**\n     *\n     * @param {String} id\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    addReceiverStats(id) {\n      const newReceiver = new MeetingStats(this.attrs, this.options);\n\n      this.receivers[id] = newReceiver;\n\n      return newReceiver;\n    }\n\n    /**\n     * @param {Object} receivers\n     * @param {boolean} useConfig\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    addReceivers(receivers, useConfig = false) {\n      if (!receivers.forEach) {\n        throw new TypeError('Stats receivers must be created with an iterable array of receivers to act on.');\n      }\n      receivers.forEach((receiver) => {\n        this.addReceiver(receiver, useConfig);\n      });\n\n      return this;\n    }\n\n    /**\n     * @param {Object} receiver\n     * @param {boolean} useConfig\n     * @returns {WebRTCStats}\n     * @public\n     * @memberof WebRTCStats\n     */\n    addReceiver(receiver, useConfig = false) {\n      if (receiver) {\n        if (useConfig) {\n          StatsUtil.generateSingularOptions(receiver, this.statsConfig, this.meetingRef, STATS.RECEIVERS);\n        }\n        receiver.type = STATS.RECEIVER;\n        this.receivers[receiver.id] = new MeetingStats(this.attrs, this.options, receiver);\n      }\n\n      return this;\n    }\n\n    /**\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n    getReceivers() {\n      return this.receivers;\n    }\n\n    /**\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n    getSenders() {\n      return this.senders;\n    }\n\n    /**\n     * @param {String} id\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n    getSender(id) {\n      return this.senders[id];\n    }\n\n    /**\n     * @param {String} id\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n    getReceiver(id) {\n      return this.receivers[id];\n    }\n\n    /**\n     * @returns {Object}\n     * @public\n     * @memberof WebRTCStats\n     */\n    destroySenders() {\n      forEach(this.senders, (v, k) => {\n        this.destroySender(k);\n      });\n    }\n\n    /**\n     * @returns {undefined}\n     * @public\n     * @memberof WebRTCStats\n     */\n    destroyReceivers() {\n      forEach(this.receivers, (v, k) => {\n        this.destroyReceiver(k);\n      });\n    }\n\n    /**\n     * @param {String} id\n     * @returns {undefined}\n     * @public\n     * @memberof WebRTCStats\n     */\n    destroySender(id) {\n      let sender = this.getSender(id);\n\n      if (sender) {\n        if (sender.stream) {\n          sender.stream.destroy();\n        }\n      }\n      sender = null;\n      delete this.receivers[id];\n    }\n\n    /**\n     * @param {String} id\n     * @returns {undefined}\n     * @public\n     * @memberof WebRTCStats\n     */\n    destroyReceiver(id) {\n      let receiver = this.getReceiver(id);\n\n      if (receiver) {\n        if (receiver.stream) {\n          receiver.stream.destroy();\n        }\n      }\n      receiver = null;\n      delete this.receivers[id];\n    }\n}\n"]}