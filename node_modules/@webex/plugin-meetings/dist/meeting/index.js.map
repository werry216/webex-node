{"version":3,"sources":["index.js"],"names":["isBrowser","logRequest","request","header","success","failure","LoggerProxy","logger","info","then","arg","catch","error","Meeting","attrs","options","MEETINGS","mediaDirection","audioVideo","VIDEO_RESOLUTIONS","mediaProperties","localQualityLevel","sharePreferences","sendAudio","sendVideo","sendShare","warn","video","deviceId","preferredVideoDevice","lastVideoDeviceId","getVideoDeviceId","setVideoDeviceId","Media","getSupportedDevice","reject","MediaError","devicePermissions","getUserMedia","isSharing","shareStatus","SHARE_STATUS","LOCAL_SHARE_ACTIVE","config","metricName","METRICS_OPERATIONAL_MEASURES","GET_USER_MEDIA_FAILURE","data","correlation_id","correlationId","locus_id","locusUrl","split","pop","reason","message","stack","metadata","type","name","Metrics","sendOperationalMetric","getDevices","id","uuid","v4","userId","orgId","resource","deviceUrl","roapSeq","ROAP_SEQ_PRE","meetingInfo","members","Members","locus","url","parent","webex","roap","Roap","reconnectionManager","ReconnectionManager","audio","meetingFiniteStateMachine","MeetingStateMachine","create","stats","internalStats","conversationUrl","sipUri","partner","owner","hostId","policy","meetingRequest","MeetingRequest","MediaProperties","inMeetingActions","InMeetingActions","NO_SHARE","get","shareTransceiver","peerConnection","shareDirection","direction","trackReadyState","sender","track","readyState","activeShare","LIVE","offersToSendData","SENDRECV","configurable","callEvents","floorGrantPending","mediaQualityMetrics","statsAnalyzer","mqaProcessor","networkStatus","locusInfo","LocusInfo","updateMeetingObject","bind","recording","deferJoin","undefined","hasWebsocketConnected","internal","mercury","connected","lastVideoLayoutInfo","layoutType","main","content","setUpLocusInfoListeners","init","setUpLocusInfoSelfListener","setUpLocusInfoMeetingListener","setUpLocusFullStateListener","setUpLocusUrlListener","setUpLocusHostListener","setUpLocusSelfListener","setUpLocusParticipantsListener","setupLocusControlsListener","setUpLocusMediaSharesListener","setUpLocusInfoMeetingInfoListener","setUpLocusInfoAssignHostListener","setUpLocusInfoMediaInactiveListener","on","EVENTS","DISCONNECT_DUE_TO_INACTIVITY","res","locusId","Trigger","trigger","file","function","REQUEST_UPLOAD_LOGS","reconnection","autoRejoin","reconnect","EVENT_TRIGGERS","MEETING_SELF_LEFT","LOCUS_INFO_CAN_ASSIGN_HOST","payload","MEETING_ACTIONS_UPDATE","canAssignHost","canLock","getCanLock","canUnlock","getCanUnlock","setCanAssignHost","LOCUSINFO","FULL_STATE_MEETING_STATE_CHANGE","MEETING_STATE_CHANGE","FULL_STATE_TYPE_UPDATE","locusFullStateTypeUpdate","event","trackingId","identifiers","locusStartTime","fullState","lastActive","MQA_STATS","CA_TYPE","initMediaPayload","initPayload","getAnalyzerMetricsPrePayload","metrics","submitCallDiagnosticEvents","NETWORK_STATUS","DISCONNECTED","MEETINGS_NETWORK_DISCONNECTED","CONNECTED","MEETINGS_NETWORK_CONNECTED","LOCUS_INFO_UPDATE_SELF","locusSelfUpdate","newSelf","state","MEETING_STATE","STATES","JOINED","share","LOCUS_INFO_UPDATE_HOST","locusHostUpdate","LOCUS_INFO_UPDATE_PARTICIPANTS","locusParticipantsUpdate","CONTROLS_RECORDING_UPDATED","modifiedBy","lastModified","RECORDING_STATE","RECORDING","MEETING_STARTED_RECORDING","IDLE","MEETING_STOPPED_RECORDING","PAUSED","MEETING_PAUSED_RECORDING","RESUMED","MEETING_RESUMED_RECORDING","LOCUS_INFO_UPDATE_MEDIA_SHARES","current","contentId","disposition","previous","newShareStatus","selfId","FLOOR_ACTION","GRANTED","REMOTE_SHARE_ACTIVE","shareTrack","stopShare","skipSignalingCheck","log","RELEASED","oldShareStatus","MEETING_STOPPED_SHARING_REMOTE","MEETING_STOPPED_SHARING_LOCAL","SHARE_STOPPED_REASON","SELF_STOPPED","sendStartedSharingRemote","MEETING_STARTED_SHARING_REMOTE","memberId","updateShare","receiveShare","finally","MEETING_STARTED_SHARING_LOCAL","postEvent","eventType","LOCAL_SHARE_FLOOR_GRANTED","meeting","locusMediaSharesUpdate","LOCUS_INFO_UPDATE_URL","locusUrlUpdate","MEETING_LOCKED","MEETING_UNLOCKED","MEETING_INFO_UPDATED","newCanLock","newCanUnlock","self","moderator","MeetingUtil","canUserLock","canUserUnlock","getCanAssignHost","setCanLock","setCanUnlock","LOCAL_UNMUTE_REQUIRED","handleServerLocalUnmuteRequired","MEETING_SELF_UNMUTED_BY_OTHERS","SELF_REMOTE_MUTE_STATUS_UPDATED","handleServerRemoteMuteUpdate","muted","unmuteAllowed","isMuted","MEETING_SELF_MUTED_BY_OTHERS","LOCAL_UNMUTE_REQUESTED","MEETING_SELF_REQUESTED_TO_UNMUTE","SELF_UNADMITTED_GUEST","MEETING_SELF_LOBBY_WAITING","LOBBY_ENTERED","SELF_ADMITTED_GUEST","MEETING_SELF_GUEST_ADMITTED","LOBBY_EXITED","MEDIA_INACTIVITY","MEETING_MEDIA_INACTIVE","MEDIA_STATUS_CHANGE","status","updateMediaStatus","actual","expected","receiveAudio","receiveVideo","REMOTE_RESPONSE","remote","remoteDeclined","leave","DESTROY_MEETING","wirelessShare","onended","stop","shouldLeave","cleanUp","meetingId","object","length","forEach","key","invitee","alertIfActive","addMember","memberIds","admitMembers","removeMember","mute","muteMember","transferHostToMember","mqaInterval","clearInterval","automaticMetrics","StatsMetrics","getStats","initialize","setStats","setInterval","processMQAData","mqaMetricsInterval","MQAProcessor","DATA_PLACEMENTS","sendRecvData","toLowerCase","endsWith","STATS","SENDER","getSender","RECEIVER","getReceiver","mqa","getMQA","interval","getSlice","process","override","createStats","StatsUtil","generateOptions","CONFIG","WebRTCStats","destroySenders","destroyReceivers","isSelf","body","errors","setSipUri","sipMeetingUri","setLocus","participants","getLocusPartner","_CALL_","person","sipUrl","seq","mtgLocus","mediaConnections","mediaId","host","initialSetup","pc","ontrack","MEDIA_ID","AUDIO_TRACK","VIDEO_TRACK","SHARE_TRACK","mediaTrack","trackMediaID","transceiver","mid","target","audioTransceiver","videoTransceiver","receiver","MUTE_AUDIO_FAILURE","EVENT_TYPES","REMOTE_AUDIO","setRemoteAudioTrack","REMOTE_VIDEO","setRemoteVideoTrack","REMOTE_SHARE","setRemoteShare","startAnalyzer","MEDIA_READY","stream","MediaUtil","createMediaStream","unsetRemoteMedia","unsetRemoteTracks","closeRemoteTracks","remoteAudioTrack","remoteVideoTrack","remoteShare","triggerMediaStoppedEvent","mediaType","MEDIA_STOPPED","stopTrack","stopTracks","isTrackStopped","ENDED","isWrongReadyState","all","LOCAL","audioTrack","videoTrack","emitEvent","settings","getSettings","setMediaSettings","echoCancellation","noiseSuppression","mediaSettings","setLocalAudioTrack","applyClientStateLocally","sendLocalMediaReadyEvent","aspectRatio","frameRate","height","width","setLocalVideoTrack","localStream","getTrack","localShare","setLocalShareTrack","contentTracks","displaySurface","cursor","screen","handleShareTrackEnded","LOCAL_SHARE","audioStopped","videoStopped","unsetLocalVideoTrack","unsetLocalShareTrack","ONLINE","MERCURY_CONNECTION_RESTORED","OFFLINE","MERCURY_CONNECTION_LOST","MERCURY_CONNECTION_FAILURE","PeerConnectionManager","close","unsetPeerConnection","detection","off","isUserInJoinedState","UserNotJoinedError","NoMediaEstablishedYetError","ParameterError","LOG_HEADER","handleClientRequest","MUTED","USER_INTERACTION","AUDIO","UNMUTED","UNMUTE_AUDIO_FAILURE","VIDEO","MUTE_VIDEO_FAILURE","UNMUTE_VIDEO_FAILURE","joinOptions","audioVideoOptions","join","joinResponse","getMediaStreams","addMedia","mediaResponse","media","local","JOIN_WITH_MEDIA_FAILURE","isMediaEstablished","currentMediaStatus","validate","ReconnectInProgress","resolve","MEETING_RECONNECTION_STARTING","MEETING_RECONNECTION_SUCCESS","MEETING_RECONNECTION_FAILURE","ReconnectionError","MEETING_RECONNECT_FAILURE","uploadLogs","reset","joinFailed","joinSuccess","rejoin","setCorrelationId","CALL_INITIATED","JOIN_ATTEMPT","MEETING_STATE_MACHINE","RINGING","ring","_JOIN_","resourceId","destination","meetingQuality","QUALITY_LEVELS","errorMessage","Error","setLocalQualityLevel","setRemoteQualityLevel","joinMeetingOptions","fail","JOIN_FAILURE","MEDIA_CAPABILITIES","mediaCapabilities","rx","share_audio","whiteboard","tx","MOVE_MEDIA","moveToResource","updateMedia","oldCorrelationId","meetings","meetingCollection","set","leaveMeeting","moveMeeting","delete","meetingState","FULL_STATE","ACTIVE","MeetingNotActiveError","isUserInLeftState","guest","isUserInIdleState","UserInLobbyError","validateOptions","setMediaPeerConnection","createPeerConnection","setMercuryListener","setPeerConnectionEvents","preMedia","attachMedia","remoteQualityLevel","enableRtx","setRemoteStream","startInternalStats","autoSendMQA","startMediaQualityMetrics","enableStatsAnalyzer","StatsAnalyzer","MEDIA_QUALITY","intervalMetadata","peerReflexiveIP","geoHintInfo","clientAddress","DEFAULT_IP","intervalData","networkType","MEETING_HIGH_PACKETLOSS","autoDowngradeEnabled","canUpdateMedia","HIGH","setLocalVideoQuality","MEDIUM","LOW","packetLossRatio","ADD_MEDIA_FAILURE","timerCount","joiningTimer","sendRoapMediaRequest","sdp","connectionState","CONNECTION_STATE","stabilityTimeout","setTimeout","PC_BAIL_TIMEOUT","once","clearTimeout","code","InvalidSdpError","CODE","MEETING_REMOVED_REASON","MEETING_CONNECTION_FAILED","signalingState","SDP","STABLE","previousSendShareStatus","setContentSlides","UPDATE_MEDIA_FAILURE","checkForStopShare","startShare","previousMediaDirection","sendTrack","receiveTrack","updateTransceiver","previousShareStatus","stopFloorRequest","delay","sharingModeIsActive","isSharingOutOfSync","isLocalShareLive","setMediaDirection","setLocalTracks","_INCOMING_","acknowledgeMeeting","response","ALERT_DISPLAYED","declineMeeting","decline","LEAVE","canProceed","leaveReason","CLIENT_LEAVE_REQUEST","MEETING_LEAVE_FAILURE","mediaShares","find","element","CONTENT","SHARE_INITIATED","changeMeetingFloor","personUrl","uri","resourceUrl","MEETING_SHARE_FAILURE","SHARE_STOPPED","STOP_FLOOR_REQUEST_FAILURE","startRecording","stopRecording","pauseRecording","resumeRecording","lockMeeting","unlockMeeting","tones","enableDTMF","sendDTMF","rejectWithErrorLog","renderInfo","layoutInfo","LAYOUT_TYPES","includes","mainWidth","Math","round","mainHeight","abs","contentWidth","contentHeight","changeVideoLayoutDebounced","onFullLocus","level","updateVideo","previousLevel","SET_MEETING_QUALITY_FAILURE","shareConstraints","getDisplayMedia","shareStream","GET_DISPLAY_MEDIA_FAILURE","USER_ENDED_SHARE_STREAMS","StatelessWebexPlugin"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\nimport {cloneDeep, isEqual, pick} from 'lodash';\nimport {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport {\n  MeetingNotActiveError, createMeetingsError, UserInLobbyError,\n  NoMediaEstablishedYetError, UserNotJoinedError, InvalidSdpError\n} from '../common/errors/webex-errors';\nimport StatsAnalyzer from '../statsAnalyzer';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport Trigger from '../common/events/trigger-proxy';\nimport Roap from '../roap/index';\nimport Media from '../media';\nimport MediaProperties from '../media/properties';\nimport MeetingStateMachine from '../meeting/state';\nimport createMuteState from '../meeting/muteState';\nimport LocusInfo from '../locus-info';\nimport PeerConnectionManager from '../peer-connection-manager';\nimport Metrics from '../metrics';\nimport {trigger, mediaType, eventType} from '../metrics/config';\nimport ReconnectionManager from '../reconnection-manager';\nimport MeetingRequest from '../meeting/request';\nimport Members from '../members/index';\nimport MeetingUtil from '../meeting/util';\nimport MediaUtil from '../media/util';\nimport WebRTCStats from '../stats/index';\nimport StatsMetrics from '../stats/metrics';\nimport StatsUtil from '../stats/util';\nimport ReconnectionError from '../common/errors/reconnection';\nimport ReconnectInProgress from '../common/errors/reconnection-in-progress';\nimport {\n  _CALL_,\n  _INCOMING_,\n  _JOIN_,\n  AUDIO,\n  CONNECTION_STATE,\n  CONTENT,\n  ENDED,\n  EVENT_TRIGGERS,\n  EVENT_TYPES,\n  EVENTS,\n  FLOOR_ACTION,\n  FULL_STATE,\n  LAYOUT_TYPES,\n  LIVE,\n  LOCUSINFO,\n  MEETING_REMOVED_REASON,\n  MEETING_STATE_MACHINE,\n  MEETING_STATE,\n  MEETINGS,\n  METRICS_OPERATIONAL_MEASURES,\n  MQA_STATS,\n  NETWORK_STATUS,\n  ONLINE,\n  OFFLINE,\n  PC_BAIL_TIMEOUT,\n  QUALITY_LEVELS,\n  RECORDING_STATE,\n  ROAP_SEQ_PRE,\n  SDP,\n  SENDRECV,\n  SHARE_STATUS,\n  SHARE_STOPPED_REASON,\n  STATS,\n  VIDEO_RESOLUTIONS,\n  VIDEO\n} from '../constants';\nimport ParameterError from '../common/errors/parameter';\nimport MediaError from '../common/errors/media';\nimport MQAProcessor from '../metrics/mqa-processor';\nimport BrowserDetection from '../common/browser-detection';\n\nimport InMeetingActions from './in-meeting-actions';\n\nconst {isBrowser} = BrowserDetection();\n\nconst logRequest = (request, {header = '', success = '', failure = ''}) => {\n  LoggerProxy.logger.info(header);\n\n  return request\n    .then((arg) => {\n      LoggerProxy.logger.info(success);\n\n      return arg;\n    })\n    .catch((error) => {\n      LoggerProxy.logger.error(failure, error);\n      throw error;\n    });\n};\n\n/**\n * MediaDirection\n * @typedef {Object} MediaDirection\n * @property {boolean} sendAudio\n * @property {boolean} receiveAudio\n * @property {boolean} sendVideo\n * @property {boolean} receiveVideo\n * @property {boolean} sendShare\n * @property {boolean} receiveShare\n * @property {boolean} isSharing\n */\n\n/**\n  * AudioVideo\n  * @typedef {Object} AudioVideo\n  * @property {Object} audio\n  * @property {String} audio.deviceId\n  * @property {Object} video\n  * @property {String} video.deviceId\n  */\n\n/**\n   * SharePreferences\n   * @typedef {Object} SharePreferences\n   * @property {Object} [shareConstraints]\n   * @property {Boolean} [highFrameRate]\n   */\n\n/**\n * JoinOptions\n * @typedef {Object} JoinOptions\n * @property {String} [resourceId]\n * @property {String} [pin]\n * @property {Boolean} [moderator]\n * @property {String|Object} [meetingQuality]\n * @property {String} [meetingQuality.local]\n * @property {String} [meetingQuality.remote]\n * @property {Boolean} [rejoin]\n */\n\n/**\n * SendOptions\n * @typedef {Object} SendOptions\n * @property {Boolean} sendAudio\n * @property {Boolean} sendVideo\n * @property {Boolean} sendShare\n */\n\n/**\n * Recording\n * @typedef {Object} Recording\n * @property {Object} state\n * @property {String} modifiedBy\n */\n\n/**\n  * Meeting State Change Event\n  * Emitted when ever there is a meeting state change\n  * @event meeting:stateChange\n  * @instance\n  * @type {Object}\n  * @property {String} currentState current state of the meeting\n  * @property {String} previousState previous state of the meeting\n  * @memberof Meeting\n  */\n\n/**\n  * Media Ready Event\n  * Emitted when a stream is ready to be rendered\n  * @event media:ready\n  * @instance\n  * @type {Object}\n  * @property {MediaStream} stream the media stream\n  * @property {String} type what type of stream, remote, local\n  * @memberof Meeting\n  */\n\n/**\n  * Media Stopped Event\n  * Emitted when a stream has stopped sending\n  * @event media:stopped\n  * @instance\n  * @type {Object}\n  * @property {String} type what type of stream, remote, local\n  * @memberof Meeting\n  */\n\n/**\n * Meeting Ringing Event\n * Emitted when this client should play a ringing sound, because this member is getting an incoming meeting\n * or sending out an incoming meeting\n * @event meeting:ringing\n * @instance\n * @type {Object}\n * @property {String} type // INCOMING or JOIN\n * @property {String} id\n * @memberof Meeting\n */\n\n/**\n * Meeting Ringing Stop Event\n * Emitted when this client should stop playing a ringing sound\n * @event meeting:ringingStop\n * @instance\n * @type {Object}\n * @property {Object} type\n * @property {Boolean} type.remoteAnswered\n * @property {Boolean} type.remoteDeclined\n * @property {String} id\n * @memberof Meeting\n */\n\n/**\n * Meeting Started Sharing Local Event\n * Emitted when this member starts sharing\n * @event meeting:startedSharingLocal\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Stopped Sharing Local Event\n * Emitted when this member stops sharing\n * @event meeting:stoppedSharingLocal\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Started Sharing Remote Event\n * Emitted when remote sharing starts\n * @event meeting:startedSharingRemote\n * @instance\n * @type {Object}\n * @property {Boolean} memberId id of the meeting member that started screen share\n * @memberof Meeting\n */\n\n/**\n * Meeting Stopped Sharing Remote Event\n * Emitted when remote screen sharing ends\n * @event meeting:stoppedSharingRemote\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Locked Event\n * Emitted when a meeting is locked\n * @event meeting:locked\n * @instance\n * @type {Object}\n * @property {Object} info\n * @memberof Meeting\n */\n\n/**\n * Meeting Unlocked Event\n * Emitted when a meeting is unlocked\n * @event meeting:unlocked\n * @instance\n * @type {Object}\n * @property {Object} info\n * @memberof Meeting\n */\n\n/**\n * Meeting Actions Update Event\n * Emitted when a user can take actions on a meeting such as lock, unlock, assign host\n * @event meeting:actionsUpdate\n * @instance\n * @type {Object}\n * @property {Boolean} canLock\n * @property {Boolean} canUnlock\n * @property {Boolean} canAssignHost\n * @memberof Meeting\n */\n\n/**\n * Meeting Unmuted By Others Event\n * Emitted when a member is unmuted by another member\n * @event meeting:self:unmutedByOthers\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n * Meeting Muted By Others Event\n * Emitted when a member is muted by another member\n * @event meeting:self:mutedByOthers\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @property {Boolean} payload.unmuteAllowed - whether the user is allowed to unmute self\n * @memberof Meeting\n */\n\n/**\n * Meeting Muted By Others Event\n * Emitted when the host(moderator)/co-host requests a user to unmute\n * @event meeting:self:requestedToUnmute\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n\n/**\n * Meeting Self Guest Admitted Event\n * Emitted when a joined user get admitted to the meeting by another member or host\n * @event meeting:self:guestAdmitted\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n * Meeting Self Lobby Waiting Event\n * Emitted when joined user enters the lobby and is waiting for the webex meeting to begin\n * @event meeting:self:lobbyWaiting\n * @instance\n * @type {Object}\n * @property {Object} reason Reason why user left the meeting\n * @memberof Meeting\n */\n\n/**\n * Meeting Self Left State\n * Emitted when user is inactive for more then 40 seconds, User can rejoin the meeting again\n * @event meeting:self:left\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n  * Reconnection Starting Event\n  * Emitted when reconnection of media to the active meeting was successful\n  * @event meeting:reconnectionStarting\n  * @instance\n  * @memberof Meeting\n  */\n\n/**\n  * Reconnection Success Event\n  * Emitted when reconnection of media to the active meeting was successful\n  * @event meeting:reconnectionSuccess\n  * @instance\n  * @type {Object}\n  * @property {Object} reconnect\n  * @memberof Meeting\n  */\n\n/**\n  * Reconnection Failure Event\n  * Emitted when reconnection of media to the active meeting was successful\n  * @event meeting:reconnectionFailure\n  * @instance\n  * @type {Object}\n  * @property {Error} error\n  * @memberof Meeting\n  */\n\n/**\n  * Meeting High Packet Loss Event\n  * Emitted when ever there is high packet loss detected\n  * @event meeting:highPacketLoss\n  * @type {Object}\n  * @property {String} mediaType Type of media experiencing packet loss\n  * @property {Number} packetLossRatio current packet loss ratio\n  * @memberof Meeting\n  */\n\n/**\n * @description Meeting is the crux of the plugin\n * @export\n * @class Meeting\n */\nexport default class Meeting extends StatelessWebexPlugin {\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} attrs\n   * @param {Object} options\n   * @constructor\n   * @memberof Meeting\n  */\n  constructor(attrs, options) {\n    super({}, options);\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.attrs = attrs;\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.options = options;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.id = uuid.v4();\n    /**\n     * Correlation ID used for network tracking of meeting join\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.correlationId = this.id;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.userId = attrs.userId;\n    /**\n     * Organization ID\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.orgId = attrs.orgId;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.resource = attrs.resource;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.deviceUrl = attrs.deviceUrl;\n    /**\n     * @description set you -1 as default values is 0 (used to idenfify if 1st roap request was sent)\n     * @instance\n     * @type {Number}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.roapSeq = ROAP_SEQ_PRE;\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    // TODO: needs to be defined as a class\n    this.meetingInfo = {};\n    /**\n     * @instance\n     * @type {Members}\n     * @public\n     * @memberof Meeting\n     */\n    this.members = new Members({locusUrl: (attrs.locus && attrs.locus.url)}, {parent: this.webex});\n    /**\n     * @instance\n     * @type {Roap}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.roap = new Roap({}, {parent: this.webex});\n    /**\n     * created later\n     * @instance\n     * @type {ReconnectionManager}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.reconnectionManager = new ReconnectionManager(this);\n    /**\n     * created later\n     * @instance\n     * @type {MuteState}\n     * @private\n     * @memberof Meeting\n     */\n    this.audio = null;\n    /**\n     * created later\n     * @instance\n     * @type {MuteState}\n     * @private\n     * @memberof Meeting\n     */\n    this.video = null;\n    /**\n     * @instance\n     * @type {MeetingStateMachine}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.meetingFiniteStateMachine = MeetingStateMachine.create(this);\n    /**\n     * @instance\n     * @type {WebRTCStats}\n     * @public\n     * @memberof Meeting\n     */\n    this.stats = null;\n    /**\n     * @instance\n     * @type {WebRTCStats}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.internalStats = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.conversationUrl = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.locusUrl = (attrs.locus && attrs.locus.url) || null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.sipUri = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.partner = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.type = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.owner = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.hostId = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.policy = null;\n    /**\n     * @instance\n     * @type {MeetingRequest}\n     * @private\n     * @memberof Meeting\n     */\n    this.meetingRequest = new MeetingRequest({}, options);\n\n    /**\n     * Passing only info as we send basic info for meeting added event\n     * @instance\n     * @type {MediaProperties}\n     * @public\n     * @memberof Meeting\n     */\n    this.mediaProperties = new MediaProperties();\n    /**\n     * @instance\n     * @type {InMeetingActions}\n     * @public\n     * @memberof Meeting\n    */\n    this.inMeetingActions = new InMeetingActions();\n    /**\n     * This is deprecated, please use shareStatus instead.\n     * @instance\n     * @type {Boolean}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     * @deprecated after v1.118.13\n     */\n    this.isSharing = false;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.shareStatus = SHARE_STATUS.NO_SHARE;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    Object.defineProperty(this, 'isLocalShareLive', {\n      get: () => {\n        const {shareTransceiver} = this.mediaProperties.peerConnection;\n        const shareDirection = shareTransceiver?.direction;\n        const trackReadyState = shareTransceiver?.sender?.track?.readyState;\n        const activeShare = trackReadyState === LIVE;\n        const offersToSendData = shareDirection === SENDRECV;\n\n        if (activeShare && offersToSendData) {\n          return true;\n        }\n\n        return false;\n      },\n      configurable: true\n    });\n    /**\n     * @instance\n     * @type {Array}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.callEvents = [];\n    /**\n     * There is a pending floor requested by the user\n     * @instance\n     * @type {floorGrantPending}\n     * @private\n     * @memberof Meeting\n     */\n    this.floorGrantPending = false;\n    /**\n     * @instance\n     * @type {MediaMetrics}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.mediaQualityMetrics = null;\n    /**\n     * @instance\n     * @type {StatsAnalyzer}\n     * @private\n     * @memberof Meeting\n     */\n    this.statsAnalyzer = null;\n    /**\n     * @instance\n     * @type {MQAProcessor}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.mqaProcessor = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.networkStatus = null;\n    /**\n     * Passing only info as we send basic info for meeting added event\n     * @instance\n     * @type {MeetingRequest}\n     * @private\n     * @memberof Meeting\n     */\n    this.locusInfo = new LocusInfo(this.updateMeetingObject.bind(this), this.webex, this.id);\n    // We had to add listeners first before setting up the locus instance\n    /**\n     * @instance\n     * @type {Recording}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.recording = null;\n\n    /**\n     * Promise that exists if joining, and resolves upon method completion.\n     * @instance\n     * @type {Promise}\n     * @private\n     * @memberof Meeting\n     */\n    this.deferJoin = undefined;\n\n    /**\n     * Staus of websocket connection/mercury connection.\n     * @instance\n     * @type {Boolean}\n     * @private\n     * @memberof Meeting\n     */\n    this.hasWebsocketConnected = this.webex.internal.mercury.connected;\n\n    /**\n     * Last sent render information\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Meeting\n     */\n    this.lastVideoLayoutInfo = {layoutType: undefined, main: undefined, content: undefined};\n\n    this.setUpLocusInfoListeners();\n    this.locusInfo.init(attrs.locus ? attrs.locus : {});\n  }\n\n  /**\n   * Proxy function for all the listener set ups\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoListeners() {\n    // meeting update listeners\n    this.setUpLocusInfoSelfListener();\n    this.setUpLocusInfoMeetingListener();\n    // members update listeners\n    this.setUpLocusFullStateListener();\n    this.setUpLocusUrlListener();\n    this.setUpLocusHostListener();\n    this.setUpLocusSelfListener();\n    this.setUpLocusParticipantsListener();\n    this.setupLocusControlsListener();\n    this.setUpLocusMediaSharesListener();\n    this.setUpLocusInfoMeetingInfoListener();\n    this.setUpLocusInfoAssignHostListener();\n    this.setUpLocusInfoMediaInactiveListener();\n  }\n\n\n  /**\n   * Set up the locus info listener for meetings disconnected due to inactivity\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoMediaInactiveListener() {\n    // User gets kicked off the meeting due to inactivity or user did a refresh\n    this.locusInfo.on(EVENTS.DISCONNECT_DUE_TO_INACTIVITY, (res) => {\n      // https:// jira-eng-gpk2.cisco.com/jira/browse/SPARK-240520\n      // TODO: send custom parameter explaining why the inactivity happened\n      // refresh , no media or network got dsconnected or something else\n      Metrics.sendOperationalMetric(\n        METRICS_OPERATIONAL_MEASURES.DISCONNECT_DUE_TO_INACTIVITY,\n        {\n          correlation_id: this.correlationId,\n          locus_id: this.locusId\n        }\n      );\n\n      // Upload logs on media inactivity\n      // Normally media should not be inactive\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusInfoMediaInactiveListener'\n        },\n        EVENTS.REQUEST_UPLOAD_LOGS,\n        this\n      );\n\n      LoggerProxy.logger.error(`Meeting:index#setUpLocusInfoMediaInactiveListener --> Meeting disconnected due to inactivity: ${res.reason}`);\n\n      if (this.config.reconnection.autoRejoin) {\n        this.reconnect();\n      }\n      else {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMediaInactiveListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_LEFT,\n          res.reason\n        );\n      }\n    });\n  }\n\n  /**\n   * Set up the locus info listener for assign host permissions on a meeting\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoAssignHostListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_CAN_ASSIGN_HOST, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusInfoAssignHostListener'\n        },\n        EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n        {\n          canAssignHost: payload.canAssignHost,\n          canLock: this.inMeetingActions.getCanLock(),\n          canUnlock: this.inMeetingActions.getCanUnlock()\n        }\n      );\n      this.inMeetingActions.setCanAssignHost(payload.canAssignHost);\n    });\n  }\n\n  /**\n   * Set up the internal locus info full state object listener\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusFullStateListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.FULL_STATE_MEETING_STATE_CHANGE, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusFullStateListener'\n        },\n        EVENT_TRIGGERS.MEETING_STATE_CHANGE,\n        {\n          payload\n        }\n      );\n    });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.FULL_STATE_TYPE_UPDATE, (payload) => {\n      this.members.locusFullStateTypeUpdate(payload);\n    });\n  }\n\n  /**\n   * get the metrics payload pre\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @returns {Object}\n   * @memberof Meeting\n   */\n  getAnalyzerMetricsPrePayload(options) {\n    if (options) {\n      const {event, trackingId, locus} = options;\n\n      if (!event) {\n        LoggerProxy.logger.error('Meeting:index#getAnalyzerMetricsPrePayload --> Error [Call Analyzer Event', event || '', `]: invalid identifers or event type! ${this.correlationId}`);\n\n        return null;\n      }\n\n      const identifiers = {\n        correlationId: this.correlationId,\n        userId: this.userId,\n        deviceId: this.deviceUrl,\n        orgId: this.orgId\n      };\n\n      // If locus is passed take the value from there else use meeting object\n      if (locus) {\n        identifiers.locusId = locus.url.split('/').pop();\n        identifiers.locusStartTime = locus.fullState.lastActive;\n      }\n      else if (this.locusUrl && this.locusInfo.fullState) {\n        identifiers.locusId = this.locusUrl && this.locusUrl.split('/').pop();\n        identifiers.locusStartTime = this.locusInfo.fullState && this.locusInfo.fullState.lastActive;\n      }\n\n      if (options.trackingId) {\n        identifiers.trackingId = trackingId;\n      }\n\n      let payload = {};\n\n      if (options.type === MQA_STATS.CA_TYPE) {\n        payload = Metrics.initMediaPayload(options.event, identifiers, options);\n      }\n\n      else {\n        payload = Metrics.initPayload(options.event, identifiers, options);\n      }\n\n      return payload;\n    }\n\n    return null;\n  }\n\n  /**\n   * Send the metrics to call-analyzer dashboard\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  sendCallAnalyzerMetrics(options) {\n    const payload = this.getAnalyzerMetricsPrePayload({\n      ...pick(this.config.metrics, ['clientType', 'subClientType']),\n      ...options\n    });\n\n    return this.webex.internal.metrics.submitCallDiagnosticEvents(payload);\n  }\n\n  /**\n   * Send the metrics to Media Quality Analyzer dashboard\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  sendMediaQualityAnalyzerMetrics(options) {\n    const payload = this.getAnalyzerMetricsPrePayload({\n      type: MQA_STATS.CA_TYPE,\n      ...pick(this.config.metrics, ['clientType', 'subClientType']),\n      ...options\n    });\n\n    return this.webex.internal.metrics.submitCallDiagnosticEvents(payload);\n  }\n\n  /**\n   * sets the network status on meeting object\n   * @param {String} networkStatus\n   * @private\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  setNetworkStatus(networkStatus) {\n    if (networkStatus === NETWORK_STATUS.DISCONNECTED) {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setNetworkStatus'\n        },\n        EVENT_TRIGGERS.MEETINGS_NETWORK_DISCONNECTED,\n      );\n    }\n    else if (networkStatus === NETWORK_STATUS.CONNECTED && this.networkStatus === NETWORK_STATUS.DISCONNECTED) {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setNetworkStatus'\n        },\n        EVENT_TRIGGERS.MEETINGS_NETWORK_CONNECTED,\n      );\n    }\n\n    this.networkStatus = networkStatus;\n  }\n\n  /**\n   * Set up the locus info self listener\n   * update self value for members and updates the member\n   * notifies consumer with members:self:update {activeSelfId endedSelfId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusSelfListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_SELF, (payload) => {\n      this.members.locusSelfUpdate(payload);\n\n      // If user moved to a JOINED state and there is a pending floor grant trigger it\n      if (this.floorGrantPending && payload.newSelf.state === MEETING_STATE.STATES.JOINED) {\n        this.share()\n          .then(() => { this.floorGrantPending = false; });\n      }\n    });\n  }\n\n  /**\n   * Set up the locus info host listener\n   * update host value for members and updates the member\n   * notifies consumer with members:host:update: {activeHostId, endedHostId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusHostListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_HOST, (payload) => {\n      this.members.locusHostUpdate(payload);\n    });\n  }\n\n  /**\n   * Set up the locus info participants update listener\n   * update members collection value for members\n   * notifies consumer with members:update\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusParticipantsListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_PARTICIPANTS, (payload) => {\n      this.members.locusParticipantsUpdate(payload);\n    });\n  }\n\n\n  /**\n   * Set up the locus info recording update listener\n   * update recording value for the meeting\n   * notifies consumer with:\n   *  meeting:recording:started\n   *  meeting:recording:stopped\n   *  meeting:recording:paused\n   *  meeting:recording:resumed\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setupLocusControlsListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.CONTROLS_RECORDING_UPDATED,\n      ({state, modifiedBy, lastModified}) => {\n        let event;\n\n        switch (state) {\n          case RECORDING_STATE.RECORDING:\n            event = EVENT_TRIGGERS.MEETING_STARTED_RECORDING;\n            break;\n          case RECORDING_STATE.IDLE:\n            event = EVENT_TRIGGERS.MEETING_STOPPED_RECORDING;\n            break;\n          case RECORDING_STATE.PAUSED:\n            event = EVENT_TRIGGERS.MEETING_PAUSED_RECORDING;\n            break;\n          case RECORDING_STATE.RESUMED:\n            event = EVENT_TRIGGERS.MEETING_RESUMED_RECORDING;\n            break;\n          default:\n            event = null;\n            break;\n        }\n\n        // `RESUMED` state should be converted to `RECORDING` after triggering the event\n        this.recording = {\n          state: state === RECORDING_STATE.RESUMED ? RECORDING_STATE.RECORDING : state,\n          modifiedBy,\n          lastModified\n        };\n\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setupLocusControlsListener'\n          },\n          event,\n          this.recording\n        );\n      });\n  }\n\n  /**\n   * Set up the locus info media shares listener\n   * update content sharing id value for members, and updates the member\n   * notifies consumer with members:content:update {activeContentSharingId, endedContentSharingId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusMediaSharesListener() {\n    // Will get triggered on local and remote share\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_MEDIA_SHARES, (payload) => {\n      const {contentId, disposition} = payload.current;\n\n      if (\n        contentId === payload.previous?.contentId &&\n        disposition === payload.previous?.disposition\n      ) {\n        // nothing changed, so ignore\n        // (this happens when we steal presentation from remote)\n        return;\n      }\n\n      let newShareStatus = this.shareStatus;\n\n      // REMOTE - check if remote started sharing\n      if (\n        this.selfId !== contentId &&\n        disposition === FLOOR_ACTION.GRANTED\n      ) {\n        newShareStatus = SHARE_STATUS.REMOTE_SHARE_ACTIVE;\n      }\n      // LOCAL - check if we started sharing\n      else if (\n        this.selfId === contentId &&\n        disposition === FLOOR_ACTION.GRANTED\n      ) {\n        if (this.mediaProperties.shareTrack?.readyState === 'ended') {\n          this.stopShare({\n            skipSignalingCheck: true\n          })\n            .catch((error) => {\n              LoggerProxy.logger.log('Meeting:index#setUpLocusMediaSharesListener --> Error stopping share: ', error);\n            });\n        }\n        else {\n          newShareStatus = SHARE_STATUS.LOCAL_SHARE_ACTIVE;\n        }\n      }\n      // or if sharing has been stopped\n      else if (\n        payload.previous &&\n        disposition === FLOOR_ACTION.RELEASED\n      ) {\n        newShareStatus = SHARE_STATUS.NO_SHARE;\n      }\n\n      if (newShareStatus !== this.shareStatus) {\n        const oldShareStatus = this.shareStatus;\n\n        // update our state before we send out any notifications\n        this.shareStatus = newShareStatus;\n\n        // send out \"stop\" notifications for the old state\n        switch (oldShareStatus) {\n          case SHARE_STATUS.REMOTE_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meetings/index',\n                function: 'remoteShare'\n              },\n              EVENT_TRIGGERS.MEETING_STOPPED_SHARING_REMOTE\n            );\n            break;\n\n          case SHARE_STATUS.LOCAL_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'stopFloorRequest'\n              },\n              EVENT_TRIGGERS.MEETING_STOPPED_SHARING_LOCAL,\n              {\n                reason: SHARE_STOPPED_REASON.SELF_STOPPED\n              }\n            );\n            break;\n\n          case SHARE_STATUS.NO_SHARE:\n            // nothing to do\n            break;\n\n          default:\n            break;\n        }\n\n        // send \"start\" notifications for the new state\n        switch (newShareStatus) {\n          case SHARE_STATUS.REMOTE_SHARE_ACTIVE: {\n            const sendStartedSharingRemote = () => {\n              Trigger.trigger(\n                this,\n                {\n                  file: 'meetings/index',\n                  function: 'remoteShare'\n                },\n                EVENT_TRIGGERS.MEETING_STARTED_SHARING_REMOTE,\n                {\n                  memberId: contentId\n                }\n              );\n            };\n\n            // if a remote participant is stealing the presentation from us\n            if (this.mediaProperties.mediaDirection?.sendShare) {\n              this.updateShare({\n                sendShare: false,\n                receiveShare: this.mediaProperties.mediaDirection.receiveShare\n              })\n                .finally(() => {\n                  sendStartedSharingRemote();\n                });\n            }\n            else {\n              sendStartedSharingRemote();\n            }\n            break;\n          }\n\n          case SHARE_STATUS.LOCAL_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'share'\n              },\n              EVENT_TRIGGERS.MEETING_STARTED_SHARING_LOCAL,\n            );\n            Metrics.postEvent({event: eventType.LOCAL_SHARE_FLOOR_GRANTED, meeting: this});\n            break;\n\n          case SHARE_STATUS.NO_SHARE:\n          // nothing to do\n            break;\n\n          default:\n            break;\n        }\n\n        this.members.locusMediaSharesUpdate(payload);\n      }\n      else if (newShareStatus === SHARE_STATUS.REMOTE_SHARE_ACTIVE) {\n        // if we got here, then some remote participant has stolen\n        // the presentation from another remote participant\n        Trigger.trigger(\n          this,\n          {\n            file: 'meetings/index',\n            function: 'remoteShare'\n          },\n          EVENT_TRIGGERS.MEETING_STARTED_SHARING_REMOTE,\n          {\n            memberId: contentId\n          }\n        );\n        this.members.locusMediaSharesUpdate(payload);\n      }\n    });\n  }\n\n  /**\n   * Set up the locus info url listener\n   * update locus_url value for members\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusUrlListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_URL, (payload) => {\n      this.members.locusUrlUpdate(payload);\n      this.locusUrl = payload;\n      this.locusId = this.locusUrl?.split('/').pop();\n    });\n  }\n\n  /**\n   * Set up the locus info meeting info listener\n   * @returns {undefined}\n   * @private\n   * @memberof meeting\n   */\n  setUpLocusInfoMeetingInfoListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_LOCKED, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingInfoListener'\n          },\n          EVENT_TRIGGERS.MEETING_LOCKED,\n          {\n            payload\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_UNLOCKED, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingInfoListener'\n          },\n          EVENT_TRIGGERS.MEETING_UNLOCKED,\n          {\n            payload\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_INFO_UPDATED, (payload) => {\n      if (payload && payload.info) {\n        let newCanLock;\n        let newCanUnlock;\n\n        if (payload.self && !payload.self.moderator) {\n          newCanLock = false;\n          newCanUnlock = false;\n        }\n        else {\n          newCanLock = MeetingUtil.canUserLock(payload.info.moderator, payload.info.policy);\n          newCanUnlock = MeetingUtil.canUserUnlock(payload.info.moderator, payload.info.policy);\n        }\n\n        if (newCanLock && !this.inMeetingActions.canLock) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setUpLocusInfoMeetingInfoListener'\n            },\n            EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n            {\n              canLock: true,\n              canUnlock: false,\n              canAssignHost: this.inMeetingActions.getCanAssignHost()\n            }\n          );\n        }\n        if (newCanUnlock && !this.inMeetingActions.canUnlock || !newCanLock) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setUpLocusInfoMeetingInfoListener'\n            },\n            EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n            {\n              canLock: false,\n              canUnlock: true,\n              canAssignHost: this.inMeetingActions.getCanAssignHost()\n            }\n          );\n        }\n        this.inMeetingActions.setCanLock(newCanLock || false);\n        this.inMeetingActions.setCanUnlock(newCanUnlock || false);\n      }\n    });\n  }\n\n  /**\n   * Internal function to listen to the self object changes\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoSelfListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.LOCAL_UNMUTE_REQUIRED, (payload) => {\n      if (this.audio) {\n        this.audio.handleServerLocalUnmuteRequired(this);\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_UNMUTED_BY_OTHERS,\n          {\n            payload\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_REMOTE_MUTE_STATUS_UPDATED, (payload) => {\n      if (payload) {\n        if (this.audio) {\n          this.audio.handleServerRemoteMuteUpdate(payload.muted, payload.unmuteAllowed);\n        }\n        // with \"mute on entry\" server will send us remote mute even if we don't have media configured,\n        // so if being muted by others, always send the notification,\n        // but if being unmuted, only send it if we are also locally unmuted\n        if (payload.muted || (!this.audio?.isMuted())) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setUpLocusInfoSelfListener'\n            },\n            payload.muted ? EVENT_TRIGGERS.MEETING_SELF_MUTED_BY_OTHERS : EVENT_TRIGGERS.MEETING_SELF_UNMUTED_BY_OTHERS,\n            {\n              payload\n            },\n          );\n        }\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.LOCAL_UNMUTE_REQUESTED, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusInfoSelfListener'\n        },\n        EVENT_TRIGGERS.MEETING_SELF_REQUESTED_TO_UNMUTE,\n        {\n          payload\n        }\n      );\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_UNADMITTED_GUEST, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_LOBBY_WAITING,\n          {\n            payload\n          }\n        );\n\n        Metrics.postEvent({\n          event: eventType.LOBBY_ENTERED,\n          meeting: this\n        });\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_ADMITTED_GUEST, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_GUEST_ADMITTED,\n          {\n            payload\n          }\n        );\n\n        Metrics.postEvent({\n          event: eventType.LOBBY_EXITED,\n          meeting: this\n        });\n      }\n    });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEDIA_INACTIVITY, () => {\n      Metrics.sendOperationalMetric(\n        METRICS_OPERATIONAL_MEASURES.MEETING_MEDIA_INACTIVE,\n        {\n          correlation_id: this.correlationId,\n          locus_id: this.locusId\n        }\n      );\n      this.reconnect();\n    });\n\n    // There is two stats for mute one is the actual media being sent or received\n    // The second on is if the audio is muted, we need to tell the statsAnalyzer when\n    // the audio is muted or the user is not willing to send media\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEDIA_STATUS_CHANGE, (status) => {\n      if (this.statsAnalyzer) {\n        this.statsAnalyzer.updateMediaStatus({\n          actual: status,\n          expected: {\n            // We need to check what should be the actual direction of media\n            sendAudio: this.mediaProperties.mediaDirection?.sendAudio && !this.audio?.isMuted(),\n            sendVideo: this.mediaProperties.mediaDirection?.sendVideo && !this.video?.isMuted(),\n            sendShare: this.mediaProperties.mediaDirection?.sendShare,\n            receiveAudio: this.mediaProperties.mediaDirection?.receiveAudio,\n            receiveVideo: this.mediaProperties.mediaDirection?.receiveVideo,\n            receiveShare: this.mediaProperties.mediaDirection?.receiveShare\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Add LocusInfo nested object listeners (from child to parent)\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoMeetingListener() {\n    this.locusInfo.on(EVENTS.REMOTE_RESPONSE, (payload) => {\n      this.meetingFiniteStateMachine.remote(payload);\n\n      if (payload.remoteDeclined) {\n        this.leave({reason: payload.reason}).then(() => {\n          LoggerProxy.logger.info('Meeting:index#setUpLocusInfoMeetingListener --> REMOTE_RESPONSE. Attempting to leave meeting.');\n        }).catch((error) => {\n          LoggerProxy.logger.error(`Meeting:index#setUpLocusInfoMeetingListener --> REMOTE_RESPONSE. Issue with leave for meeting, meeting still in collection: ${this.meeting}, error: ${error}`);\n        });\n      }\n    });\n    this.locusInfo.on(EVENTS.DESTROY_MEETING, (payload) => {\n      // if self state is NOT left\n\n      // TODO: Handle sharing and wireless sharing when meeting end\n      if (this.wirelessShare) {\n        if (this.mediaProperties.shareTrack) {\n          this.mediaProperties.shareTrack.onended = null;\n          this.mediaProperties.shareTrack.stop();\n        }\n      }\n      // when multiple WEB deviceType join with same user\n      // and some of the devices are joined and some are left\n      // when your own device is still connected you want to leave and destroy\n      // else you want to just destroy\n      // this looks odd because when it leaves it should destroy, but we get a\n      // leave response and we should destroy it on the next event loop\n      // the leave response gets parsed and we decide if we want to destroy the meeting\n      // the first time we just leave it, the second time it comes it destroys it from the collection\n      if (payload.shouldLeave) {\n        // TODO:  We should do cleaning of meeting object if the shouldLeave: false because there might be meeting object which we are not cleaning\n\n        this.leave({reason: payload.reason}).then(() => {\n          LoggerProxy.logger.warn('Meeting:index#setUpLocusInfoMeetingListener --> DESTROY_MEETING. The meeting has been left, but has not been destroyed, you should see a later event for leave.');\n        }).catch((error) => {\n          LoggerProxy.logger.error(`Meeting:index#setUpLocusInfoMeetingListener --> DESTROY_MEETING. Issue with leave for meeting, meeting still in collection: ${this.meeting}, error: ${error}`);\n        });\n      }\n      else {\n        LoggerProxy.logger.info('Meeting:index#setUpLocusInfoMeetingListener --> MEETING_REMOVED_REASON', payload.reason);\n\n        MeetingUtil.cleanUp(this);\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingListener'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: payload.reason,\n            meetingId: this.id\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Set meeting values rather than events\n   * @param {Object} object\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   * // TODO: is this function necessary?\n   */\n  updateMeetingObject(object) {\n    // Validate if these are valid meeting object property\n    // TODO: add a check to make sure the value passed in the constructor\n    // is not changed by any delta event\n    if (object && Object.keys(object).length) {\n      Object.keys(object).forEach((key) => {\n        this[key] = object[key];\n      });\n    }\n  }\n\n  /**\n   * Invite a guest to the call that isn't normally part of this call\n   * @param {Object} invitee\n   * @param {String} invitee.emailAddress\n   * @param {String} invitee.email\n   * @param {Boolean} [alertIfActive]\n   * @returns {Promise} see #members.addMember\n   * @public\n   * @memberof Meeting\n   */\n  invite(invitee, alertIfActive = true) {\n    return this.members.addMember(invitee, alertIfActive);\n  }\n\n  /**\n   * Admit the guest(s) to the call once they are waiting\n   * @param {Array} memberIds\n   * @returns {Promise} see #members.admitMembers\n   * @public\n   * @memberof Meeting\n   */\n  admit(memberIds) {\n    return this.members.admitMembers(memberIds);\n  }\n\n  /**\n   * Remove the member from the meeting, boot them\n   * @param {String} memberId\n   * @returns {Promise} see #members.removeMember\n   * @public\n   * @memberof Meeting\n   */\n  remove(memberId) {\n    return this.members.removeMember(memberId);\n  }\n\n  /**\n   * Mute another member from the meeting\n   * @param {String} memberId\n   * @param {Boolean} mute\n   * @returns {Promise} see #members.muteMember\n   * @public\n   * @memberof Meeting\n   */\n  mute(memberId, mute = true) {\n    return this.members.muteMember(memberId, mute);\n  }\n\n  /**\n   * Transfer the moderator role to another eligible member\n   * @param {String} memberId\n   * @param {Boolean} moderator\n   * @returns {Promise} see #members.transferHostToMember\n   * @public\n   * @memberof Meeting\n   */\n  transfer(memberId, moderator = true) {\n    return this.members.transferHostToMember(memberId, moderator);\n  }\n\n  /**\n   * Reference to the Members object\n   * @returns {Members}\n   * @public\n   * @memberof Meeting\n   */\n  getMembers() {\n    return this.members;\n  }\n\n  /**\n   * If this gets turned off mid meeting after attaching media, it will shut down the MQA metrics and they will\n   * not restart unless the start function is called again\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  cleanMQAInterval() {\n    if (this.mqaInterval) {\n      clearInterval(this.mqaInterval);\n    }\n  }\n\n  /**\n   * Automatically publishes media metrics data and on a config interval\n   * uses the existing getStats data filter, so no new streams are created\n   * but it is separate than history, so history will not be available\n   * @returns {MediaMetrics}\n   * @public\n   * @memberof Meeting\n   */\n  startMediaQualityMetrics() {\n    const automaticMetrics = new StatsMetrics({config: this.config});\n\n    const stats = this.getStats(automaticMetrics.initialize(), true);\n\n    this.mediaQualityMetrics = automaticMetrics;\n\n    this.mediaQualityMetrics.setStats(stats);\n\n    this.mqaInterval = setInterval(() => this.processMQAData(), this.config.metrics.mqaMetricsInterval);\n\n    return automaticMetrics;\n  }\n\n  /**\n   * @private\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  processMQAData() {\n    if (!this.mqaProcessor) {\n      this.mqaProcessor = new MQAProcessor();\n    }\n\n    MQA_STATS.DATA_PLACEMENTS.forEach((key) => {\n      if (this.mediaQualityMetrics && this.mediaQualityMetrics.stats) {\n        let sendRecvData;\n\n        if (key.toLowerCase().endsWith(STATS.SENDER)) {\n          sendRecvData = this.mediaQualityMetrics.stats.getSender(key);\n        }\n        else if (key.toLowerCase().endsWith(STATS.RECEIVER)) {\n          sendRecvData = this.mediaQualityMetrics.stats.getReceiver(key);\n        }\n        let mqa;\n\n        if (sendRecvData) {\n          mqa = sendRecvData.getMQA();\n        }\n        if (mqa) {\n          const interval = mqa.getSlice(this.config.metrics.mqaMetricsInterval / 1000); // milliseconds -> second based intervals\n\n          this.mqaProcessor.process(key, interval);\n        }\n      }\n    });\n  }\n\n  /**\n   * Reference to the stats builder object\n   * @param {Object} options - see #createStats\n   * @param {Boolean} override - override the previous getStats\n   * @returns {WebRTCStats}\n   * @public\n   * @memberof Meeting\n   */\n  getStats(options, override) {\n    if (!this.stats) {\n      return this.createStats(options);\n    }\n    if (override) {\n      if (this.stats) {\n        LoggerProxy.logger.log('Meeting:index#getStats --> Overriding the previous stats object without destroying first can result in memory leaks.');\n      }\n\n      return this.createStats(options);\n    }\n\n    return this.stats;\n  }\n\n  /**\n   * write the stats builder object and assign to meeting property\n   * @param {Object} options\n   * @returns {WebRTCStats}\n   * @public\n   * @memberof Meeting\n   */\n  createStats(options = {}) {\n    StatsUtil.generateOptions(options, STATS.CONFIG, this);\n\n    options.config = STATS.CONFIG;\n\n    this.stats = new WebRTCStats(this.attrs, this.options, options);\n\n    return this.stats;\n  }\n\n  /**\n   * if you have started a stats instance, here's how you can stop it\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  stopStats() {\n    if (this.stats) {\n      this.stats.destroySenders();\n      this.stats.destroyReceivers();\n      this.stats = null;\n    }\n  }\n\n  /**\n   * Convenience function to tell whether a meeting is muted\n   * @returns {Boolean} if meeting audio muted or not\n   * @public\n   * @memberof Meeting\n   */\n  isAudioMuted() {\n    return this.audio && this.audio.isMuted();\n  }\n\n  /**\n   * Convenience function to tell if the end user last changed the audio state\n   * @returns {Boolean} if audio was manipulated by the end user\n   * @public\n   * @memberof Meeting\n   */\n  isAudioSelf() {\n    return this.audio && this.audio.isSelf();\n  }\n\n  /**\n   * Convenience function to tell whether video is muted\n   * @returns {Boolean} if meeting video is muted or not\n   * @public\n   * @memberof Meeting\n   */\n  isVideoMuted() {\n    return this.video && this.video.isMuted();\n  }\n\n  /**\n   * Convenience function to tell whether the end user changed the video state\n   * @returns {Boolean} if meeting video is muted or not\n   * @public\n   * @memberof Meeting\n   */\n  isVideoSelf() {\n    return this.video && this.video.isSelf();\n  }\n\n  /**\n   * Sets the meeting info on the class instance\n   * @param {Object} meetingInfo\n   * @param {Object} meetingInfo.body\n   * @param {String} meetingInfo.body.conversationUrl\n   * @param {String} meetingInfo.body.locusUrl\n   * @param {String} meetingInfo.body.sipUri\n   * @param {Object} meetingInfo.body.owner\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  parseMeetingInfo(meetingInfo) {\n    // MeetingInfo will be undefined for 1:1 calls\n    if (meetingInfo && meetingInfo.body && !(meetingInfo.errors && meetingInfo.errors.length > 0)) {\n      this.conversationUrl = meetingInfo.body.conversationUrl || this.conversationUrl;\n      this.locusUrl = meetingInfo.body.locusUrl || this.locusUrl;\n      this.setSipUri(meetingInfo.body.sipMeetingUri || this.sipUri);\n      this.owner = meetingInfo.body.owner || this.owner;\n    }\n  }\n\n  /**\n   * Sets the first locus info on the class instance\n   * @param {Object} locus\n   * @param {String} locus.url\n   * @param {Array} locus.participants\n   * @param {Object} locus.self\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  parseLocus(locus) {\n    if (locus) {\n      this.locusUrl = locus.url;\n      // TODO: move this to parse participants module\n      this.setLocus(locus);\n\n      // check if we can extract this info from partner\n      // Parsing of locus object must be finished at this state\n      if (locus.participants && locus.self) {\n        this.partner = MeetingUtil.getLocusPartner(locus.participants, locus.self);\n      }\n\n      // For webex meeting the sipUrl gets updated in info parser\n      if (!this.sipUri && this.partner && this.type === _CALL_) {\n        this.setSipUri(this.partner.person.sipUrl || this.partner.person.id);\n      }\n    }\n  }\n\n  /**\n   * Sets the sip uri on the class instance\n   * uses meeting info as precedence\n   * @param {String} sipUri\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setSipUri(sipUri) {\n    // This can be tel no, device id or a sip uri, user Id\n    this.sipUri = sipUri;\n  }\n\n  /**\n   * Set the roap seq on the class instance\n   * @param {Number} seq\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setRoapSeq(seq) {\n    if (seq >= 0) {\n      this.roapSeq = seq;\n    }\n  }\n\n  /**\n   * Set the locus info the class instance\n   * @param {Object} locus\n   * @param {Array} locus.mediaConnections\n   * @param {String} locus.locusUrl\n   * @param {String} locus.locusId\n   * @param {String} locus.mediaId\n   * @param {Object} locus.host\n   * @todo change name to genertic parser\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setLocus(locus) {\n    const mtgLocus = locus.locus || locus;\n\n    // LocusInfo object saves the locus object\n    // this.locus = mtgLocus;\n    this.mediaConnections = locus.mediaConnections;\n    this.locusUrl = locus.locusUrl || locus.url;\n    this.locusId = locus.locusId;\n    this.selfId = locus.selfId;\n    this.mediaId = locus.mediaId;\n    this.hostId = mtgLocus.host ? mtgLocus.host.id : this.hostId;\n    this.locusInfo.initialSetup(mtgLocus);\n  }\n\n  /**\n   * Sets the remote stream on the class instance and emits and\n   * event to developers\n   * @param {Object} pc The remote stream peer connection\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setRemoteStream(pc) {\n    if (!pc) {\n      return;\n    }\n    // eslint-disable-next-line no-param-reassign\n    pc.ontrack = (event) => {\n      // eslint-disable-next-line no-warning-comments\n      // TODO: It's possible for media to not be present\n      // so we might need to either\n      // A) wait until we have media flowing\n      // B) trigger a second event when video is flowing\n      LoggerProxy.logger.log(`Meeting:index#setRemoteStream --> ontrack event received for peerConnection: ${event}`);\n\n      const MEDIA_ID = {\n        AUDIO_TRACK: '0',\n        VIDEO_TRACK: '1',\n        SHARE_TRACK: '2'\n      };\n      let eventType = null;\n      const mediaTrack = event.track;\n      let trackMediaID = null;\n\n\n      // In case of safari some time the transceiver is not present for specific os version\n      // sdk tries to determine the transceive using the track id present\n      if (event.transceiver && event.transceiver.mid) {\n        trackMediaID = event.transceiver.mid;\n      }\n      else {\n        const {audioTransceiver, videoTransceiver, shareTransceiver} = event.target;\n\n        // audio kind indicates its a audio stream\n        if (mediaTrack.id === audioTransceiver.receiver.track.id) {\n          trackMediaID = '0';\n        }\n        else\n        if (mediaTrack.id === videoTransceiver.receiver.track.id) {\n          trackMediaID = '1';\n        }\n        else\n        if (mediaTrack.id === shareTransceiver.receiver.track.id) {\n          trackMediaID = '2';\n        }\n        else {\n          trackMediaID = null;\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.MUTE_AUDIO_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop()\n            }\n          );\n        }\n      }\n\n\n      switch (trackMediaID) {\n        case MEDIA_ID.AUDIO_TRACK:\n          eventType = EVENT_TYPES.REMOTE_AUDIO;\n          this.mediaProperties.setRemoteAudioTrack(mediaTrack);\n          break;\n        case MEDIA_ID.VIDEO_TRACK:\n          eventType = EVENT_TYPES.REMOTE_VIDEO;\n          this.mediaProperties.setRemoteVideoTrack(mediaTrack);\n          break;\n        case MEDIA_ID.SHARE_TRACK:\n          if (event.track) {\n            eventType = EVENT_TYPES.REMOTE_SHARE;\n            this.mediaProperties.setRemoteShare(mediaTrack);\n          }\n          break;\n        default: {\n          LoggerProxy.logger.log('Meeting:index#setRemoteStream --> no matching media track id');\n        }\n      }\n\n      // start stats here the stats are coming null if you dont receive streams\n\n      this.statsAnalyzer.startAnalyzer(this.mediaProperties.peerConnection);\n\n      if (eventType && mediaTrack) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setRemoteStream:pc.ontrack'\n          },\n          EVENT_TRIGGERS.MEDIA_READY,\n          {\n            type: eventType,\n            stream: MediaUtil.createMediaStream([mediaTrack])\n          }\n        );\n      }\n    };\n  }\n\n  /**\n   * Upload logs for the current meeting\n   * @param {object} options file name and function name\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  uploadLogs(options = {file: 'meeting/index', function: 'uploadLogs'}) {\n    Trigger.trigger(\n      this,\n      options,\n      EVENTS.REQUEST_UPLOAD_LOGS,\n      this\n    );\n  }\n\n\n  /**\n   * Removes remote audio and video stream on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   * @deprecated after v1.89.3\n   */\n  unsetRemoteStream() {\n    LoggerProxy.logger.warn('Meeting:index#unsetRemoteStream --> [DEPRECATION WARNING]: unsetRemoteStream has been deprecated after v1.89.3');\n    this.mediaProperties.unsetRemoteMedia();\n  }\n\n  /**\n   * Removes remote audio, video and share tracks from class instance's mediaProperties\n   * @returns {undefined}\n   */\n  unsetRemoteTracks() {\n    this.mediaProperties.unsetRemoteTracks();\n  }\n\n  /**\n   * Removes the remote stream on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   * @deprecated after v1.89.3\n   */\n  closeRemoteStream() {\n    LoggerProxy.logger.warn('Meeting:index#closeRemoteStream --> [DEPRECATION WARNING]: closeRemoteStream has been deprecated after v1.89.3');\n    this.closeRemoteTracks();\n  }\n\n  /**\n   * Removes the remote tracks on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  closeRemoteTracks() {\n    const {\n      remoteAudioTrack,\n      remoteVideoTrack,\n      remoteShare\n    } = this.mediaProperties;\n\n    /**\n     * Triggers an event to the developer\n     * @param {string} mediaType Type of media that was stopped\n     * @returns {void}\n     * @inner\n     */\n    const triggerMediaStoppedEvent = (mediaType) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'closeRemoteTracks'\n        },\n        EVENT_TRIGGERS.MEDIA_STOPPED,\n        {\n          type: mediaType\n        }\n      );\n    };\n\n    /**\n     * Stops a media track and emits an event\n     * @param {MediaStreamTrack} track Media track to stop\n     * @param {string} type Media track type\n     * @returns {Promise}\n     * @inner\n     */\n    // eslint-disable-next-line arrow-body-style\n    const stopTrack = (track, type) => {\n      return Media.stopTracks(track)\n        .then(() => {\n          const isTrackStopped = track && track.readyState === ENDED;\n          const isWrongReadyState = track && !isTrackStopped;\n\n          if (isTrackStopped) {\n            triggerMediaStoppedEvent(type);\n          }\n          else if (isWrongReadyState) {\n            LoggerProxy.logger.warn(`Meeting:index#closeRemoteTracks --> Error: MediaStreamTrack.readyState is ${track.readyState} for ${type}`);\n          }\n        });\n    };\n\n    return Promise.all([\n      stopTrack(remoteAudioTrack, EVENT_TYPES.REMOTE_AUDIO),\n      stopTrack(remoteVideoTrack, EVENT_TYPES.REMOTE_VIDEO),\n      stopTrack(remoteShare, EVENT_TYPES.REMOTE_SHARE)\n    ]);\n  }\n\n  /**\n   * Emits the 'media:ready' event with a local stream that consists of 1 local audio and 1 local video track\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  sendLocalMediaReadyEvent() {\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'setLocalTracks'\n      },\n      EVENT_TRIGGERS.MEDIA_READY,\n      {\n        type: EVENT_TYPES.LOCAL,\n        stream: MediaUtil.createMediaStream([this.mediaProperties.audioTrack, this.mediaProperties.videoTrack])\n      }\n    );\n  }\n\n  /**\n   * Sets the local audio track on the class and emits an event to the developer\n   * @param {MediaStreamTrack} audioTrack\n   * @param {Boolean} emitEvent if true, a media ready event is emitted to the developer\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setLocalAudioTrack(audioTrack, emitEvent = true) {\n    if (audioTrack) {\n      const settings = audioTrack.getSettings();\n\n      this.mediaProperties.setMediaSettings('audio', {\n        echoCancellation: settings.echoCancellation,\n        noiseSuppression: settings.noiseSuppression\n      });\n\n      LoggerProxy.logger.log('Meeting:index#setLocalAudioTrack --> Audio settings.', JSON.stringify(this.mediaProperties.mediaSettings.audio));\n      this.mediaProperties.setLocalAudioTrack(audioTrack);\n      if (this.audio) this.audio.applyClientStateLocally(this);\n    }\n\n    if (emitEvent) {\n      this.sendLocalMediaReadyEvent();\n    }\n  }\n\n  /**\n   * Sets the local video track on the class and emits an event to the developer\n   * @param {MediaStreamTrack} videoTrack\n   * @param {Boolean} emitEvent if true, a media ready event is emitted to the developer\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setLocalVideoTrack(videoTrack, emitEvent = true) {\n    if (videoTrack) {\n      const {\n        aspectRatio, frameRate, height, width, deviceId\n      } = videoTrack.getSettings();\n\n      this.mediaProperties.setLocalVideoTrack(videoTrack);\n      if (this.video) this.video.applyClientStateLocally(this);\n\n      this.mediaProperties.setMediaSettings('video', {\n        aspectRatio, frameRate, height, width\n      });\n      // store and save the selected video input device\n      if (deviceId) {\n        this.mediaProperties.setVideoDeviceId(deviceId);\n      }\n      LoggerProxy.logger.log('Meeting:index#setLocalVideoTrack --> Video settings.', JSON.stringify(this.mediaProperties.mediaSettings.video));\n    }\n\n    if (emitEvent) {\n      this.sendLocalMediaReadyEvent();\n    }\n  }\n\n  /**\n   * Sets the local media stream on the class and emits an event to the developer\n   * @param {Stream} localStream the local media stream\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setLocalTracks(localStream) {\n    if (localStream) {\n      const {audioTrack, videoTrack} = MeetingUtil.getTrack(localStream);\n\n      this.setLocalAudioTrack(audioTrack, false);\n      this.setLocalVideoTrack(videoTrack, false);\n\n      this.sendLocalMediaReadyEvent();\n    }\n  }\n\n  /**\n   * Sets the local media stream on the class and emits an event to the developer\n   * @param {Stream} localShare the local media stream\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setLocalShareTrack(localShare) {\n    let settings = null;\n\n    if (localShare) {\n      this.mediaProperties.setLocalShareTrack(MeetingUtil.getTrack(localShare).videoTrack);\n      const contentTracks = this.mediaProperties.shareTrack;\n\n      if (contentTracks) {\n        settings = contentTracks.getSettings();\n        this.mediaProperties.setMediaSettings('screen', {\n          aspectRatio: settings.aspectRatio,\n          frameRate: settings.frameRate,\n          height: settings.height,\n          width: settings.width,\n          displaySurface: settings.displaySurface,\n          cursor: settings.cursor\n        });\n        LoggerProxy.logger.log('Meeting:index#setLocalShareTrack --> Screen settings.', JSON.stringify(this.mediaProperties.mediaSettings.screen));\n      }\n\n      contentTracks.onended = () => this.handleShareTrackEnded(localShare);\n\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setLocalShareTrack'\n        },\n        EVENT_TRIGGERS.MEDIA_READY,\n        {\n          type: EVENT_TYPES.LOCAL_SHARE,\n          stream: localShare\n        }\n      );\n    }\n  }\n\n  /**\n   * Closes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @event media:stopped\n   * @public\n   * @memberof Meeting\n   */\n  closeLocalStream() {\n    const {audioTrack, videoTrack} = this.mediaProperties;\n\n    return Media.stopTracks(audioTrack)\n      .then(() => Media.stopTracks(videoTrack))\n      .then(() => {\n        const audioStopped = audioTrack && audioTrack.readyState === ENDED;\n        const videoStopped = videoTrack && videoTrack.readyState === ENDED;\n\n        if (audioStopped && videoStopped) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'closeLocalStream'\n            },\n            EVENT_TRIGGERS.MEDIA_STOPPED, {\n              type: EVENT_TYPES.LOCAL\n            }\n          );\n        }\n        else if (audioTrack || videoTrack) {\n          LoggerProxy.logger.warn('Meeting:index#closeLocalStream --> Error: MediaStreamTrack.readyState is incorrect.');\n        }\n      });\n  }\n\n  /**\n   * Closes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @event media:stopped\n   * @public\n   * @memberof Meeting\n   */\n  closeLocalShare() {\n    const track = this.mediaProperties.shareTrack;\n\n    return Media.stopTracks(track).then(() => {\n      if (track && track.readyState === ENDED) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'closeLocalShare'\n          },\n          EVENT_TRIGGERS.MEDIA_STOPPED, {\n            type: EVENT_TYPES.LOCAL_SHARE\n          }\n        );\n      }\n      else if (track) {\n        // Track exists but with wrong readyState\n        LoggerProxy.logger.warn(`Meeting:index#closeLocalShare --> Error: MediaStreamTrack.readyState is ${track.readyState} for localShare`);\n      }\n    });\n  }\n\n  /**\n   * Removes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  unsetLocalVideoTrack() {\n    this.mediaProperties.unsetLocalVideoTrack();\n  }\n\n  /**\n   * Removes the local share from the class and emits an event to the developer\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  unsetLocalShareTrack() {\n    this.mediaProperties.unsetLocalShareTrack();\n  }\n\n  /**\n   * sets up listner for mercury event\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setMercuryListener() {\n    // Client will have a socket manager and handle reconnecting to mercury, when we reconnect to mercury\n    // if the meeting has active peer connections, it should try to reconnect.\n    this.webex.internal.mercury.on(ONLINE, () => {\n      LoggerProxy.logger.info('Meeting:index#setMercuryListener --> Web socket online');\n\n      // Only send restore event when it was disconnected before and for connected later\n      if (!this.hasWebsocketConnected) {\n        Metrics.postEvent({\n          event: eventType.MERCURY_CONNECTION_RESTORED,\n          meeting: this\n        });\n      }\n      this.hasWebsocketConnected = true;\n    });\n\n    this.webex.internal.mercury.on(OFFLINE, () => {\n      LoggerProxy.logger.error('Meeting:index#setMercuryListener --> Web socket offline');\n      Metrics.postEvent({\n        event: eventType.MERCURY_CONNECTION_LOST,\n        meeting: this\n      });\n      Metrics.sendOperationalMetric(\n        METRICS_OPERATIONAL_MEASURES.MERCURY_CONNECTION_FAILURE,\n        {\n          correlation_id: this.correlationId\n        }\n      );\n    });\n  }\n\n  /**\n   * Close the peer connections and remove them from the class. Triggers an event\n   * when each is closed.\n   * @returns {Promise} returns a resolved promise with an array of closed peer connections\n   * @public\n   * @memberof Meeting\n   */\n  closePeerConnections() {\n    return PeerConnectionManager.close(this.mediaProperties.peerConnection);\n  }\n\n  /**\n   * Unsets the peer connections on the class\n   * warning DO NOT CALL WITHOUT CLOSING PEER CONNECTIONS FIRST\n   * @param {PeerConnection} peerConnection\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  unsetPeerConnections() {\n    this.mediaProperties.unsetPeerConnection();\n    if (this.config.reconnection.detection) {\n      this.webex.internal.mercury.off(ONLINE);\n    }\n  }\n\n  /**\n   * Convenience method to set the correlation id for the Meeting\n   * @param {String} id correlation id to set on the class\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setCorrelationId(id) {\n    this.correlationId = id;\n  }\n\n  /**\n   * Mute the audio for a meeting\n   * @returns {Promise} resolves the data from muting audio {mute, self} or rejects if there is no audio set\n   * @public\n   * @memberof Meeting\n   */\n  muteAudio() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.audio) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#muteAudio -->';\n\n    // First, stop sending the local audio media\n    return logRequest(this.audio.handleClientRequest(this, true)\n      .then(() => {\n        Metrics.postEvent({\n          event: eventType.MUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.AUDIO}\n        });\n      }).catch((error) => {\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.MUTE_AUDIO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} muting audio`,\n      success: `${LOG_HEADER} muted audio successfully`,\n      failure: `${LOG_HEADER} muting audio failed, `\n    });\n  }\n\n  /**\n   * Unmute meeting audio\n   * @returns {Promise} resolves data from muting audio {mute, self} or rejects if there is no audio set\n   * @public\n   * @memberof Meeting\n   */\n  unmuteAudio() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.audio) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#unmuteAudio -->';\n\n    // First, send the control to unmute the participant on the server\n    return logRequest(this.audio.handleClientRequest(this, false)\n      .then(() => {\n        Metrics.postEvent({\n          event: eventType.UNMUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.AUDIO}\n        });\n      }).catch((error) => {\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.UNMUTE_AUDIO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} unmuting audio`,\n      success: `${LOG_HEADER} unmuted audio successfully`,\n      failure: `${LOG_HEADER} unmuting audio failed, `\n    });\n  }\n\n  /**\n   * Mute the video for a meeting\n   * @returns {Promise} resolves data from muting video {mute, self} or rejects if there is no video set\n   * @public\n   * @memberof Meeting\n   */\n  muteVideo() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.video) {\n      return Promise.reject(new ParameterError('no video control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#muteVideo -->';\n\n    return logRequest(this.video.handleClientRequest(this, true)\n      .then(() => {\n        Metrics.postEvent({\n          event: eventType.MUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.VIDEO}\n        });\n      }).catch((error) => {\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.MUTE_VIDEO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} muting video`,\n      success: `${LOG_HEADER} muted video successfully`,\n      failure: `${LOG_HEADER} muting video failed, `\n    });\n  }\n\n  /**\n   * Unmute meeting video\n   * @returns {Promise} resolves data from muting video {mute, self} or rejects if there is no video set\n   * @public\n   * @memberof Meeting\n   */\n  unmuteVideo() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.video) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#unmuteVideo -->';\n\n    return logRequest(this.video.handleClientRequest(this, false)\n      .then(() => {\n        Metrics.postEvent({\n          event: eventType.UNMUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.VIDEO}\n        });\n      }).catch((error) => {\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.UNMUTE_VIDEO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} unmuting video`,\n      success: `${LOG_HEADER} unmuted video successfully`,\n      failure: `${LOG_HEADER} unmuting video failed, `\n    });\n  }\n\n  /**\n   * Shorthand function to join AND set up media\n   * @param {Object} options - options to join with media\n   * @param {JoinOptions} [options.joinOptions] - see #join()\n   * @param {MediaDirection} options.mediaSettings - see #addMedia()\n   * @param {AudioVideo} [options.audioVideoOptions] - see #getMediaStreams()\n   * @returns {Promise} -- {join: see join(), media: see addMedia(), local: see getMediaStreams()}\n   * @public\n   * @memberof Meeting\n   * @example\n   * joinWithMedia({\n   *  joinOptions: {resourceId: 'resourceId' },\n   *  mediaSettings: {\n   *   sendAudio: true,\n   *   sendVideo: true,\n   *   sendShare: false,\n   *   receiveVideo:true,\n   *   receiveAudio: true,\n   *   receiveShare: true\n   * }\n   * audioVideoOptions: {\n   *   audio: 'audioDeviceId',\n   *   video: 'videoDeviceId'\n   * }})\n   */\n  joinWithMedia(options = {}) {\n    // TODO: add validations for parameters\n    const {mediaSettings, joinOptions, audioVideoOptions} = options;\n\n    return this.join(joinOptions)\n      .then((joinResponse) =>\n        this.getMediaStreams(mediaSettings, audioVideoOptions).then(([localStream, localShare]) =>\n          this.addMedia({\n            mediaSettings,\n            localShare,\n            localStream\n          }).then((mediaResponse) => ({\n            join: joinResponse,\n            media: mediaResponse,\n            local: [localStream, localShare]\n          }))))\n      .catch((error) => {\n        LoggerProxy.logger.error('Meeting:index#joinWithMedia --> ', error);\n\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.JOIN_WITH_MEDIA_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          },\n          {\n            type: error.name\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Initiates the reconnection of the media in the meeting\n   *\n   * @param {object} options\n   * @returns {Promise} resolves with {reconnect} or errors with {error}\n   * @public\n   * @memberof Meeting\n   */\n  reconnect(options) {\n    LoggerProxy.logger.log(`Meeting:index#reconnect --> attempting to reconnect meeting ${this.id}`);\n\n    if (!this.reconnectionManager || !this.reconnectionManager.reconnect) {\n      return Promise.reject(new ParameterError('Cannot reconnect, ReconnectionManager must first be defined.'));\n    }\n\n    if (!MeetingUtil.isMediaEstablished(this.currentMediaStatus)) {\n      return Promise.reject(new ParameterError('Cannot reconnect, Media has not established to reconnect'));\n    }\n\n    try {\n      LoggerProxy.logger.info('Meeting:index#reconnect --> Validating reconnect ability.');\n      this.reconnectionManager.validate();\n    }\n    catch (error) {\n      // Unable to reconnect this call\n      if (error instanceof ReconnectInProgress) {\n        LoggerProxy.logger.info('Meeting:index#reconnect --> Unable to reconnect, reconnection in progress.');\n      }\n      else {\n        LoggerProxy.logger.log('Meeting:index#reconnect --> Unable to reconnect.', error);\n      }\n\n      return Promise.resolve();\n    }\n\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'reconnect'\n      },\n      EVENT_TRIGGERS.MEETING_RECONNECTION_STARTING\n    );\n\n\n    return this.reconnectionManager\n      .reconnect(options)\n      .then(() => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'reconnect'\n          },\n          EVENT_TRIGGERS.MEETING_RECONNECTION_SUCCESS\n        );\n        LoggerProxy.logger.log('Meeting:index#reconnect --> Meeting reconnect success');\n      })\n      .catch((error) => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'reconnect'\n          },\n          EVENT_TRIGGERS.MEETING_RECONNECTION_FAILURE,\n          {\n            error: new ReconnectionError('Reconnection failure event', error)\n          }\n        );\n\n        LoggerProxy.logger.error('Meeting:index#reconnect --> Meeting reconnect failed', error);\n\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.MEETING_RECONNECT_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        this.uploadLogs({\n          file: 'meeting/index',\n          function: 'reconnect'\n        });\n\n        return Promise.reject(new ReconnectionError('Reconnection failure event', error));\n      })\n      .finally(() => {\n        this.reconnectionManager.reset();\n      });\n  }\n\n  /**\n   * Specify joining via audio (option: pstn), video, screenshare\n   * @param {JoinOptions} options A configurable options object for joining a meeting\n   * @returns {Promise} the join response\n   * @public\n   * @memberof Meeting\n   * Scenario A: Joining own claimed personal meeting room\n   * Scenario B: Joining other's claimed personal meeting room, do pass pin (if desired to join as host, or nullify), do pass moderator\n   * Scenario C: Joining an unclaimed personal meeting room, -do not- pass pin or moderator on first try, -do- pass pin and moderator\n   *             if joining as host on second loop, pass pin and pass moderator if joining as guest on second loop\n   * Scenario D: Joining any other way (sip, pstn, conversationUrl, link just need to specify resourceId)\n   */\n  join(options = {}) {\n    // If a join request is being processed, refer to the deferred promise.\n    if (this.deferJoin) {\n      return this.deferJoin;\n    }\n\n    // Scope-up the resolve/reject methods for handling within join().\n    let joinFailed;\n    let joinSuccess;\n\n    // Create a deferred promise for a consistent resolve value from utils.\n    // This also prevents redundant API calls.\n    this.deferJoin = new Promise((resolve, reject) => {\n      joinFailed = reject;\n      joinSuccess = resolve;\n    });\n\n    if (options.rejoin) {\n      LoggerProxy.logger.log(`Meeting:index#join --> Generating a new correlation id for meeting ${this.id}`);\n      LoggerProxy.logger.log(`Meeting:index#join --> Previous correlation id ${this.correlationId}`);\n      this.setCorrelationId(uuid.v4());\n      LoggerProxy.logger.log(`Meeting:index#join --> New correlation id ${this.correlationId}`);\n      this.meetingFiniteStateMachine.reset();\n    }\n\n    Metrics.postEvent({\n      event: eventType.CALL_INITIATED,\n      meeting: this,\n      data: {trigger: trigger.USER_INTERACTION}\n    });\n\n    Metrics.sendOperationalMetric(\n      METRICS_OPERATIONAL_MEASURES.JOIN_ATTEMPT,\n      {\n        correlation_id: this.correlationId\n      }\n    );\n\n    LoggerProxy.logger.log('Meeting:index#join --> Joining a meeting');\n\n    if (this.meetingFiniteStateMachine.state === MEETING_STATE_MACHINE.STATES.ENDED) {\n      this.meetingFiniteStateMachine.reset();\n    }\n    if (this.meetingFiniteStateMachine.state !== MEETING_STATE_MACHINE.STATES.RINGING) {\n      this.meetingFiniteStateMachine.ring(_JOIN_);\n    }\n\n    // TODO: does this really need to be here?\n    if (options.resourceId && this.destination && options.resourceId === this.destination) {\n      this.wirelessShare = true;\n    }\n\n    if (options.meetingQuality) {\n      if (typeof options.meetingQuality === 'string') {\n        if (!QUALITY_LEVELS[options.meetingQuality]) {\n          const errorMessage = `Meeting:index#join --> ${options.meetingQuality} not defined`;\n          const error = new Error(errorMessage);\n\n          LoggerProxy.logger.error(errorMessage);\n\n          joinFailed(error);\n          this.deferJoin = undefined;\n\n          return Promise.reject(error);\n        }\n\n        this.mediaProperties.setLocalQualityLevel(options.meetingQuality);\n        this.mediaProperties.setRemoteQualityLevel(options.meetingQuality);\n      }\n\n      if (typeof options.meetingQuality === 'object') {\n        if (\n          !QUALITY_LEVELS[options.meetingQuality.local] &&\n          !QUALITY_LEVELS[options.meetingQuality.remote]\n        ) {\n          const errorMessage = `Meeting:index#join --> ${\n            options.meetingQuality.local || options.meetingQuality.remote\n          } not defined`;\n\n          LoggerProxy.logger.error(errorMessage);\n\n          const error = new Error(errorMessage);\n\n          joinFailed(error);\n          this.deferJoin = undefined;\n\n          return Promise.reject(new Error(errorMessage));\n        }\n\n        if (options.meetingQuality.local) {\n          this.mediaProperties.setLocalQualityLevel(options.meetingQuality.local);\n        }\n        if (options.meetingQuality.remote) {\n          this.mediaProperties.setRemoteQualityLevel(options.meetingQuality.remote);\n        }\n      }\n    }\n\n    return MeetingUtil.joinMeetingOptions(this, options).then((join) => {\n      this.meetingFiniteStateMachine.join();\n      LoggerProxy.logger.log('Meeting:index#join --> Success');\n\n      return join;\n    })\n      .then((join) => {\n        joinSuccess(join);\n        this.deferJoin = undefined;\n\n        return join;\n      })\n      .catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        LoggerProxy.logger.error('Meeting:index#join --> Failed', error);\n\n        // TODO:  change this to error codes and pre defined dictionary\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.JOIN_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            reason: error.error?.message,\n            stack: error.stack\n          }\n        );\n\n        // Upload logs on join Failure\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'join'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        joinFailed(error);\n        this.deferJoin = undefined;\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Moves the call to the specified resourceId\n   * @param {String} resourceId\n   * @returns {Promise} once the move has been completed\n   * @public\n   * @memberof Meeting\n   */\n  moveTo(resourceId) {\n    if (!resourceId) {\n      throw new ParameterError('Cannot move call without a resourceId.');\n    }\n\n    Metrics.postEvent({\n      event: eventType.MEDIA_CAPABILITIES,\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          },\n          tx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          }\n        }\n      }\n    });\n\n    Metrics.postEvent({event: eventType.MOVE_MEDIA, meeting: this});\n\n    return MeetingUtil.joinMeetingOptions(this, {resourceId, moveToResource: true}).then(() => {\n      this.meetingFiniteStateMachine.join();\n\n      return this.updateMedia({\n        mediaSettings: {\n          sendVideo: false, receiveVideo: false, sendAudio: false, receiveAudio: false, sendShare: false, receiveShare: false\n        }\n      }).then(() => Promise.resolve(this));\n    }).catch((error) => {\n      this.meetingFiniteStateMachine.fail(error);\n\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * Moves the call from the specified resourceId, back to computer\n   * @param {String} resourceId\n   * @returns {Promise} once the move has been completed\n   * @public\n   * @memberof Meeting\n   */\n  moveFrom(resourceId) {\n    if (!resourceId) {\n      throw new ParameterError('Cannot move call without a resourceId.');\n    }\n    const oldCorrelationId = this.correlationId;\n\n    this.id = uuid.v4();\n\n    this.webex.meetings.meetingCollection.set(this);\n\n    Metrics.postEvent({\n      event: eventType.MEDIA_CAPABILITIES,\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: true,\n            share: true,\n            share_audio: true,\n            video: true,\n            whiteboard: true\n          },\n          tx: {\n            audio: true,\n            share: true,\n            share_audio: true,\n            video: true,\n            whiteboard: true\n          }\n        }\n      }\n    });\n    Metrics.postEvent({event: eventType.MOVE_MEDIA, meeting: this});\n\n    return MeetingUtil.joinMeetingOptions(this).then((join) => this.getMediaStreams({sendAudio: true, sendVideo: true, sendShare: false})\n      .then(([localStream, localShare]) =>\n        this.updateMedia({\n          mediaSettings: {\n            sendAudio: true, receiveAudio: true, sendVideo: true, receiveVideo: true, sendShare: false, receiveShare: false\n          },\n          localStream,\n          localShare\n        })\n          .then(() => Promise.resolve(join)))\n      .then(() => MeetingUtil.leaveMeeting(this, {resourceId, correlationId: oldCorrelationId, moveMeeting: true})))\n      .then(() => {\n        this.webex.meetings.meetingCollection.delete(this.id);\n\n        return Promise.resolve();\n      });\n  }\n\n  /**\n   * Get local media streams based on options passed\n   * @param {MediaDirection} mediaDirection A configurable options object for joining a meeting\n   * @param {AudioVideo} [audioVideo] audio/video object to set audioinput and videoinput devices, see #Media.getUserMedia\n   * @param {SharePreferences} [sharePreferences] audio/video object to set audioinput and videoinput devices, see #Media.getUserMedia\n   * @returns {Promise} see #Media.getUserMedia\n   * @public\n   * @todo should be static, or moved so can be called outside of a meeting\n   * @memberof Meeting\n   */\n  getMediaStreams = (\n    mediaDirection,\n    // This return an OBJECT {video: {height, widght}}\n    audioVideo = VIDEO_RESOLUTIONS[this.mediaProperties.localQualityLevel],\n    sharePreferences\n  ) => {\n    if (\n      mediaDirection &&\n      (\n        mediaDirection.sendAudio ||\n        mediaDirection.sendVideo ||\n        mediaDirection.sendShare\n      )\n    ) {\n      if (mediaDirection &&\n        (\n          mediaDirection.sendAudio &&\n          mediaDirection.sendVideo &&\n          mediaDirection.sendShare\n        ) &&\n        isBrowser('safari')\n      ) {\n        LoggerProxy.logger.warn('Meeting:index#getMediaStreams --> Setting `sendShare` to FALSE, due to complications with Safari');\n\n        mediaDirection.sendShare = false;\n\n        LoggerProxy.logger.warn('Meeting:index#getMediaStreams --> Enabling `sendShare` along with `sendAudio` & `sendVideo`, on Safari, causes a failure while setting up a screen share at the same time as the camera+mic stream');\n        LoggerProxy.logger.warn('Meeting:index#getMediaStreams --> Please use `meeting.shareScreen()` to manually start the screen share after successfully joining the meeting');\n      }\n\n      // extract deviceId if exists otherwise default to null.\n      const {deviceId: preferredVideoDevice} = (audioVideo && audioVideo.video || {deviceId: null});\n      const lastVideoDeviceId = this.mediaProperties.getVideoDeviceId();\n\n      if (preferredVideoDevice) {\n        // Store new preferred video input device\n        this.mediaProperties.setVideoDeviceId(preferredVideoDevice);\n      }\n      else if (lastVideoDeviceId) {\n        // no new video preference specified so use last stored value,\n        // works with empty object {} or media constraint.\n        // eslint-disable-next-line no-param-reassign\n        audioVideo = {\n          ...audioVideo,\n          video: {\n            ...audioVideo.video,\n            deviceId: lastVideoDeviceId\n          }\n        };\n      }\n\n      return Media.getSupportedDevice({\n        sendAudio: mediaDirection.sendAudio,\n        sendVideo: mediaDirection.sendVideo\n      })\n        .catch((error) => Promise.reject(\n          new MediaError('Given constraints do not match permission set for either camera or microphone', error)\n        ))\n        .then((devicePermissions) =>\n          Media.getUserMedia(\n            {\n              ...mediaDirection,\n              sendAudio: devicePermissions.sendAudio,\n              sendVideo: devicePermissions.sendVideo,\n              isSharing: this.shareStatus === SHARE_STATUS.LOCAL_SHARE_ACTIVE\n            },\n            audioVideo,\n            sharePreferences,\n            this.config\n          )\n            .catch((error) => {\n              // Whenever there is a failure when trying to access a user's device\n              // report it as an operational metric\n              // This gives visibility into common errors and can help\n              // with further troubleshooting\n              const metricName = METRICS_OPERATIONAL_MEASURES.GET_USER_MEDIA_FAILURE;\n              const data = {\n                correlation_id: this.correlationId,\n                locus_id: this.locusUrl.split('/').pop(),\n                reason: error.message,\n                stack: error.stack\n              };\n              const metadata = {\n                type: error.name\n              };\n\n              Metrics.sendOperationalMetric(metricName, data, metadata);\n              throw new MediaError('Unable to retrieve media streams', error);\n            }));\n    }\n\n    return Promise.reject(\n      new MediaError('At least one of the mediaDirection value should be true')\n    );\n  };\n\n\n  /**\n   * Checks if the machine has at least one audio or video device\n   * @param {Object} options\n   * @param {Boolean} options.sendAudio\n   * @param {Boolean} options.sendVideo\n   * @returns {Object}\n   * @memberof Meetings\n   */\n  getSupportedDevices = ({sendAudio = true, sendVideo = true}) => Media.getSupportedDevice({sendAudio, sendVideo});\n\n  /**\n   * Get the devices from the Media module\n   * @returns {Promise} resolves to an array of DeviceInfo\n   * @memberof Meetings\n   */\n  getDevices = () => Media.getDevices();\n\n  /**\n   * Specify joining via audio (option: pstn), video, screenshare\n   * @param {Object} options A configurable options object for joining a meeting\n   * @param {Object} options.resourceId pass the deviceId\n   * @param {MediaDirection} options.mediaSettings pass media options\n   * @param {MediaStream} options.localStream\n   * @param {MediaStream} options.localShare\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  addMedia(options = {}) {\n    const LOG_HEADER = 'Meeting:index#addMedia -->';\n\n    if (this.meetingState !== FULL_STATE.ACTIVE) {\n      return Promise.reject(new MeetingNotActiveError());\n    }\n\n    if (MeetingUtil.isUserInLeftState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n    // If the user is unjoined or guest waiting in lobby dont allow the user to addMedia\n    if (this.guest && MeetingUtil.isUserInIdleState(this.locusInfo) && !this.wirelessShare) {\n      return Promise.reject(new UserInLobbyError());\n    }\n\n    const {localStream, localShare, mediaSettings} = options;\n\n    LoggerProxy.logger.info(`${LOG_HEADER} Adding Media.`);\n\n    Metrics.postEvent({\n      event: eventType.MEDIA_CAPABILITIES,\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          },\n          tx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          }\n        }\n      }\n    });\n\n    return MeetingUtil.validateOptions(options)\n      .then(() => {\n        if (!this.mediaProperties.peerConnection) {\n          this.mediaProperties.setMediaPeerConnection(MediaUtil.createPeerConnection());\n        }\n        this.setMercuryListener();\n        PeerConnectionManager.setPeerConnectionEvents(this);\n\n        return this.preMedia(localStream, localShare, mediaSettings);\n      })\n      .then(() => Media.attachMedia(this.mediaProperties, {\n        meetingId: this.id,\n        remoteQualityLevel: this.mediaProperties.remoteQualityLevel,\n        enableRtx: this.config.enableRtx\n      })\n        .then((peerConnection) => {\n          LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection Received from attachMedia `);\n\n          this.setRemoteStream(peerConnection);\n          MeetingUtil.startInternalStats(this);\n\n          if (this.config.metrics.autoSendMQA) {\n            this.startMediaQualityMetrics();\n          }\n\n          if (this.config.stats.enableStatsAnalyzer) {\n            // TODO: ** Dont re create StatsAnalyzer on reconnect or rejoin\n            this.statsAnalyzer = new StatsAnalyzer(this.config.stats);\n            this.statsAnalyzer.on(EVENT_TRIGGERS.MEDIA_QUALITY, (options) => {\n              // TODO:  might have to send the same event to the developer\n              // Add ip address info if geo hint is present\n              options.data.intervalMetadata.peerReflexiveIP = this.webex.meetings.geoHintInfo?.clientAddress || options.data.intervalMetadata.peerReflexiveIP || MQA_STATS.DEFAULT_IP;\n              Metrics.postEvent({event: eventType.MEDIA_QUALITY, meeting: this, data: {intervalData: options.data, networkType: options.networkType}});\n            });\n            this.statsAnalyzer.on(EVENT_TRIGGERS.MEETING_HIGH_PACKETLOSS, (res) => {\n              if (res.mediaType === VIDEO) {\n                if (this.config.stats.autoDowngradeEnabled && this.canUpdateMedia()) {\n                  LoggerProxy.logger.log(`${LOG_HEADER} High Packet Loss Detected, Adjusting Local Video Quality`);\n                  if (this.mediaProperties.localQualityLevel === QUALITY_LEVELS.HIGH) {\n                    this.setLocalVideoQuality(QUALITY_LEVELS.MEDIUM);\n                  }\n                  else if (this.mediaProperties.localQualityLevel === QUALITY_LEVELS.MEDIUM) {\n                    this.setLocalVideoQuality(QUALITY_LEVELS.LOW);\n                  }\n                }\n                Trigger.trigger(\n                  this,\n                  {\n                    file: 'meeting/index',\n                    function: 'addMedia'\n                  },\n                  EVENT_TRIGGERS.MEETING_HIGH_PACKETLOSS,\n                  {\n                    mediaType: res.mediaType,\n                    packetLossRatio: res.packetLossRatio\n                  }\n                );\n              }\n            });\n          }\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error(`${LOG_HEADER} Error adding media , setting up peerconnection, `, error);\n\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.ADD_MEDIA_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          throw error;\n        })\n        .then(() => new Promise((resolve, reject) => {\n          let timerCount = 0;\n\n          // eslint-disable-next-line func-names\n          // eslint-disable-next-line prefer-arrow-callback\n          if (this.type === _CALL_) {\n            resolve();\n          }\n          const joiningTimer = setInterval(() => {\n            timerCount += 1;\n            if (this.meetingState === FULL_STATE.ACTIVE) {\n              clearInterval(joiningTimer);\n              resolve();\n            }\n\n            if (timerCount === 4) {\n              clearInterval(joiningTimer);\n              reject(new Error('Meeting is still not active '));\n            }\n          }, 1000);\n        }))\n        .then(() => logRequest(this.roap\n          .sendRoapMediaRequest({\n            sdp: this.mediaProperties.peerConnection.sdp,\n            roapSeq: this.roapSeq,\n            meeting: this // or can pass meeting ID\n          }), {\n          header: `${LOG_HEADER} Send Roap Media Request.`,\n          success: `${LOG_HEADER} Successfully send roap media request`,\n          failure: `${LOG_HEADER} Error joining the call on send roap media request, `\n        }))\n        .then(() => {\n          const {peerConnection} = this.mediaProperties;\n\n          return new Promise((resolve, reject) => {\n            if (peerConnection.connectionState === CONNECTION_STATE.CONNECTED) {\n              LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection CONNECTED`);\n\n              resolve(peerConnection);\n\n              return;\n            }\n            // Check if Peer Connection is STABLE (connected)\n            const stabilityTimeout = setTimeout(() => {\n              if (peerConnection.connectionState !== CONNECTION_STATE.CONNECTED) {\n                // TODO: Fix this after the error code pr goes in\n                reject(createMeetingsError(30202, 'Meeting connection failed'));\n              }\n              else {\n                LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection CONNECTED`);\n                resolve(peerConnection);\n              }\n            }, PC_BAIL_TIMEOUT);\n\n            this.once(EVENT_TRIGGERS.MEDIA_READY, () => {\n              LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection CONNECTED, clearing stability timer.`);\n              clearTimeout(stabilityTimeout);\n              resolve(peerConnection);\n            });\n          });\n        })\n        .then(() => {\n          if (mediaSettings && mediaSettings.sendShare && localShare) {\n            if (this.state === MEETING_STATE.STATES.JOINED) {\n              return this.share();\n            }\n\n            // When the self state changes to JOINED then request the floor\n            this.floorGrantPending = true;\n          }\n\n          return Promise.resolve();\n        }))\n      .catch((error) => {\n        LoggerProxy.logger.error(`${LOG_HEADER} Error adding media failed to initiate PC and send request, `, error);\n\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.ADD_MEDIA_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n            code: error.code\n          }\n        );\n\n        // Upload logs on error while adding media\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'addMedia'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        // If addMedia failes for not establishing connection then\n        // leave the meeting with reson connection failed as meeting anyways will end\n        // and cannot be connected unless network condition is checked for firewall\n        if (error.code === InvalidSdpError.CODE) {\n          this.leave({reason: MEETING_REMOVED_REASON.MEETING_CONNECTION_FAILED});\n        }\n\n        throw error;\n      });\n  }\n\n  /**\n   * Informs if the peer connection is in a state that can be updated with updateMedia (audio/video/share)\n   * @returns {Boolean}\n   */\n  canUpdateMedia() {\n    return this.mediaProperties.peerConnection.signalingState === SDP.STABLE;\n  }\n\n  /**\n   * A confluence of updateAudio, updateVideo, and updateShare\n   * this function re-establishes all of the media streams with new options\n   * @param {Object} options\n   * @param {MediaStream} options.localStream\n   * @param {MediaStream} options.localShare\n   * @param {MediaDirection} options.mediaSettings\n   * @returns {Promise}\n   * @todo fix setRemoteStream for updateMedia\n   * @public\n   * @memberof Meeting\n   */\n  updateMedia(options = {}) {\n    const LOG_HEADER = 'Meeting:index#updateMedia -->';\n\n    if (!this.canUpdateMedia()) {\n      return Promise.reject(new MediaError('The peer connection is currently negotiation an offer. Please wait for a few seconds and try again.'));\n    }\n    const {localStream, localShare, mediaSettings} = options;\n\n    const previousSendShareStatus = this.mediaProperties.mediaDirection.sendShare;\n\n    return MeetingUtil.validateOptions(options)\n      .then(() => this.preMedia(localStream, localShare, mediaSettings))\n      .then(() => Media.updateMedia(this.mediaProperties, {\n        meetingId: this.id,\n        remoteQualityLevel: this.mediaProperties.remoteQualityLevel,\n        enableRtx: this.config.enableRtx\n      })\n        .then((peerConnection) => {\n          LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection received from updateMedia, ${peerConnection}`);\n          this.setRemoteStream(peerConnection);\n          if (mediaSettings.receiveShare || localShare) {\n            PeerConnectionManager.setContentSlides(peerConnection);\n          }\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error(`${LOG_HEADER} Error updatedMedia, `, error);\n\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.UPDATE_MEDIA_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          throw error;\n        })\n        .then(() =>\n          logRequest(this.roap\n            .sendRoapMediaRequest({\n              sdp: this.mediaProperties.peerConnection.sdp,\n              roapSeq: this.roapSeq,\n              meeting: this // or can pass meeting ID\n            }),\n          {\n            header: `${LOG_HEADER} sendRoapMediaRequest being sent`,\n            success: `${LOG_HEADER} sendRoadMediaRequest successful`,\n            failure: `${LOG_HEADER} Error updateMedia on send roap media request, `\n          }))\n        .then(() => this.checkForStopShare(mediaSettings.sendShare, previousSendShareStatus))\n        .then((startShare) => {\n          // This is a special case if we do an /floor grant followed by /media\n          // we actually get a OFFER from the server and a GLAR condition happens\n          if (startShare) {\n            // We are assuming that the clients are connected when doing an update\n            return this.share();\n          }\n\n          return Promise.resolve();\n        }));\n  }\n\n  /**\n   * Update the main audio track with new parameters\n   * @param {Object} options\n   * @param {boolean} options.sendAudio\n   * @param {boolean} options.receiveAudio\n   * @param {MediaStream} options.stream Stream that contains the audio track to update\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  updateAudio(options) {\n    if (!this.canUpdateMedia()) {\n      return Promise.reject(new MediaError('The peer connection is currently negotiation an offer. Please wait for a few seconds and try again.'));\n    }\n    const {sendAudio, receiveAudio, stream} = options;\n    const {audioTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).audioTrack;\n\n    if (typeof sendAudio !== 'boolean' || typeof receiveAudio !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendAudio and receiveAudio parameter'));\n    }\n\n    return MeetingUtil.validateOptions({sendAudio, localStream: stream})\n      .then(() => {\n        let previousMediaDirection = {};\n\n        if (this.mediaProperties.mediaDirection) {\n          previousMediaDirection = {\n            sendTrack: this.mediaProperties.mediaDirection.sendAudio,\n            receiveTrack: this.mediaProperties.mediaDirection.receiveAudio\n          };\n        }\n        else {\n          this.mediaProperties.mediaDirection = {};\n        }\n\n        return MeetingUtil.updateTransceiver(\n          {\n            type: 'audio',\n            sendTrack: options.sendAudio,\n            receiveTrack: options.receiveAudio,\n            track,\n            transceiver: audioTransceiver,\n            peerConnection: this.mediaProperties.peerConnection,\n            previousMediaDirection\n          },\n          {\n            mediaProperties: this.mediaProperties,\n            roapSeq: this.roapSeq,\n            meeting: this,\n            id: this.id\n          }\n        );\n      })\n      .then(() => {\n        this.setLocalAudioTrack(track);\n        this.mediaProperties.mediaDirection.sendAudio = sendAudio;\n        this.mediaProperties.mediaDirection.receiveAudio = receiveAudio;\n\n        // audio state could be undefined if you have not sent audio before\n        this.audio = this.audio || createMuteState(AUDIO, this, this.mediaProperties.mediaDirection);\n      });\n  }\n\n  /**\n   * Update the main video track with new parameters\n   * @param {Object} options\n   * @param {boolean} options.sendVideo\n   * @param {boolean} options.receiveVideo\n   * @param {MediaStream} options.stream Stream that contains the video track to update\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  updateVideo(options) {\n    if (!this.canUpdateMedia()) {\n      return Promise.reject(new MediaError('The peer connection is currently negotiation an offer. Please wait for a few seconds and try again.'));\n    }\n    const {sendVideo, receiveVideo, stream} = options;\n    const {videoTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).videoTrack;\n\n    if (typeof sendVideo !== 'boolean' || typeof receiveVideo !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendVideo and receiveVideo parameter'));\n    }\n\n    return MeetingUtil.validateOptions({sendVideo, localStream: stream})\n      .then(() => MeetingUtil.updateTransceiver({\n        type: 'video',\n        sendTrack: options.sendVideo,\n        receiveTrack: options.receiveVideo,\n        track,\n        transceiver: videoTransceiver,\n        peerConnection: this.mediaProperties.peerConnection,\n        previousMediaDirection: {\n          sendTrack: this.mediaProperties.mediaDirection.sendVideo,\n          receiveTrack: this.mediaProperties.mediaDirection.receiveVideo\n        }\n      },\n      {\n        mediaProperties: this.mediaProperties,\n        roapSeq: this.roapSeq,\n        meeting: this,\n        id: this.id\n      }))\n      .then(() => {\n        this.setLocalVideoTrack(track);\n        this.mediaProperties.mediaDirection.sendVideo = sendVideo;\n        this.mediaProperties.mediaDirection.receiveVideo = receiveVideo;\n\n        // video state could be undefined if you have not sent video before\n        this.video = this.video || createMuteState(VIDEO, this, this.mediaProperties.mediaDirection);\n      });\n  }\n\n  /**\n   * Internal function when stopping a share stream, cleanup\n   * @param {boolean} sendShare\n   * @param {boolean} previousShareStatus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  checkForStopShare(sendShare, previousShareStatus) {\n    if (sendShare && !previousShareStatus) {\n      // When user starts sharing\n      return Promise.resolve(true);\n    }\n\n    if (!sendShare && previousShareStatus) {\n      // When user stops sharing\n      return this.stopFloorRequest()\n        .then(() => Promise.resolve(false));\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Update the share streams, can be used to start sharing\n   * @param {Object} options\n   * @param {boolean} options.sendShare\n   * @param {boolean} options.receiveShare\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  updateShare(options) {\n    if (!options.skipSignalingCheck && !this.canUpdateMedia()) {\n      return Promise.reject(new MediaError('The peer connection is currently negotiation an offer. Please wait for a few seconds and try again.'));\n    }\n    const {sendShare, receiveShare, stream} = options;\n    const {shareTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).videoTrack;\n\n    if (typeof sendShare !== 'boolean' || typeof receiveShare !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendShare and receiveShare parameter'));\n    }\n    const previousSendShareStatus = this.mediaProperties.mediaDirection.sendShare;\n\n    this.setLocalShareTrack(stream);\n\n    return MeetingUtil.validateOptions({sendShare, localShare: stream})\n      .then(() => this.checkForStopShare(sendShare, previousSendShareStatus))\n      .then((startShare) => MeetingUtil.updateTransceiver({\n        type: 'video',\n        sendTrack: sendShare,\n        receiveTrack: receiveShare,\n        track,\n        transceiver: shareTransceiver,\n        peerConnection: this.mediaProperties.peerConnection,\n        previousMediaDirection: {\n          sendTrack: this.mediaProperties.mediaDirection.sendShare,\n          receiveTrack: this.mediaProperties.mediaDirection.receiveShare\n        }\n      },\n      {\n        mediaProperties: this.mediaProperties,\n        roapSeq: this.roapSeq,\n        meeting: this,\n        id: this.id\n      })\n        .then(() => {\n          if (startShare) {\n            return this.share();\n          }\n\n          return Promise.resolve();\n        }))\n      .then(() => {\n        this.mediaProperties.mediaDirection.sendShare = sendShare;\n        this.mediaProperties.mediaDirection.receiveShare = receiveShare;\n      })\n      .catch((error) => {\n        this.unsetLocalShareTrack(stream);\n        throw error;\n      })\n      .finally(() => {\n        const delay = 1e3;\n        // Check to see if share was stopped natively before onended was assigned.\n        const sharingModeIsActive = this.mediaProperties.peerConnection.shareTransceiver.direction === SENDRECV;\n        const isSharingOutOfSync = sharingModeIsActive && !this.isLocalShareLive;\n\n        if (isSharingOutOfSync) {\n          // Adding a delay to avoid a 409 from server\n          // which results in user still appearing as if sharing.\n          // Also delay give time for changes to peerConnection.\n          setTimeout(\n            () => this.handleShareTrackEnded(stream),\n            delay\n          );\n        }\n      });\n  }\n\n  /**\n   * Do all the attach media pre set up before executing the actual attach\n   * @param {MediaStream} localStream\n   * @param {MediaStream} localShare\n   * @param {MediaDirection} mediaSettings\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  preMedia(localStream, localShare, mediaSettings) {\n    // eslint-disable-next-line no-warning-comments\n    // TODO wire into default config. There's currently an issue with the stateless plugin or how we register\n    this.mediaProperties.setMediaDirection(Object.assign(this.config.mediaSettings, mediaSettings));\n    // add a setup a function move the create and setup media in future\n    // TODO: delete old audio and video if stale\n    this.audio = this.audio || createMuteState(AUDIO, this, this.mediaProperties.mediaDirection);\n    this.video = this.video || createMuteState(VIDEO, this, this.mediaProperties.mediaDirection);\n    // Validation is already done in addMedia so no need to check if the lenght is greater then 0\n    this.setLocalTracks(localStream);\n    this.setLocalShareTrack(localShare);\n  }\n\n  /**\n   * Acknowledge the meeting, outgoing or incoming\n   * @param {String} type\n   * @returns {Promise} resolve {message, ringing, response}\n   * @public\n   * @memberof Meeting\n   */\n  acknowledge(type) {\n    if (!type) {\n      return Promise.reject(new ParameterError('Type must be set to acknowledge the meeting.'));\n    }\n    if (type === _INCOMING_) {\n      return this.meetingRequest\n        .acknowledgeMeeting({\n          locusUrl: this.locusUrl,\n          deviceUrl: this.deviceUrl,\n          correlationId: this.correlationId\n        })\n        .then((response) => Promise.resolve(response))\n        .then((response) => {\n          this.meetingFiniteStateMachine.ring(type);\n          Metrics.postEvent({event: eventType.ALERT_DISPLAYED, meeting: this});\n\n          return Promise.resolve({\n            response\n          });\n        });\n    }\n\n    // TODO: outside of 1:1 incoming, and all outgoing calls\n    return Promise.resolve({\n      message: 'noop'\n    });\n  }\n\n  /**\n   * Decline this meeting\n   * @param {String} reason\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  decline(reason) {\n    return MeetingUtil.declineMeeting(this, reason).then((decline) => {\n      this.meetingFiniteStateMachine.decline();\n\n      return Promise.resolve(decline);\n    }).catch((error) => {\n      this.meetingFiniteStateMachine.fail(error);\n\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * Leave the current meeting\n   * @param {Object} options leave options\n   * @param {String} options.resourceId the device with which to leave from, empty if just the computer\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  leave(options = {}) {\n    Metrics.postEvent({event: eventType.LEAVE, meeting: this, data: {trigger: trigger.USER_INTERACTION, canProceed: false}});\n    const leaveReason = options.reason || MEETING_REMOVED_REASON.CLIENT_LEAVE_REQUEST;\n\n    LoggerProxy.logger.log('Meeting:index#leave --> Leaving a meeting');\n\n    return MeetingUtil.leaveMeeting(this, options)\n      .then((leave) => {\n        this.meetingFiniteStateMachine.leave();\n        this.audio = null;\n        this.video = null;\n        this.isSharing = false;\n        if (this.shareStatus === SHARE_STATUS.LOCAL_SHARE_ACTIVE) {\n          this.shareStatus = SHARE_STATUS.NO_SHARE;\n        }\n\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'leave'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        // TODO: more testing before we remove this code, we are not sure the scenarios for destroy here\n        if (this.wirelessShare || this.guest) {\n          // If screen sharing clean the meeting object\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'leave'\n            },\n            EVENTS.DESTROY_MEETING,\n            {\n              reason: options.reason,\n              meetingId: this.id\n            }\n          );\n        }\n        LoggerProxy.logger.log('Meeting:index#leave --> LEAVE REASON ', leaveReason);\n\n        return leave;\n      }).catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        LoggerProxy.logger.error('Meeting:index#leave --> Failed to leave ', error);\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'leave'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.MEETING_LEAVE_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n            code: error.code\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Start sharing content with server\n   * @returns {Promise} see #meetingRequest.changeMeetingFloor\n   * @private\n   * @memberof Meeting\n   */\n  share() {\n    const content = this.locusInfo.mediaShares.find((element) => element.name === CONTENT);\n\n    if (content && (this.shareStatus !== SHARE_STATUS.LOCAL_SHARE_ACTIVE)) {\n      Metrics.postEvent({event: eventType.SHARE_INITIATED, meeting: this});\n\n      return this.meetingRequest.changeMeetingFloor({\n        disposition: FLOOR_ACTION.GRANTED,\n        personUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        uri: content.url,\n        resourceUrl: this.resourceUrl\n      })\n        .then(() => {\n          this.isSharing = true;\n\n          return Promise.resolve();\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#share --> Error ', error);\n\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.MEETING_SHARE_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          return Promise.reject(error);\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot share without content.'));\n  }\n\n  /**\n   * Stops the screen share\n   * @returns {Promise} see #updateShare\n   * @public\n   * @memberof Meeting\n   */\n  // Internal only, temporarily allows optional params\n  // eslint-disable-next-line valid-jsdoc\n  stopShare(options = {}) {\n    return this.updateShare({\n      sendShare: false,\n      receiveShare: this.mediaProperties.mediaDirection.receiveShare,\n      ...options\n    });\n  }\n\n  /**\n   * sends stops floor request\n   * @returns {Promise} see #meetingRequest.changeMeetingFloor\n   * @private\n   * @memberof Meeting\n   */\n  stopFloorRequest() {\n    const content = this.locusInfo.mediaShares.find((element) => element.name === CONTENT);\n\n    if (content && (this.mediaProperties.mediaDirection.sendShare)) {\n      Metrics.postEvent({event: eventType.SHARE_STOPPED, meeting: this});\n      Media.stopTracks(this.mediaProperties.shareTrack);\n\n      if (this.contentId !== this.selfId) {\n        // remote participant started sharing and caused our sharing to stop, we don't want to send any floor action request in that case\n        this.isSharing = false;\n\n        return Promise.resolve();\n      }\n\n      return this.meetingRequest.changeMeetingFloor({\n        disposition: FLOOR_ACTION.RELEASED,\n        personUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        uri: content.url,\n        resourceUrl: this.resourceUrl\n      })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#stopFloorRequest --> Error ', error);\n\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.STOP_FLOOR_REQUEST_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          return Promise.reject(error);\n        })\n        .finally(() => {\n          this.isSharing = false;\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot stop share without content'));\n  }\n\n  /**\n   * Intiate a recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  startRecording() {\n    return MeetingUtil.startRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * End the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  stopRecording() {\n    return MeetingUtil.stopRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * Pauses the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  pauseRecording() {\n    return MeetingUtil.pauseRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * Resumes the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  resumeRecording() {\n    return MeetingUtil.resumeRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * Locks the current meeting if possible\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  lockMeeting() {\n    return MeetingUtil.lockMeeting(this.inMeetingActions, this.meetingRequest, this.locusUrl);\n  }\n\n  /**\n   * Unlocks the current meeting if possible\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  unlockMeeting() {\n    return MeetingUtil.unlockMeeting(this.inMeetingActions, this.meetingRequest, this.locusUrl);\n  }\n\n  /**\n   * Logs an error message and returns a rejected promise with same message\n   * @param {String} message\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  rejectWithErrorLog(message) {\n    LoggerProxy.logger.error(message);\n\n    return Promise.reject(new Error(message));\n  }\n\n  /**\n   * Sends DTMF tones to the current meeting\n   * @param {String} tones a string of one or more DTMF tones to send\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  sendDTMF(tones) {\n    if (this.locusInfo && this.locusInfo.self) {\n      if (this.locusInfo.self.enableDTMF) {\n        return this.meetingRequest\n          .sendDTMF({\n            locusUrl: this.locusInfo.self.url,\n            deviceUrl: this.deviceUrl,\n            tones\n          });\n      }\n\n      return this.rejectWithErrorLog('Meeting:index#sendDTMF --> cannot send DTMF, meeting does not have DTMF enabled');\n    }\n\n    return this.rejectWithErrorLog('Meeting:index#sendDTMF --> cannot send DTMF, meeting does not have a connection to the \"locus\" call control service. Have you joined?');\n  }\n\n  /**\n   * Sends request to change layout type for the current meeting for the specific participant/device only\n   * @param {String} layoutType a layout type that should be available in meeting constants LAYOUT_TYPES\n   * @param {Object} renderInfo preferred dimensions for the remote main and content streams (server can ignore it)\n   * @param {Object} renderInfo.main preferred dimensions for the remote main video stream\n   * @param {Number} renderInfo.main.width preferred width of main video stream\n   * @param {Number} renderInfo.main.height preferred height of main video stream\n   * @param {Object} renderInfo.content preferred dimensions for the remote content share stream\n   * @param {Number} renderInfo.content.width preferred width of content share stream\n   * @param {Number} renderInfo.content.height preferred height of content share stream\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  changeVideoLayout(layoutType, renderInfo = {}) {\n    const {main, content} = renderInfo;\n    const {mediaDirection, remoteShare, remoteVideoTrack} = this.mediaProperties;\n\n    const layoutInfo = cloneDeep(this.lastVideoLayoutInfo);\n\n    // TODO: We need a real time value for Audio, Video and Share send indicator\n    if (mediaDirection.receiveVideo !== true || !remoteVideoTrack) {\n      return this.rejectWithErrorLog('Meeting:index#changeVideoLayout --> cannot change video layout, you are not recieving any video/share stream');\n    }\n\n    if (LAYOUT_TYPES.includes(layoutType)) {\n      layoutInfo.layoutType = layoutType;\n    }\n    else {\n      return this.rejectWithErrorLog('Meeting:index#changeVideoLayout --> cannot change video layout, invalid layoutType recieved.');\n    }\n\n    if (main) {\n      const mainWidth = Math.round(main.width);\n      const mainHeight = Math.round(main.height);\n\n      // Stop any \"twitching\" caused by very slight size changes\n      if (\n        !this.lastVideoLayoutInfo.main ||\n        Math.abs(this.lastVideoLayoutInfo.main.height - mainHeight) > 2 ||\n        Math.abs(this.lastVideoLayoutInfo.main.width - mainWidth) > 2\n      ) {\n        layoutInfo.main = {width: mainWidth, height: mainHeight};\n      }\n    }\n\n    if (content) {\n      if (this.mediaProperties.mediaDirection.receiveShare && remoteShare) {\n        const contentWidth = Math.round(content.width);\n        const contentHeight = Math.round(content.height);\n\n        // Stop any \"twitching\" caused by very slight size changes\n        if (!this.lastVideoLayoutInfo.content ||\n          Math.abs(this.lastVideoLayoutInfo.content.height - contentHeight) > 2 ||\n          Math.abs(this.lastVideoLayoutInfo.content.width - contentWidth) > 2\n        ) {\n          layoutInfo.content = {width: contentWidth, height: contentHeight};\n        }\n      }\n      else {\n        return this.rejectWithErrorLog('Meeting:index#changeVideoLayout --> unable to send renderInfo for content, you are not receiving remote share');\n      }\n    }\n\n    if (isEqual(layoutInfo, this.lastVideoLayoutInfo)) {\n      // nothing changed, no need to send any request\n      return Promise.resolve();\n    }\n    this.lastVideoLayoutInfo = cloneDeep(layoutInfo);\n\n    return this.meetingRequest\n      .changeVideoLayoutDebounced({\n        locusUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        layoutType,\n        main: layoutInfo.main,\n        content: layoutInfo.content\n      })\n      .then((response) => {\n        if (response && response.body && response.body.locus) {\n          this.locusInfo.onFullLocus(response.body.locus);\n        }\n      })\n      .catch((error) => {\n        LoggerProxy.logger.error('Meeting:index#changeVideoLayout --> Error ', error);\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Sets the quality of the local video stream\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setLocalVideoQuality(level) {\n    LoggerProxy.logger.log(`Meeting:index#setLocalVideoQuality --> Setting quality to ${level}`);\n\n    if (!VIDEO_RESOLUTIONS[level]) {\n      return this.rejectWithErrorLog(`Meeting:index#setLocalVideoQuality --> ${level} not defined`);\n    }\n\n    if (!this.mediaProperties.mediaDirection.sendVideo) {\n      return this.rejectWithErrorLog('Meeting:index#setLocalVideoQuality --> unable to change video quality, sendVideo is disabled');\n    }\n\n    // If level is already the same, don't do anything\n    if (level === this.mediaProperties.localQualityLevel) {\n      LoggerProxy.logger.warn(`Meeting:index#setLocalQualityLevel --> Quality already set to ${level}`);\n\n      return Promise.resolve();\n    }\n\n    // Set the quality level in properties\n    this.mediaProperties.setLocalQualityLevel(level);\n\n    const mediaDirection = {\n      sendAudio: this.mediaProperties.mediaDirection.sendAudio,\n      sendVideo: this.mediaProperties.mediaDirection.sendVideo,\n      sendShare: this.mediaProperties.mediaDirection.sendShare\n    };\n\n    return this.getMediaStreams(mediaDirection, VIDEO_RESOLUTIONS[level])\n      .then(([localStream]) =>\n        this.updateVideo({\n          sendVideo: true,\n          receiveVideo: true,\n          stream: localStream\n        }));\n  }\n\n  /**\n   * Sets the quality level of the remote incoming media\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setRemoteQualityLevel(level) {\n    LoggerProxy.logger.log(`Meeting:index#setRemoteQualityLevel --> Setting quality to ${level}`);\n\n    if (!QUALITY_LEVELS[level]) {\n      return this.rejectWithErrorLog(`Meeting:index#setRemoteQualityLevel --> ${level} not defined`);\n    }\n\n    if (!this.mediaProperties.mediaDirection.receiveAudio && !this.mediaProperties.mediaDirection.receiveVideo) {\n      return this.rejectWithErrorLog('Meeting:index#setRemoteQualityLevel --> unable to change remote quality, receiveVideo and receiveAudio is disabled');\n    }\n\n    // If level is already the same, don't do anything\n    if (level === this.mediaProperties.remoteQualityLevel) {\n      LoggerProxy.logger.warn(`Meeting:index#setRemoteQualityLevel --> Quality already set to ${level}`);\n\n      return Promise.resolve();\n    }\n\n    // Set the quality level in properties\n    this.mediaProperties.setRemoteQualityLevel(level);\n\n    return this.updateMedia({mediaSettings: this.mediaProperties.mediaDirection});\n  }\n\n  /**\n   * Sets the quality level of all meeting media (incoming/outgoing)\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setMeetingQuality(level) {\n    LoggerProxy.logger.log(`Meeting:index#setMeetingQuality --> Setting quality to ${level}`);\n\n    if (!QUALITY_LEVELS[level]) {\n      return this.rejectWithErrorLog(`Meeting:index#setMeetingQuality --> ${level} not defined`);\n    }\n\n    const previousLevel = {\n      local: this.mediaProperties.localQualityLevel,\n      remote: this.mediaProperties.remoteQualityLevel\n    };\n\n    // If level is already the same, don't do anything\n    if (\n      level === this.mediaProperties.localQualityLevel &&\n      level === this.mediaProperties.remoteQualityLevel\n    ) {\n      LoggerProxy.logger.warn(`Meeting:index#setMeetingQuality --> Quality already set to ${level}`);\n\n      return Promise.resolve();\n    }\n\n    // Determine the direction of our current media\n    const {receiveAudio, receiveVideo, sendVideo} = this.mediaProperties.mediaDirection;\n\n    return (sendVideo ? this.setLocalVideoQuality(level) : Promise.resolve())\n      .then(() =>\n        ((receiveAudio || receiveVideo) ?\n          this.setRemoteQualityLevel(level) :\n          Promise.resolve()))\n      .catch((error) => {\n        // From troubleshooting it seems that the stream itself doesn't change the max-fs if the peer connection isn't stable\n        this.mediaProperties.setLocalQualityLevel(previousLevel.local);\n        this.mediaProperties.setRemoteQualityLevel(previousLevel.remote);\n\n        LoggerProxy.logger.error(`Meeting:index#setMeetingQuality --> ${error.message}`);\n\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.SET_MEETING_QUALITY_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          },\n          {\n            type: error.name\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n  * @param {Object} options parameter\n  * @param {Boolean} options.sendAudio send audio from the display share\n  * @param {Boolean} options.sendShare send video from the display share\n  * @param {Object} options.sharePreferences\n  * @param {MediaTrackConstraints} options.sharePreferences.shareConstraints constraints to apply to video\n  *   @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints}\n  * @param {Boolean} options.sharePreferences.highFrameRate if shareConstraints isn't provided, set default values based off of this boolean\n  * @returns {Promise}\n  */\n  shareScreen(options = {}) {\n    LoggerProxy.logger.log('Meeting:index#shareScreen --> Getting local share');\n\n    const shareConstraints = {\n      sendShare: true,\n      sendAudio: false,\n      ...options\n    };\n\n    return Media.getDisplayMedia(shareConstraints, this.config)\n      .then((shareStream) => this.updateShare({\n        sendShare: true,\n        receiveShare: this.mediaProperties.mediaDirection.receiveShare,\n        stream: shareStream\n      }))\n      .catch((error) => {\n        // Whenever there is a failure when trying to access a user's display\n        // report it as an operational metric\n        // This gives visibility into common errors and can help\n        // with further troubleshooting\n\n        // This metrics will get erros for getDisplayMedia and share errors for now\n        // TODO: The getDisplayMedia errors need to be moved inside `media.getDisplayMedia`\n        const metricName = METRICS_OPERATIONAL_MEASURES.GET_DISPLAY_MEDIA_FAILURE;\n        const data = {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          reason: error.message,\n          stack: error.stack\n        };\n        const metadata = {\n          type: error.name\n        };\n\n        Metrics.sendOperationalMetric(metricName, data, metadata);\n        throw new MediaError('Unable to retrieve display media stream', error);\n      });\n  }\n\n  /**\n   * Functionality for when a share is ended.\n   * @private\n   * @memberof Meeting\n   * @param {MediaStream} localShare\n   * @returns {undefined}\n   */\n  handleShareTrackEnded(localShare) {\n    if (this.wirelessShare) {\n      this.leave({reason: MEETING_REMOVED_REASON.USER_ENDED_SHARE_STREAMS});\n    }\n    else {\n      // Skip checking for a stable peerConnection\n      // to allow immediately stopping screenshare\n      this.stopShare({\n        skipSignalingCheck: true\n      })\n        .catch((error) => {\n          LoggerProxy.logger.log('Meeting:index#handleShareTrackEnded --> Error stopping share: ', error);\n        });\n    }\n\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'handleShareTrackEnded'\n      },\n      EVENT_TRIGGERS.MEETING_STOPPED_SHARING_LOCAL,\n      {\n        type: EVENT_TYPES.LOCAL_SHARE,\n        stream: localShare\n      }\n    );\n  }\n}\n"]}