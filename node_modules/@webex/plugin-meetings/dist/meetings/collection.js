"use strict";

var _Reflect$construct = require("@babel/runtime-corejs2/core-js/reflect/construct");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _find2 = _interopRequireDefault(require("lodash/find"));

var _collection = _interopRequireDefault(require("../common/collection"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

/**
 * @export
 * @class MeetingCollection
 */
var MeetingCollection = /*#__PURE__*/function (_Collection) {
  (0, _inherits2.default)(MeetingCollection, _Collection);

  var _super = _createSuper(MeetingCollection);

  /**
   * @constructor
   * @public
   * @memberof MeetingCollection
   */
  function MeetingCollection() {
    (0, _classCallCheck2.default)(this, MeetingCollection);
    return _super.call(this, 'meetings');
  }

  (0, _createClass2.default)(MeetingCollection, [{
    key: "set",
    value: function set(meeting) {
      this.meetings[meeting.id] = meeting;
      return this.meetings[meeting.id];
    }
    /**
     * get a specific meeting searching for key
     * @param {String} key
     * @param {Any} value
     * @returns {Meeting} if found, else returns null
     * @public
     * @memberof MeetingCollection
     */

  }, {
    key: "getByKey",
    value: function getByKey(key, value) {
      if (key && value) {
        return (0, _find2.default)(this.meetings, function (meeting) {
          return meeting[key] === value;
        });
      }

      return null;
    }
  }]);
  return MeetingCollection;
}(_collection.default);

exports.default = MeetingCollection;
//# sourceMappingURL=collection.js.map
