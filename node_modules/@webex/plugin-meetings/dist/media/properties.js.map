{"version":3,"sources":["properties.js"],"names":["MediaProperties","options","MEETINGS","peerConnection","MediaUtil","createPeerConnection","mediaDirection","videoTrack","audioTrack","shareTrack","remoteShare","remoteAudioTrack","remoteVideoTrack","localQualityLevel","QUALITY_LEVELS","HIGH","remoteQualityLevel","mediaSettings","videoDeviceId","set","stream","audio","getAudioTracks","video","getVideoTracks","length","get","LoggerProxy","logger","warn","createMediaStream","type","values","remoteStream","deviceId","unsetRemoteMedia","unsetLocalVideoTrack","unsetLocalShareTrack","unsetRemoteStream","unsetRemoteShare"],"mappings":"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","sourcesContent":["import {\n  MEETINGS,\n  QUALITY_LEVELS\n} from '../constants';\nimport LoggerProxy from '../common/logs/logger-proxy';\n\nimport MediaUtil from './util';\n\n/**\n * @class MediaProperties\n */\nexport default class MediaProperties {\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} [options] -- to auto construct\n   * @returns {MediaProperties}\n   */\n  constructor(options = {}) {\n    this.peerConnection = MediaUtil.createPeerConnection();\n    this.mediaDirection = options.mediaDirection;\n    this.videoTrack = options.videoTrack;\n    this.audioTrack = options.audioTrack;\n    this.shareTrack = options.shareTrack;\n    this.remoteShare = options.remoteShare;\n    this.remoteAudioTrack = options.remoteAudioTrack;\n    this.remoteVideoTrack = options.remoteVideoTrack;\n    this.localQualityLevel = options.localQualityLevel || QUALITY_LEVELS.HIGH;\n    this.remoteQualityLevel = options.remoteQualityLevel || QUALITY_LEVELS.HIGH;\n    this.mediaSettings = {};\n    this.videoDeviceId = null;\n\n    // deprecated after v1.89.3, remove when feasible.\n    // backwards compatible code.\n    Object.defineProperty(this, 'remoteStream', {\n      set: (stream) => {\n        const audio = stream.getAudioTracks();\n        const video = stream.getVideoTracks();\n\n        this.remoteAudioTrack = audio.length && audio[0];\n        this.remoteVideoTrack = video.length && video[0];\n      },\n      get: () => {\n        LoggerProxy.logger.warn('Media:properties#remoteStream --> [DEPRECATION WARNING]: remoteStream (getter) has been deprecated after v1.89.3 (use remoteAudioTrack, remoteVideoTrack instead)');\n\n        // return if set or create a stream for backwards compatibility\n        return MediaUtil.createMediaStream([this.remoteAudioTrack, this.remoteVideoTrack]);\n      }\n    });\n  }\n\n  /**\n   * Retrieves the preferred video input device\n   * @returns {Object|null}\n   */\n  getVideoDeviceId() {\n    return this.videoDeviceId || null;\n  }\n\n  setMediaDirection(mediaDirection) {\n    this.mediaDirection = mediaDirection;\n  }\n\n  setMediaSettings(type, values) {\n    this.mediaSettings[type] = values;\n  }\n\n  setMediaPeerConnection(peerConnection) {\n    this.peerConnection = peerConnection;\n  }\n\n  setLocalVideoTrack(videoTrack) {\n    this.videoTrack = videoTrack;\n  }\n\n  setLocalAudioTrack(audioTrack) {\n    this.audioTrack = audioTrack;\n  }\n\n  setLocalQualityLevel(localQualityLevel) {\n    this.localQualityLevel = localQualityLevel;\n  }\n\n  setLocalShareTrack(shareTrack) {\n    this.shareTrack = shareTrack;\n  }\n\n  setRemoteQualityLevel(remoteQualityLevel) {\n    this.remoteQualityLevel = remoteQualityLevel;\n  }\n\n  /**\n   * @deprecated after v1.89.3\n   * @param {remoteStream} remoteStream Sets remote media stream\n   * @returns {null}\n   * Use setRemoteAudioTrack, setRemoteVideoTrack\n   * and setRemoteShareTrack.\n   */\n  setRemoteStream(remoteStream) {\n    LoggerProxy.logger.warn('Media:properties#setRemoteStream --> [DEPRECATION WARNING]: setRemoteStream has been deprecated after v1.89.3 (use setRemoteAudioTrack, setRemoteVideoTrack instead)');\n    // calls setter\n    this.remoteStream = remoteStream;\n  }\n\n  setRemoteShare(remoteShare) {\n    this.remoteShare = remoteShare;\n  }\n\n  /**\n   * Sets the remote audio track\n   * @param {MediaTrack} remoteAudioTrack MediaTrack to save\n   * @returns {void}\n   */\n  setRemoteAudioTrack(remoteAudioTrack) {\n    this.remoteAudioTrack = remoteAudioTrack;\n  }\n\n  /**\n   * Sets the remote video track\n   * @param {MediaTrack} remoteVideoTrack MediaTrack to save\n   * @returns {void}\n   */\n  setRemoteVideoTrack(remoteVideoTrack) {\n    this.remoteVideoTrack = remoteVideoTrack;\n  }\n\n  /**\n   * Stores the preferred video input device\n   * @param {string} deviceId Preferred video input device\n   * @returns {void}\n   */\n  setVideoDeviceId(deviceId) {\n    this.videoDeviceId = deviceId;\n  }\n\n  unsetPeerConnection() {\n    this.peerConnection = null;\n  }\n\n  reInitiatePeerconnection() {\n    this.peerConnection = MediaUtil.createPeerConnection();\n  }\n\n  unsetLocalVideoTrack() {\n    this.videoTrack = null;\n  }\n\n  unsetLocalShareTrack() {\n    this.shareTrack = null;\n  }\n\n  unsetLocalAudioTrack() {\n    this.audioTrack = null;\n  }\n\n  /**\n   * Removes remote stream from class instance\n   * @deprecated after v1.89.3\n   * @returns {void}\n   */\n  unsetRemoteStream() {\n    LoggerProxy.logger.warn('Media:properties#unsetRemoteStream --> [DEPRECATION WARNING]: unsetRemoteStream has been deprecated after v1.89.3 (use unsetRemoteTracks instead)');\n    // unsets audio and video only\n    this.unsetRemoteMedia();\n  }\n\n  /**\n   * Removes both remote audio and video from class instance\n   * @returns {void}\n   */\n  unsetRemoteMedia() {\n    this.remoteAudioTrack = null;\n    this.remoteVideoTrack = null;\n  }\n\n  unsetRemoteShare() {\n    this.remoteShare = null;\n  }\n\n  unsetLocalVideoTracks() {\n    this.unsetLocalVideoTrack();\n    this.unsetLocalShareTrack();\n  }\n\n  /**\n   * Removes remote stream and remote share from class instance\n   * @deprecated after v1.89.3\n   * @returns {void}\n   */\n  unsetRemoteStreams() {\n    LoggerProxy.logger.warn('Media:properties#unsetRemoteStreams --> [DEPRECATION WARNING]: unsetRemoteStreams has been deprecated after v1.89.3 (use unsetRemoteTracks instead)');\n    this.unsetRemoteStream();\n    this.unsetRemoteShare();\n  }\n\n  /**\n   * Unsets all remote tracks\n   * @returns {void}\n   */\n  unsetRemoteTracks() {\n    this.unsetRemoteMedia();\n    this.unsetRemoteShare();\n  }\n\n  unsetShareStreams() {\n    this.unsetLocalShareTrack();\n    this.unsetRemoteShare();\n  }\n\n  /**\n   * Removes both local and remote video stream from class instance\n   * @deprecated after v1.89.3\n   * @returns {void}\n   */\n  unsetMediaStreams() {\n    LoggerProxy.logger.warn('Media:properties#unsetMediaStreams --> [DEPRECATION WARNING]: unsetMediaStreams has been deprecated after v1.89.3 (use unsetMediaTracks instead)');\n    this.unsetLocalVideoTrack();\n    this.unsetRemoteStream();\n  }\n\n  /**\n   * Removes both local and remote video stream from class instance\n   * @returns {void}\n   */\n  unsetMediaTracks() {\n    this.unsetLocalVideoTrack();\n    this.unsetRemoteMedia();\n  }\n}\n"]}