{"version":3,"sources":["request.js"],"names":["RechabilityRequest","webex","request","method","HTTP_VERBS","GET","shouldRefreshAccessToken","api","API","CALLIOPEDISCOVERY","resource","RESOURCE","CLUSTERS","then","res","clusters","body","LoggerProxy","logger","log","localSDPList","POST","REACHABILITY","offers"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAMA;AACA;AACA;IACMA,kB;AACJ;AACF;AACA;AACA;AACA;AACE,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;AAAA,qDAQL;AAAA,WAAM,KAAI,CAACA,KAAL,CAAWC,OAAX,CAAmB;AACrCC,MAAAA,MAAM,EAAEC,sBAAWC,GADkB;AAErCC,MAAAA,wBAAwB,EAAE,KAFW;AAGrCC,MAAAA,GAAG,EAAEC,eAAIC,iBAH4B;AAIrCC,MAAAA,QAAQ,EAAEC,oBAASC;AAJkB,KAAnB,EAMjBC,IANiB,CAMZ,UAACC,GAAD,EAAS;AAAA,UACNC,QADM,GACMD,GAAG,CAACE,IADV,CACND,QADM;;AAGbE,2BAAYC,MAAZ,CAAmBC,GAAnB,wEAAuF,wBAAeJ,QAAf,CAAvF;;AAEA,aAAOA,QAAP;AACD,KAZiB,CAAN;AAAA,GARK;AAAA,8DA2BI,UAACK,YAAD;AAAA,WAAkB,KAAI,CAACnB,KAAL,CAAWC,OAAX,CAAmB;AAC1DC,MAAAA,MAAM,EAAEC,sBAAWiB,IADuC;AAE1Df,MAAAA,wBAAwB,EAAE,KAFgC;AAG1DC,MAAAA,GAAG,EAAEC,eAAIC,iBAHiD;AAI1DC,MAAAA,QAAQ,EAAEC,oBAASW,YAJuC;AAK1DN,MAAAA,IAAI,EAAE;AAACO,QAAAA,MAAM,EAAEH;AAAT;AALoD,KAAnB,EAOtCP,IAPsC,CAOjC,UAACC,GAAD,EAAS;AACbG,2BAAYC,MAAZ,CAAmBC,GAAnB,CAAuB,6EAAvB;;AAEA,aAAOL,GAAG,CAACE,IAAX;AACD,KAXsC,CAAlB;AAAA,GA3BJ;AACjB,OAAKf,KAAL,GAAaA,KAAb;AACD;AAED;AACF;AACA;AACA;;;eAkCeD,kB","sourcesContent":["import LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  HTTP_VERBS,\n  RESOURCE,\n  API\n} from '../constants';\n\n/**\n * @class RechabilityRequest\n */\nclass RechabilityRequest {\n  /**\n   * Creates an instance of RechabilityRequest.\n   * @param {object} webex\n   * @memberof RechabilityRequest\n   */\n  constructor(webex) {\n    this.webex = webex;\n  }\n\n  /**\n   * gets the cluster information\n   * @returns {Promise}\n   */\n  getClusters = () => this.webex.request({\n    method: HTTP_VERBS.GET,\n    shouldRefreshAccessToken: false,\n    api: API.CALLIOPEDISCOVERY,\n    resource: RESOURCE.CLUSTERS\n  })\n    .then((res) => {\n      const {clusters} = res.body;\n\n      LoggerProxy.logger.log(`Reachability:request#getClusters --> get clusters successful:${JSON.stringify(clusters)}`);\n\n      return clusters;\n    });\n\n  /**\n   * gets remote SDP For Clusters\n   * @param {Object} localSDPList localSDPs for the cluster\n   * @returns {Object}\n   */\n  remoteSDPForClusters = (localSDPList) => this.webex.request({\n    method: HTTP_VERBS.POST,\n    shouldRefreshAccessToken: false,\n    api: API.CALLIOPEDISCOVERY,\n    resource: RESOURCE.REACHABILITY,\n    body: {offers: localSDPList}\n  })\n    .then((res) => {\n      LoggerProxy.logger.log('Reachability:request#remoteSDPForClusters --> Remote SDPs got succcessfully');\n\n      return res.body;\n    });\n}\n\nexport default RechabilityRequest;\n"]}