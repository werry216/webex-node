{"version":3,"sources":["selfUtils.js"],"names":["SelfUtils","parse","self","deviceId","joinedWith","devices","find","device","url","remoteMuted","getRemoteMuted","unmuteAllowed","getUnmuteAllowed","localAudioUnmuteRequested","getLocalAudioUnmuteRequested","localAudioUnmuteRequired","getLocalAudioUnmuteRequired","lastModified","getLastModified","modifiedBy","getModifiedBy","guest","moderator","mediaStatus","getStatus","status","state","currentMediaStatus","getMediaStatus","mediaSessions","creator","isCreator","selfId","id","selfIdentity","getSelfIdentity","selfUrl","removed","getSelves","oldSelf","newSelf","previous","current","updates","isUnadmittedGuest","isAdmittedGuest","isMutedByOthersChanged","mutedByOthersChanged","localAudioUnmuteRequestedByServer","localAudioUnmuteRequiredByServer","moderatorChanged","isMediaInactiveOrReleased","wasMediaInactiveOrReleased","isMediaInactive","audioStateChange","audio","videoStateChange","video","shareStateChange","share","previousMediaStatus","MEDIA_STATE","inactive","direction","controls","meta","person","muted","requestedToUnmute","disallowUnmute","audioStatus","videoStatus","slides","videoSlidesStatus","changedSelf","_JOINED_","_LEFT_","reason","MEETING_END_REASON","INACTIVE","MEDIA_RELEASED","isLocusGuestUnadmitted","check","intent","type","_WAIT_","_IDLE_","isLocusGuestAdmitted","ParameterError","getSipUrl","partner","sipUri","_CALL_","sipUrl","media","mediaType","AUDIO","mediaContent","MediaContent","main","VIDEO"],"mappings":"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","sourcesContent":["\nimport {\n  _IDLE_,\n  _JOINED_,\n  _CALL_,\n  _WAIT_,\n  _LEFT_,\n  MEETING_END_REASON,\n  MEDIA_STATE,\n  AUDIO,\n  VIDEO,\n  MediaContent\n} from '../constants';\nimport ParameterError from '../common/errors/parameter';\n\nconst SelfUtils = {};\n\n/**\n * parses the relevant values for self: muted, guest, moderator, mediaStatus, state, joinedWith, creator, id\n * @param {Object} self\n * @param {String} deviceId\n * @returns {undefined}\n */\nSelfUtils.parse = (self, deviceId) => {\n  if (self) {\n    const joinedWith = self.devices.find((device) => deviceId === device.url);\n\n    return {\n      remoteMuted: SelfUtils.getRemoteMuted(self),\n      unmuteAllowed: SelfUtils.getUnmuteAllowed(self),\n      localAudioUnmuteRequested: SelfUtils.getLocalAudioUnmuteRequested(self),\n      localAudioUnmuteRequired: SelfUtils.getLocalAudioUnmuteRequired(self),\n      lastModified: SelfUtils.getLastModified(self),\n      modifiedBy: SelfUtils.getModifiedBy(self),\n      guest: self.guest,\n      moderator: self.moderator,\n      // cumulative media stats\n      mediaStatus: SelfUtils.getStatus(self.status),\n      // TODO: what should be the status if user has refreshed the page,\n      // check the joinedWith parameter and communicate to the user\n      state: self.state,\n      // TODO: give a proper name . With same device as login or different login`\n      // Some times we might have joined with both mobile and web\n      joinedWith,\n      // current media stats is for the current device who has joined\n      currentMediaStatus: SelfUtils.getMediaStatus(\n        joinedWith?.mediaSessions\n      ),\n      creator: self.isCreator, // check if its used,\n      selfId: self.id,\n      selfIdentity: SelfUtils.getSelfIdentity(self),\n      selfUrl: self.url,\n      removed: self.removed\n    };\n  }\n\n  return null;\n};\n\nSelfUtils.getSelves = (oldSelf, newSelf, deviceId) => {\n  const previous = oldSelf && SelfUtils.parse(oldSelf, deviceId);\n  const current = newSelf && SelfUtils.parse(newSelf, deviceId);\n  const updates = {};\n\n  updates.isUnadmittedGuest = SelfUtils.isUnadmittedGuest(current);\n  updates.isAdmittedGuest = SelfUtils.isAdmittedGuest(previous, current);\n  updates.isMutedByOthersChanged = SelfUtils.mutedByOthersChanged(previous, current);\n  updates.localAudioUnmuteRequestedByServer = SelfUtils.localAudioUnmuteRequestedByServer(previous, current);\n  updates.localAudioUnmuteRequiredByServer = SelfUtils.localAudioUnmuteRequiredByServer(previous, current);\n  updates.moderatorChanged = SelfUtils.moderatorChanged(previous, current);\n  updates.isMediaInactiveOrReleased = SelfUtils.wasMediaInactiveOrReleased(previous, current);\n\n  updates.isMediaInactive = SelfUtils.isMediaInactive(previous, current);\n  updates.audioStateChange = previous?.currentMediaStatus.audio !== current.currentMediaStatus.audio;\n  updates.videoStateChange = previous?.currentMediaStatus.video !== current.currentMediaStatus.video;\n  updates.shareStateChange = previous?.currentMediaStatus.share !== current.currentMediaStatus.share;\n\n  return {\n    previous,\n    current,\n    updates\n  };\n};\n\nSelfUtils.isMediaInactive = (previous, current) => {\n  if (\n    previous &&\n    previous.joinedWith &&\n    previous.joinedWith.mediaSessions &&\n    current &&\n    current.joinedWith &&\n    current.joinedWith.mediaSessions\n  ) {\n    const previousMediaStatus = SelfUtils.getMediaStatus(\n      previous.joinedWith.mediaSessions\n    );\n    const currentMediaStatus = SelfUtils.getMediaStatus(\n      current.joinedWith.mediaSessions\n    );\n\n    if (\n      previousMediaStatus.audio && currentMediaStatus.audio &&\n      previousMediaStatus.audio.state !== MEDIA_STATE.inactive &&\n      currentMediaStatus.audio.state === MEDIA_STATE.inactive &&\n      currentMediaStatus.audio.direction !== MEDIA_STATE.inactive\n    ) {\n      return true;\n    }\n\n    if (\n      previousMediaStatus.video && currentMediaStatus.video &&\n      previousMediaStatus.video.state !== MEDIA_STATE.inactive &&\n      currentMediaStatus.video.state === MEDIA_STATE.inactive &&\n      currentMediaStatus.video.direction !== MEDIA_STATE.inactive\n    ) {\n      return true;\n    }\n\n    if (\n      previousMediaStatus.share && currentMediaStatus.share &&\n      previousMediaStatus.share.state !== MEDIA_STATE.inactive &&\n      currentMediaStatus.share.state === MEDIA_STATE.inactive &&\n      currentMediaStatus.share.direction !== MEDIA_STATE.inactive\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return false;\n};\n\nSelfUtils.getLastModified = (self) => {\n  if (!self || !self.controls || !self.controls.audio || !self.controls.audio.meta || !self.controls.audio.meta.lastModified) {\n    return null;\n  }\n\n  return self.controls.audio.meta.lastModified;\n};\n\nSelfUtils.getModifiedBy = (self) => {\n  if (!self || !self.controls || !self.controls.audio || !self.controls.audio.meta || !self.controls.audio.meta.modifiedBy) {\n    return null;\n  }\n\n  return self.controls.audio.meta.modifiedBy;\n};\n\n/**\n * get the id from the self object\n * @param {Object} self\n * @returns {String}\n */\nSelfUtils.getSelfIdentity = (self) => {\n  if (!self && !self.person) {\n    return null;\n  }\n\n  return self.person.id;\n};\n\n/**\n * get the \"remote mute\" property from the self object\n * @param {Object} self\n * @returns {Boolean}\n */\nSelfUtils.getRemoteMuted = (self) => {\n  if (!self || !self.controls || !self.controls.audio) {\n    return null;\n  }\n\n  return self.controls.audio.muted;\n};\n\nSelfUtils.getLocalAudioUnmuteRequested = (self) => !!self?.controls?.audio?.requestedToUnmute;\n\nSelfUtils.getUnmuteAllowed = (self) => {\n  if (!self || !self.controls || !self.controls.audio) {\n    return null;\n  }\n\n  return !self.controls.audio.disallowUnmute;\n};\n\n\nSelfUtils.getLocalAudioUnmuteRequired = (self) => !!self?.controls?.audio?.localAudioUnmuteRequired;\n\nSelfUtils.getStatus = (status) => ({\n  audio: status.audioStatus,\n  video: status.videoStatus,\n  slides: status.videoSlidesStatus\n});\n\n\n/**\n * @param {Object} oldSelf\n * @param {Object} changedSelf\n * @returns {Boolean}\n */\nSelfUtils.wasMediaInactiveOrReleased = (oldSelf = {}, changedSelf) => oldSelf.joinedWith && oldSelf.joinedWith.state === _JOINED_ && changedSelf.joinedWith.state === _LEFT_ &&\n (changedSelf.joinedWith.reason === MEETING_END_REASON.INACTIVE || changedSelf.joinedWith.reason === MEETING_END_REASON.MEDIA_RELEASED);\n\n\n/**\n * @param {Object} check\n * @returns {Boolean}\n */\nSelfUtils.isLocusGuestUnadmitted = (check) => check && check.joinedWith?.intent?.type === _WAIT_ && check.state === _IDLE_;\n\n/**\n * @param {Object} check\n * @returns {Boolean}\n */\nSelfUtils.isLocusGuestAdmitted = (check) => check && check.joinedWith?.intent?.type !== _WAIT_ && check.state === _JOINED_;\n\n/**\n * @param {Object} self\n * @returns {Boolean}\n * @throws {Error} when self is undefined\n */\nSelfUtils.isUnadmittedGuest = (self) => {\n  if (!self) {\n    throw new ParameterError('self must be defined to determine if self is unadmitted as guest.');\n  }\n\n  return SelfUtils.isLocusGuestUnadmitted(self);\n};\n\nSelfUtils.moderatorChanged = (oldSelf, changedSelf) => {\n  if (!oldSelf) {\n    return true;\n  }\n  if (!changedSelf) {\n    throw new ParameterError('New self must be defined to determine if self transitioned moderator status.');\n  }\n\n  return oldSelf.moderator !== changedSelf.moderator;\n};\n\n/**\n * @param {Object} oldSelf\n * @param {Object} changedSelf\n * @returns {Boolean}\n * @throws {Error} if changed self was undefined\n */\nSelfUtils.isAdmittedGuest = (oldSelf, changedSelf) => {\n  if (!oldSelf) {\n    // if there was no previous locus, it couldn't have been admitted yet\n    return false;\n  }\n  if (!changedSelf) {\n    throw new ParameterError('New self must be defined to determine if self transitioned to admitted as guest.');\n  }\n\n  return SelfUtils.isLocusGuestUnadmitted(oldSelf) && SelfUtils.isLocusGuestAdmitted(changedSelf);\n};\n\nSelfUtils.mutedByOthersChanged = (oldSelf, changedSelf) => {\n  if (!changedSelf) {\n    throw new ParameterError('New self must be defined to determine if self was muted by others.');\n  }\n\n  if (!oldSelf || (oldSelf.remoteMuted === null)) {\n    if (changedSelf.remoteMuted) {\n      return true; // this happens when mute on-entry is enabled\n    }\n\n    // we don't want to be sending the 'meeting:self:unmutedByOthers' notification on meeting join\n    return false;\n  }\n\n  return (oldSelf.remoteMuted !== changedSelf.remoteMuted) || (changedSelf.remoteMuted && (oldSelf.unmuteAllowed !== changedSelf.unmuteAllowed));\n};\n\nSelfUtils.localAudioUnmuteRequestedByServer = (oldSelf = {}, changedSelf) => {\n  if (!changedSelf) {\n    throw new ParameterError('New self must be defined to determine if self received request to unmute.');\n  }\n\n  return changedSelf.localAudioUnmuteRequested && !oldSelf.localAudioUnmuteRequested;\n};\n\n\nSelfUtils.localAudioUnmuteRequiredByServer = (oldSelf = {}, changedSelf) => {\n  if (!changedSelf) {\n    throw new ParameterError('New self must be defined to determine if localAudioUnmuteRequired changed.');\n  }\n\n  return !changedSelf.remoteMuted && changedSelf.localAudioUnmuteRequired && (oldSelf.localAudioUnmuteRequired !== changedSelf.localAudioUnmuteRequired);\n};\n\n/**\n * extract the sipUrl from the partner\n * @param {Object} partner\n * @param {Object} info\n * @returns {Object}\n */\n\nSelfUtils.getSipUrl = (partner, type, sipUri) => {\n  // For webex meeting the sipUrl gets updated in info parser\n  if (partner && type === _CALL_) {\n    return {sipUri: partner.person.sipUrl || partner.person.id};\n  }\n\n  return {sipUri};\n};\n\nSelfUtils.getMediaStatus = (mediaSessions = []) => {\n  const mediaStatus = {\n    audio: {},\n    video: {},\n    share: {}\n  };\n\n  mediaStatus.audio = mediaSessions.find((media) => media.mediaType === AUDIO && media.mediaContent === MediaContent.main);\n  mediaStatus.video = mediaSessions.find((media) => media.mediaType === VIDEO && media.mediaContent === MediaContent.main);\n  mediaStatus.share = mediaSessions.find((media) => media.mediaType === VIDEO && media.mediaContent === MediaContent.slides);\n\n  return mediaStatus;\n};\n\n\nexport default SelfUtils;\n"]}