"use strict";

var _Reflect$construct = require("@babel/runtime-corejs2/core-js/reflect/construct");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.createMeetingsError = createMeetingsError;
exports.InvalidSdpError = exports.UserInLobbyError = exports.NoMediaEstablishedYetError = exports.UserNotJoinedError = exports.MeetingNotActiveError = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _webexMeetingsError = _interopRequireDefault(require("./webex-meetings-error"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var WebExMeetingsErrors = {};
/**
 * Create a {@link WebexMeetingsError} for a given code and message.
 * @private
 * @param {number} [code] - Error code
 * @param {string} [message] - Error message
 * @returns {WebexMeetingsError}
 */

function createMeetingsError(code, message) {
  code = typeof code === 'number' ? code : 0;
  message = typeof message === 'string' && message ? message : 'Unknown error';
  return WebExMeetingsErrors[code] ? new WebExMeetingsErrors[code]() : new _webexMeetingsError.default(code, message);
}
/**
 * @class MeetingNotActiveError
 * @classdesc Raised whenever Meeting has already ended and user tries to do a action.
 * @extends WebexMeetingsError
 * @property {number} code - 30101
 * @property {string} message - 'Meeting has already Ended or not Active'
 */


var MeetingNotActiveError = /*#__PURE__*/function (_WebexMeetingsError) {
  (0, _inherits2.default)(MeetingNotActiveError, _WebexMeetingsError);

  var _super = _createSuper(MeetingNotActiveError);

  function MeetingNotActiveError() {
    (0, _classCallCheck2.default)(this, MeetingNotActiveError);
    return _super.call(this, MeetingNotActiveError.CODE, 'Meeting has already Ended or not Active');
  }

  return MeetingNotActiveError;
}(_webexMeetingsError.default);

exports.MeetingNotActiveError = MeetingNotActiveError;
(0, _defineProperty2.default)(MeetingNotActiveError, "CODE", 30101);
WebExMeetingsErrors[MeetingNotActiveError.CODE] = MeetingNotActiveError;
/**
 * @class UserNotJoinedError
 * @classdesc Raised whenever the user has already left the meeting and user tries to do a action.
 * @extends WebexMeetingsError
 * @property {number} code - 30102
 * @property {string} message - 'User has already left the meeting'
 */

var UserNotJoinedError = /*#__PURE__*/function (_WebexMeetingsError2) {
  (0, _inherits2.default)(UserNotJoinedError, _WebexMeetingsError2);

  var _super2 = _createSuper(UserNotJoinedError);

  function UserNotJoinedError() {
    (0, _classCallCheck2.default)(this, UserNotJoinedError);
    return _super2.call(this, UserNotJoinedError.CODE, 'User has already left the meeting');
  }

  return UserNotJoinedError;
}(_webexMeetingsError.default);

exports.UserNotJoinedError = UserNotJoinedError;
(0, _defineProperty2.default)(UserNotJoinedError, "CODE", 30102);
WebExMeetingsErrors[UserNotJoinedError.CODE] = UserNotJoinedError;
/**
 * @class NoMediaEstablishedYetError
 * @classdesc Raised whenever the user has not established media yet.
 * @extends WebexMeetingsError
 * @property {number} code - 30103
 * @property {string} message - 'User has not established media yet'
 */

var NoMediaEstablishedYetError = /*#__PURE__*/function (_WebexMeetingsError3) {
  (0, _inherits2.default)(NoMediaEstablishedYetError, _WebexMeetingsError3);

  var _super3 = _createSuper(NoMediaEstablishedYetError);

  function NoMediaEstablishedYetError() {
    (0, _classCallCheck2.default)(this, NoMediaEstablishedYetError);
    return _super3.call(this, NoMediaEstablishedYetError.CODE, 'User has not established media yet');
  }

  return NoMediaEstablishedYetError;
}(_webexMeetingsError.default);

exports.NoMediaEstablishedYetError = NoMediaEstablishedYetError;
(0, _defineProperty2.default)(NoMediaEstablishedYetError, "CODE", 30103);
WebExMeetingsErrors[NoMediaEstablishedYetError.CODE] = NoMediaEstablishedYetError;
/**
 * @class UserInLobbyError
 * @classdesc Raised whenever the user is in lobby and not joined yet.
 * @extends WebexMeetingsError
 * @property {number} code - 30104
 * @property {string} message - 'user is still in the lobby or not joined'
 */

var UserInLobbyError = /*#__PURE__*/function (_WebexMeetingsError4) {
  (0, _inherits2.default)(UserInLobbyError, _WebexMeetingsError4);

  var _super4 = _createSuper(UserInLobbyError);

  function UserInLobbyError() {
    (0, _classCallCheck2.default)(this, UserInLobbyError);
    return _super4.call(this, UserInLobbyError.CODE, 'user is still in the lobby or not joined');
  }

  return UserInLobbyError;
}(_webexMeetingsError.default);

exports.UserInLobbyError = UserInLobbyError;
(0, _defineProperty2.default)(UserInLobbyError, "CODE", 30104);
WebExMeetingsErrors[UserInLobbyError.CODE] = UserInLobbyError;
/**
 * @class InvalidSdpError
 * @classdesc Raised whenever SDP generated via browser is invalid.
 * @extends WebexMeetingsError
 * @property {number} code - 30201
 * @property {string} message - 'user is still in the lobby or not joined'
 */

var InvalidSdpError = /*#__PURE__*/function (_WebexMeetingsError5) {
  (0, _inherits2.default)(InvalidSdpError, _WebexMeetingsError5);

  var _super5 = _createSuper(InvalidSdpError);

  function InvalidSdpError() {
    (0, _classCallCheck2.default)(this, InvalidSdpError);
    return _super5.call(this, InvalidSdpError.CODE, 'iceConnection: sdp generated is invalid');
  }

  return InvalidSdpError;
}(_webexMeetingsError.default);

exports.InvalidSdpError = InvalidSdpError;
(0, _defineProperty2.default)(InvalidSdpError, "CODE", 30201);
WebExMeetingsErrors[InvalidSdpError.CODE] = InvalidSdpError;
//# sourceMappingURL=webex-errors.js.map
