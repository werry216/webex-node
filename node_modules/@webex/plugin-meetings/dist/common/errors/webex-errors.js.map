{"version":3,"sources":["webex-errors.js"],"names":["WebExMeetingsErrors","createMeetingsError","code","message","WebexMeetingsError","MeetingNotActiveError","CODE","UserNotJoinedError","NoMediaEstablishedYetError","UserInLobbyError","InvalidSdpError"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAWA;;;;;;AAEA,IAAMA,mBAAmB,GAAG,EAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,OAAnC,EAA4C;AACjDD,EAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkC,CAAzC;AACAC,EAAAA,OAAO,GAAG,OAAOA,OAAP,KAAmB,QAAnB,IAA+BA,OAA/B,GAAyCA,OAAzC,GAAmD,eAA7D;AAEA,SAAOH,mBAAmB,CAACE,IAAD,CAAnB,GAA4B,IAAIF,mBAAmB,CAACE,IAAD,CAAvB,EAA5B,GAA8D,IAAIE,2BAAJ,CAAuBF,IAAvB,EAA6BC,OAA7B,CAArE;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;IACME,qB;;;;;AAGJ,mCAAc;AAAA;AAAA,6BACNA,qBAAqB,CAACC,IADhB,EACsB,yCADtB;AAEb;;;EALiCF,2B;;;8BAA9BC,qB,UACU,K;AAQhBL,mBAAmB,CAACK,qBAAqB,CAACC,IAAvB,CAAnB,GAAkDD,qBAAlD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IACME,kB;;;;;AAGJ,gCAAc;AAAA;AAAA,8BACNA,kBAAkB,CAACD,IADb,EACmB,mCADnB;AAEb;;;EAL8BF,2B;;;8BAA3BG,kB,UACU,K;AAQhBP,mBAAmB,CAACO,kBAAkB,CAACD,IAApB,CAAnB,GAA+CC,kBAA/C;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,0B;;;;;AAGJ,wCAAc;AAAA;AAAA,8BACNA,0BAA0B,CAACF,IADrB,EAC2B,oCAD3B;AAEb;;;EALsCF,2B;;;8BAAnCI,0B,UACS,K;AAQfR,mBAAmB,CAACQ,0BAA0B,CAACF,IAA5B,CAAnB,GAAuDE,0BAAvD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,gB;;;;;AAGJ,8BAAc;AAAA;AAAA,8BACNA,gBAAgB,CAACH,IADX,EACiB,0CADjB;AAEb;;;EAL4BF,2B;;;8BAAzBK,gB,UACU,K;AAQhBT,mBAAmB,CAACS,gBAAgB,CAACH,IAAlB,CAAnB,GAA6CG,gBAA7C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,e;;;;;AAGJ,6BAAc;AAAA;AAAA,8BACNA,eAAe,CAACJ,IADV,EACgB,yCADhB;AAEb;;;EAL2BF,2B;;;8BAAxBM,e,UACU,K;AAQhBV,mBAAmB,CAACU,eAAe,CAACJ,IAAjB,CAAnB,GAA4CI,eAA5C","sourcesContent":["// The document would auto generate the doc for errors\n\n// 1) Error codes for Oauth, login, mercury should be separated out (Code range)\n// 2) Errors from the actual locus server or other server in case, we can use the same error code as locus and redirect it\n// 3) Any errors we generate from the SDK can be split into various categories\n// Parameter validation, user action, connection, media specific(They can have different range)\n\n\n// TODO: all the errors from the server need to be captured\n\n// add a way to log and send metrics if needed\nimport WebexMeetingsError from './webex-meetings-error';\n\nconst WebExMeetingsErrors = {};\n\n/**\n * Create a {@link WebexMeetingsError} for a given code and message.\n * @private\n * @param {number} [code] - Error code\n * @param {string} [message] - Error message\n * @returns {WebexMeetingsError}\n */\nexport function createMeetingsError(code, message) {\n  code = typeof code === 'number' ? code : 0;\n  message = typeof message === 'string' && message ? message : 'Unknown error';\n\n  return WebExMeetingsErrors[code] ? new WebExMeetingsErrors[code]() : new WebexMeetingsError(code, message);\n}\n\n/**\n * @class MeetingNotActiveError\n * @classdesc Raised whenever Meeting has already ended and user tries to do a action.\n * @extends WebexMeetingsError\n * @property {number} code - 30101\n * @property {string} message - 'Meeting has already Ended or not Active'\n */\nclass MeetingNotActiveError extends WebexMeetingsError {\n  static CODE = 30101;\n\n  constructor() {\n    super(MeetingNotActiveError.CODE, 'Meeting has already Ended or not Active');\n  }\n}\n\nexport {MeetingNotActiveError};\nWebExMeetingsErrors[MeetingNotActiveError.CODE] = MeetingNotActiveError;\n\n/**\n * @class UserNotJoinedError\n * @classdesc Raised whenever the user has already left the meeting and user tries to do a action.\n * @extends WebexMeetingsError\n * @property {number} code - 30102\n * @property {string} message - 'User has already left the meeting'\n */\nclass UserNotJoinedError extends WebexMeetingsError {\n  static CODE = 30102;\n\n  constructor() {\n    super(UserNotJoinedError.CODE, 'User has already left the meeting');\n  }\n}\n\nexport {UserNotJoinedError};\nWebExMeetingsErrors[UserNotJoinedError.CODE] = UserNotJoinedError;\n\n\n/**\n * @class NoMediaEstablishedYetError\n * @classdesc Raised whenever the user has not established media yet.\n * @extends WebexMeetingsError\n * @property {number} code - 30103\n * @property {string} message - 'User has not established media yet'\n */\nclass NoMediaEstablishedYetError extends WebexMeetingsError {\n  static CODE= 30103;\n\n  constructor() {\n    super(NoMediaEstablishedYetError.CODE, 'User has not established media yet');\n  }\n}\n\nexport {NoMediaEstablishedYetError};\nWebExMeetingsErrors[NoMediaEstablishedYetError.CODE] = NoMediaEstablishedYetError;\n\n\n/**\n * @class UserInLobbyError\n * @classdesc Raised whenever the user is in lobby and not joined yet.\n * @extends WebexMeetingsError\n * @property {number} code - 30104\n * @property {string} message - 'user is still in the lobby or not joined'\n */\nclass UserInLobbyError extends WebexMeetingsError {\n  static CODE = 30104;\n\n  constructor() {\n    super(UserInLobbyError.CODE, 'user is still in the lobby or not joined');\n  }\n}\n\nexport {UserInLobbyError};\nWebExMeetingsErrors[UserInLobbyError.CODE] = UserInLobbyError;\n\n/**\n * @class InvalidSdpError\n * @classdesc Raised whenever SDP generated via browser is invalid.\n * @extends WebexMeetingsError\n * @property {number} code - 30201\n * @property {string} message - 'user is still in the lobby or not joined'\n */\nclass InvalidSdpError extends WebexMeetingsError {\n  static CODE = 30201\n\n  constructor() {\n    super(InvalidSdpError.CODE, 'iceConnection: sdp generated is invalid');\n  }\n}\n\nexport {InvalidSdpError};\nWebExMeetingsErrors[InvalidSdpError.CODE] = InvalidSdpError;\n\n"]}