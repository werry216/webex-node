"use strict";

var _Reflect$construct = require("@babel/runtime-corejs2/core-js/reflect/construct");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/wrapNativeSuper"));

var _constants = require("../../constants");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

/**
 * Extended Error object for general parameter errors
 */
var ParameterError = /*#__PURE__*/function (_Error) {
  (0, _inherits2.default)(ParameterError, _Error);

  var _super = _createSuper(ParameterError);

  /**
  *
  * @constructor
  * @param {String} [message]
  * @param {Object} [error]
  */
  function ParameterError() {
    var _this;

    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _constants.ERROR_DICTIONARY.PARAMETER.MESSAGE;
    var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    (0, _classCallCheck2.default)(this, ParameterError);
    _this = _super.call(this, message);

    if (Error.captureStackTrace) {
      Error.captureStackTrace((0, _assertThisInitialized2.default)(_this), ParameterError);
    }

    _this.name = _constants.ERROR_DICTIONARY.PARAMETER.NAME;
    _this.sdkMessage = _constants.ERROR_DICTIONARY.PARAMETER.MESSAGE;
    _this.error = error;
    _this.code = _constants.ERROR_DICTIONARY.PARAMETER.CODE;
    return _this;
  }

  return ParameterError;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));

exports.default = ParameterError;
//# sourceMappingURL=parameter.js.map
