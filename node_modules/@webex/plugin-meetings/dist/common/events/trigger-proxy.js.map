{"version":3,"sources":["trigger-proxy.js"],"names":["TriggerProxy","trigger","instance","scope","payload","ParameterError","LoggerProxy","logger","debug","EventsUtil","getScopeLog","LoggerConfig","verboseEvents","getEventLog"],"mappings":";;;;;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AAGA,IAAMA,YAAY,GAAG,EAArB;;AAEAA,YAAY,CAACC,OAAb,GAAuB,UAACC,QAAD,EAAWC,KAAX,EAAkBF,OAAlB,EAA2BG,OAA3B,EAAuC;AAC5D,MAAI,CAACF,QAAD,IAAa,CAACA,QAAQ,CAACD,OAA3B,EAAoC;AAClC,UAAM,IAAII,kBAAJ,CAAmB,uEAAnB,CAAN;AACD;;AAEDC,uBAAYC,MAAZ,CAAmBC,KAAnB,WAA4BC,cAAWC,WAAX,CAAuBP,KAAvB,CAA5B,mBAAkEF,OAAlE,SAA4EU,sBAAaC,aAAb,iBAAoCH,cAAWI,WAAX,CAAuBT,OAAvB,CAApC,IAAwE,EAApJ;;AAEA,SAAOF,QAAQ,CAACD,OAAT,CAAiBA,OAAjB,EAA0BG,OAA1B,CAAP;AACD,CARD;;eAUeJ,Y","sourcesContent":["\nimport LoggerProxy from '../logs/logger-proxy';\nimport LoggerConfig from '../logs/logger-config';\nimport ParameterError from '../errors/parameter';\n\nimport EventsUtil from './util';\n\n\nconst TriggerProxy = {};\n\nTriggerProxy.trigger = (instance, scope, trigger, payload) => {\n  if (!instance || !instance.trigger) {\n    throw new ParameterError('Instance to trigger from must be defined and have a trigger function.');\n  }\n\n  LoggerProxy.logger.debug(`${EventsUtil.getScopeLog(scope)}event#${trigger}${LoggerConfig.verboseEvents ? ` -- ${EventsUtil.getEventLog(payload)}` : ''}`);\n\n  return instance.trigger(trigger, payload);\n};\n\nexport default TriggerProxy;\n"]}