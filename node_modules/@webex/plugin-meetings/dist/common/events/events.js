"use strict";

var _Reflect$construct = require("@babel/runtime-corejs2/core-js/reflect/construct");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _get2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _events = _interopRequireDefault(require("events"));

var _loggerProxy = _interopRequireDefault(require("../logs/logger-proxy"));

var _loggerConfig = _interopRequireDefault(require("../logs/logger-config"));

var _util = _interopRequireDefault(require("./util"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

/**
 * Events
 * plugin-meetings global
 * Used to emit events internally between modules
 */
var Events = /*#__PURE__*/function (_EventEmitter) {
  (0, _inherits2.default)(Events, _EventEmitter);

  var _super = _createSuper(Events);

  function Events() {
    (0, _classCallCheck2.default)(this, Events);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(Events, [{
    key: "emit",
    value: function emit(scope, eventName, args) {
      _loggerProxy.default.logger.debug("".concat(_util.default.getScopeLog(scope), "event#").concat(eventName).concat(_loggerConfig.default.verboseEvents ? " -- ".concat(_util.default.getEventLog(args)) : ''));

      return (0, _get2.default)((0, _getPrototypeOf2.default)(Events.prototype), "emit", this).call(this, eventName, args);
    }
  }]);
  return Events;
}(_events.default);

var _default = new Events();

exports.default = _default;
//# sourceMappingURL=events.js.map
