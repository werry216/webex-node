{"version":3,"sources":["socket-base.js"],"names":["sockets","Socket","onmessage","bind","onclose","get","binaryType","bufferedAmount","extensions","protocol","readyState","url","options","resolve","reject","socket","logger","info","code","Error","reason","closeTimer","error","warn","forceCloseDelay","event","clearTimeout","close","forEach","key","enumerable","value","WebSocket","getWebSocketConstructor","_fixCloseCode","UnknownResponse","BadRequest","NotAuthorized","Forbidden","ConnectionError","onopen","_authorize","then","catch","onerror","set","pongTimer","pingTimer","emit","removeAllListeners","data","JSON","parse","sequenceNumber","debug","expectedSequenceNumber","processedEvent","_acknowledge","type","send","messageId","id","uuid","v4","token","trackingId","logLevelToken","waitForBufferState","eventType","removeListener","_ping","once","toLowerCase","confirmPongId","onPongNotReceived","scheduleNextPingAndCancelPongTimer","pingInterval","pongTimeout","EventEmitter"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {EventEmitter} from 'events';\n\nimport {checkRequired} from '@webex/common';\nimport {safeSetTimeout} from '@webex/common-timers';\nimport {defaults, has, isObject} from 'lodash';\nimport uuid from 'uuid';\n\nimport {\n  BadRequest,\n  ConnectionError,\n  Forbidden,\n  NotAuthorized,\n  UnknownResponse\n  // NotFound\n} from '../errors';\n\nconst sockets = new WeakMap();\n\n/**\n * Generalized socket abstraction\n */\nexport default class Socket extends EventEmitter {\n  /**\n   * constructor\n   * @returns {Socket}\n   */\n  constructor() {\n    super();\n    this.onmessage = this.onmessage.bind(this);\n    this.onclose = this.onclose.bind(this);\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {string}\n   */\n  get binaryType() {\n    return sockets.get(this).binaryType;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {number}\n   */\n  get bufferedAmount() {\n    return sockets.get(this).bufferedAmount;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {string}\n   */\n  get extensions() {\n    return sockets.get(this).extensions;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {string}\n   */\n  get protocol() {\n    return sockets.get(this).protocol;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {number}\n   */\n  get readyState() {\n    return sockets.get(this).readyState;\n  }\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @returns {string}\n   */\n  get url() {\n    return sockets.get(this).url;\n  }\n\n  /**\n   * Provides the environmentally appropriate constructor (ws in NodeJS,\n   * WebSocket in browsers)\n   * @returns {WebSocket}\n   */\n  static getWebSocketConstructor() {\n    throw new Error('Socket.getWebSocketConstructor() must be implemented in an environmentally appropriate way');\n  }\n\n  /**\n   * Closes the socket\n   * @param {Object} options\n   * @param {string} options.reason\n   * @param {number} options.code\n   * @returns {Promise}\n   */\n  close(options) {\n    return new Promise((resolve, reject) => {\n      const socket = sockets.get(this);\n\n      if (!socket) {\n        // Open has not been called yet so there is no socket to close\n        resolve();\n\n        return;\n      }\n      // logger is defined once open is called\n      this.logger.info('socket: closing');\n\n      if (socket.readyState === 2 || socket.readyState === 3) {\n        this.logger.info('socket: already closed');\n        resolve();\n\n        return;\n      }\n\n      options = options || {};\n      if (options.code && options.code !== 1000 && (options.code < 3000 || options.code > 4999)) {\n        reject(new Error('`options.code` must be 1000 or between 3000 and 4999 (inclusive)'));\n\n        return;\n      }\n\n      options = defaults(options, {\n        code: 1000,\n        reason: 'Done'\n      });\n\n      const closeTimer = safeSetTimeout(() => {\n        try {\n          this.logger.info('socket: no close event received, forcing closure');\n          resolve(this.onclose({\n            code: 1000,\n            reason: 'Done (forced)'\n          }));\n        }\n        catch (error) {\n          this.logger.warn('socket: force-close failed', error);\n        }\n      }, this.forceCloseDelay);\n\n      socket.onclose = (event) => {\n        this.logger.info('socket: close event fired', event.code, event.reason);\n        clearTimeout(closeTimer);\n        this.onclose(event);\n        resolve(event);\n      };\n\n      socket.close(options.code, options.reason);\n    });\n  }\n\n  /**\n   * Opens a WebSocket\n   * @param {string} url\n   * @param {options} options\n   * @param {number} options.forceCloseDelay (required)\n   * @param {number} options.pingInterval (required)\n   * @param {number} options.pongTimeout (required)\n   * @param {string} options.token (required)\n   * @param {string} options.trackingId (required)\n   * @param {Logger} options.logger (required)\n   * @param {string} options.logLevelToken\n   * @returns {Promise}\n   */\n  open(url, options) {\n    return new Promise((resolve, reject) => {\n      /* eslint complexity: [0] */\n      if (!url) {\n        reject(new Error('`url` is required'));\n\n        return;\n      }\n\n      if (sockets.get(this)) {\n        reject(new Error('Socket#open() can only be called once per instance'));\n\n        return;\n      }\n\n      options = options || {};\n\n      checkRequired([\n        'forceCloseDelay',\n        'pingInterval',\n        'pongTimeout',\n        'token',\n        'trackingId',\n        'logger'\n      ], options);\n\n      Object.keys(options).forEach((key) => {\n        Reflect.defineProperty(this, key, {\n          enumerable: false,\n          value: options[key]\n        });\n      });\n\n      const WebSocket = Socket.getWebSocketConstructor();\n\n      this.logger.info('socket: creating WebSocket');\n      const socket = new WebSocket(url, [], options);\n\n      socket.binaryType = 'arraybuffer';\n      socket.onmessage = this.onmessage;\n\n      socket.onclose = (event) => {\n        event = this._fixCloseCode(event);\n        this.logger.info('socket: closed before open', event.code, event.reason);\n        switch (event.code) {\n          case 1005:\n          // IE 11 doesn't seem to allow 4XXX codes, so if we get a 1005, assume\n          // it's a bad websocket url. That'll trigger a device refresh; if it\n          // turns out we had a bad token, the device refresh should 401 and\n          // trigger a token refresh.\n            return reject(new UnknownResponse(event));\n          case 4400:\n            return reject(new BadRequest(event));\n          case 4401:\n            return reject(new NotAuthorized(event));\n          case 4403:\n            return reject(new Forbidden(event));\n            // case 4404:\n            //   return reject(new NotFound(event));\n          default:\n            return reject(new ConnectionError(event));\n        }\n      };\n\n      socket.onopen = () => {\n        this.logger.info('socket: connected');\n        this._authorize()\n          .then(() => {\n            this.logger.info('socket: authorized');\n            socket.onclose = this.onclose;\n            resolve();\n          })\n          .catch(reject);\n      };\n\n      socket.onerror = (event) => {\n        this.logger.warn('socket: error event fired', event);\n      };\n\n      sockets.set(this, socket);\n      this.logger.info('socket: waiting for server');\n    });\n  }\n\n  /**\n   * Handles incoming CloseEvents\n   * @param {CloseEvent} event\n   * @returns {undefined}\n   */\n  onclose(event) {\n    this.logger.info('socket: closed', event.code, event.reason);\n    clearTimeout(this.pongTimer);\n    clearTimeout(this.pingTimer);\n\n    event = this._fixCloseCode(event);\n    this.emit('close', event);\n\n    // Remove all listeners to (a) avoid reacting to late pongs and (b) ensure\n    // we don't have a retain cycle.\n    this.removeAllListeners();\n  }\n\n  /**\n   * Handles incoming message events\n   * @param {MessageEvent} event\n   * @returns {undefined}\n   */\n  onmessage(event) {\n    try {\n      const data = JSON.parse(event.data);\n      const sequenceNumber = parseInt(data.sequenceNumber, 10);\n\n      this.logger.debug('socket: sequence number: ', sequenceNumber);\n      if (this.expectedSequenceNumber && sequenceNumber !== this.expectedSequenceNumber) {\n        this.logger.debug(`socket: sequence number mismatch indicates lost mercury message. expected: ${this.expectedSequenceNumber}, actual: ${sequenceNumber}`);\n        this.emit('sequence-mismatch', sequenceNumber, this.expectedSequenceNumber);\n      }\n      this.expectedSequenceNumber = sequenceNumber + 1;\n\n      // Yes, it's a little weird looking; we want to emit message events that\n      // look like normal socket message events, but event.data cannot be\n      // modified and we don't actually care about anything but the data property\n      const processedEvent = {data};\n\n      this._acknowledge(processedEvent);\n      if (data.type === 'pong') {\n        this.emit('pong', processedEvent);\n      }\n      else {\n        this.emit('message', processedEvent);\n      }\n    }\n    catch (error) {\n      // The above code should only be able to throw if we receive an unparsable\n      // message from Mercury. At this time, the only action we have is to\n      // ignore it and move on.\n      /* istanbul ignore next */\n      this.logger.warn('socket: error while receiving WebSocket message', error);\n    }\n  }\n\n  /**\n   * Sends a message up the socket\n   * @param {mixed} data\n   * @returns {Promise}\n   */\n  send(data) {\n    return new Promise((resolve, reject) => {\n      if (this.readyState !== 1) {\n        return reject(new Error('INVALID_STATE_ERROR'));\n      }\n\n      if (isObject(data)) {\n        data = JSON.stringify(data);\n      }\n\n      const socket = sockets.get(this);\n\n      socket.send(data);\n\n      return resolve();\n    });\n  }\n\n  /**\n   * Sends an acknowledgment for a specific event\n   * @param {MessageEvent} event\n   * @returns {Promise}\n   */\n  _acknowledge(event) {\n    if (!event) {\n      return Promise.reject(new Error('`event` is required'));\n    }\n\n    if (!has(event, 'data.id')) {\n      return Promise.reject(new Error('`event.data.id` is required'));\n    }\n\n    return this.send({\n      messageId: event.data.id,\n      type: 'ack'\n    });\n  }\n\n  /**\n   * Sends an auth message up the socket\n   * @private\n   * @returns {Promise}\n   */\n  _authorize() {\n    return new Promise((resolve) => {\n      this.logger.info('socket: authorizing');\n      this.send({\n        id: uuid.v4(),\n        type: 'authorization',\n        data: {\n          token: this.token\n        },\n        trackingId: this.trackingId,\n        logLevelToken: this.logLevelToken\n      });\n\n      const waitForBufferState = (event) => {\n        if (!event.data.type && (event.data.data.eventType === 'mercury.buffer_state' || event.data.data.eventType === 'mercury.registration_status')) {\n          this.removeListener('message', waitForBufferState);\n          this._ping();\n          resolve();\n        }\n      };\n\n      this.once('message', waitForBufferState);\n    });\n  }\n\n  /**\n   * Deals with the fact that some browsers drop some close codes (but not\n   * close reasons).\n   * @param {CloseEvent} event\n   * @private\n   * @returns {CloseEvent}\n   */\n  _fixCloseCode(event) {\n    if (event.code === 1005 && event.reason) {\n      switch (event.reason.toLowerCase()) {\n        case 'replaced':\n          this.logger.info('socket: fixing CloseEvent code for reason: ', event.reason);\n          event.code = 4000;\n          break;\n        case 'authentication failed':\n        case 'authentication did not happen within the timeout window of 30000 seconds.':\n          this.logger.info('socket: fixing CloseEvent code for reason: ', event.reason);\n          event.code = 1008;\n          break;\n        default:\n        // do nothing\n      }\n    }\n\n    return event;\n  }\n\n  /**\n   * Sends a ping up the socket and confirms we get it back\n   * @param {[type]} id\n   * @private\n   * @returns {[type]}\n   */\n  _ping(id) {\n    const confirmPongId = (event) => {\n      try {\n        this.logger.debug('socket: pong', event.data.id);\n        if (event.data && event.data.id !== id) {\n          this.logger.info('socket: received pong for wrong ping id, closing socket');\n          this.logger.debug('socket: expected', id, 'received', event.data.id);\n          this.close({\n            code: 1000,\n            reason: 'Pong mismatch'\n          });\n        }\n      }\n      catch (error) {\n        // This try/catch block was added as a debugging step; to the best of my\n        // knowledge, the above can never throw.\n        /* istanbul ignore next */\n        this.logger.error('socket: error occurred in confirmPongId', error);\n      }\n    };\n\n    const onPongNotReceived = () => {\n      try {\n        this.logger.info('socket: pong not receive in expected period, closing socket');\n        this.close({\n          code: 1000,\n          reason: 'Pong not received'\n        })\n          .catch((reason) => {\n            this.logger.warn('socket: failed to close socket after missed pong', reason);\n          });\n      }\n      catch (error) {\n        // This try/catch block was added as a debugging step; to the best of my\n        // knowledge, the above can never throw.\n        /* istanbul ignore next */\n        this.logger.error('socket: error occurred in onPongNotReceived', error);\n      }\n    };\n\n    const scheduleNextPingAndCancelPongTimer = () => {\n      try {\n        clearTimeout(this.pongTimer);\n        this.pingTimer = safeSetTimeout(() => this._ping(), this.pingInterval);\n      }\n      catch (error) {\n        // This try/catch block was added as a debugging step; to the best of my\n        // knowledge, the above can never throw.\n        /* istanbul ignore next */\n        this.logger.error('socket: error occurred in scheduleNextPingAndCancelPongTimer', error);\n      }\n    };\n\n    id = id || uuid.v4();\n    this.pongTimer = safeSetTimeout(onPongNotReceived, this.pongTimeout);\n    this.once('pong', scheduleNextPingAndCancelPongTimer);\n    this.once('pong', confirmPongId);\n\n    this.logger.debug(`socket: ping ${id}`);\n\n    return this.send({\n      id,\n      type: 'ping'\n    });\n  }\n}\n"]}