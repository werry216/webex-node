"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

_Object$defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _mercury.default;
  }
});

_Object$defineProperty(exports, "Mercury", {
  enumerable: true,
  get: function get() {
    return _mercury.default;
  }
});

_Object$defineProperty(exports, "config", {
  enumerable: true,
  get: function get() {
    return _config.default;
  }
});

_Object$defineProperty(exports, "Socket", {
  enumerable: true,
  get: function get() {
    return _socket.default;
  }
});

_Object$defineProperty(exports, "BadRequest", {
  enumerable: true,
  get: function get() {
    return _errors.BadRequest;
  }
});

_Object$defineProperty(exports, "ConnectionError", {
  enumerable: true,
  get: function get() {
    return _errors.ConnectionError;
  }
});

_Object$defineProperty(exports, "Forbidden", {
  enumerable: true,
  get: function get() {
    return _errors.Forbidden;
  }
});

_Object$defineProperty(exports, "NotAuthorized", {
  enumerable: true,
  get: function get() {
    return _errors.NotAuthorized;
  }
});

_Object$defineProperty(exports, "UnknownResponse", {
  enumerable: true,
  get: function get() {
    return _errors.UnknownResponse;
  }
});

require("@webex/internal-plugin-device");

require("@webex/internal-plugin-feature");

require("@webex/internal-plugin-metrics");

var _webexCore = require("@webex/webex-core");

var _mercury = _interopRequireDefault(require("./mercury"));

var _config = _interopRequireDefault(require("./config"));

var _socket = _interopRequireDefault(require("./socket"));

var _errors = require("./errors");

/*!
 * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.
 */
(0, _webexCore.registerInternalPlugin)('mercury', _mercury.default, {
  config: _config.default,
  onBeforeLogout: function onBeforeLogout() {
    return this.disconnect();
  }
});
//# sourceMappingURL=index.js.map
