{"version":3,"sources":["request-timing.js"],"names":["RequestTimingInterceptor","options","$timings","requestStart","requestEnd","requestFail","reject","response","resolve","reason","Interceptor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;;;AAEA;AACA;AACA;IACqBA,wB;;;;;;;;;;;;;AASnB;AACF;AACA;AACA;AACA;AACE,uBAAUC,OAAV,EAAmB;AACjBA,MAAAA,OAAO,CAACC,QAAR,GAAmBD,OAAO,CAACC,QAAR,IAAoB,EAAvC;AACAD,MAAAA,OAAO,CAACC,QAAR,CAAiBC,YAAjB,GAAgC,mBAAhC;AAEA,aAAOF,OAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,wBAAeA,OAAf,EAAwB;AACtBA,MAAAA,OAAO,CAACC,QAAR,CAAiBE,UAAjB,GAA8BH,OAAO,CAACC,QAAR,CAAiBG,WAAjB,GAA+B,mBAA7D;AAEA,aAAO,iBAAQC,MAAR,CAAeL,OAAf,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,oBAAWA,OAAX,EAAoBM,QAApB,EAA8B;AAC5BN,MAAAA,OAAO,CAACC,QAAR,CAAiBE,UAAjB,GAA8B,mBAA9B;AAEA,aAAO,iBAAQI,OAAR,CAAgBD,QAAhB,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,yBAAgBN,OAAhB,EAAyBQ,MAAzB,EAAiC;AAC/BR,MAAAA,OAAO,CAACC,QAAR,CAAiBE,UAAjB,GAA8BH,OAAO,CAACC,QAAR,CAAiBG,WAAjB,GAA+B,mBAA7D;AAEA,aAAO,iBAAQC,MAAR,CAAeG,MAAf,CAAP;AACD;;;;AArDD;AACF;AACA;AACA;AACE,oBAAcR,OAAd,EAAuB;AACrB,aAAO,IAAID,wBAAJ,CAA6B,IAA7B,EAAmCC,OAAnC,CAAP;AACD;;;EAPmDS,qB","sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Interceptor} from '@webex/http-core';\n\n/**\n * @class\n */\nexport default class RequestTimingInterceptor extends Interceptor {\n  /**\n   * @param {Object} options\n   * @returns {RequestTimingInterceptor}\n   */\n  static create(options) {\n    return new RequestTimingInterceptor(this, options);\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @returns {Object}\n   */\n  onRequest(options) {\n    options.$timings = options.$timings || {};\n    options.$timings.requestStart = Date.now();\n\n    return options;\n  }\n\n  /**\n   * @see Interceptor#onRequestError\n   * @param {Object} options\n   * @returns {Object}\n   */\n  onRequestError(options) {\n    options.$timings.requestEnd = options.$timings.requestFail = Date.now();\n\n    return Promise.reject(options);\n  }\n\n  /**\n   * @see Interceptor#onResponse\n   * @param {Object} options\n   * @param {HttpResponse} response\n   * @returns {Object}\n   */\n  onResponse(options, response) {\n    options.$timings.requestEnd = Date.now();\n\n    return Promise.resolve(response);\n  }\n\n  /**\n   * @see Interceptor#onResponseError\n   * @param {Object} options\n   * @param {Error} reason\n   * @returns {Object}\n   */\n  onResponseError(options, reason) {\n    options.$timings.requestEnd = options.$timings.requestFail = Date.now();\n\n    return Promise.reject(reason);\n  }\n}\n"]}