{"version":3,"sources":["webex-user-agent.js"],"names":["strings","WebexUserAgentInterceptor","options","appName","appVersion","libName","libVersion","set","inBrowser","headers","uri","includes","webex","config","credentials","samlUrl","tokenUrl","authorizeUrl","get","Interceptor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AACA;;;;;;AAGA,IAAMA,OAAO,GAAG,sBAAhB;AAEA;AACA;AACA;;IACqBC,yB;;;;;AACnB;AACF;AACA;AACA;AACA;AACA;AACE,uCAA0B;AAAA;;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAAA;AACxB,QAAMC,OAAO,GAAG,mBAAID,OAAJ,EAAa,sBAAb,CAAhB;AACA,QAAME,UAAU,GAAG,mBAAIF,OAAJ,EAAa,yBAAb,CAAnB;AAEA,QAAMG,OAAO,GAAG,mBAAIH,OAAJ,EAAa,aAAb,EAA4B,KAA5B,IAAqC,OAArC,GAA+C,cAA/D;AACA,QAAMI,UAAU,GAAG,mBAAIJ,OAAJ,EAAa,eAAb,EAA8B,aAA9B,CAAnB;AAEA,8BAAMA,OAAN;;AACA,QAAIC,OAAO,IAAIC,UAAf,EAA2B;AACzBJ,MAAAA,OAAO,CAACO,GAAR,wDAAqBJ,OAArB,cAAgCC,UAAhC,eAA+CI,oBAAY,KAAZ,GAAoB,MAAnE,eAA8EH,OAA9E,cAAyFC,UAAzF;AACD,KAFD,MAGK;AACHN,MAAAA,OAAO,CAACO,GAAR,wDAAqBF,OAArB,cAAgCC,UAAhC,eAA+CE,oBAAY,KAAZ,GAAoB,MAAnE;AACD;;AAbuB;AAczB;AAED;AACF;AACA;;;;;;AAKE;AACF;AACA;AACA;AACA;AACE,uBAAUN,OAAV,EAAmB;AACjBA,MAAAA,OAAO,CAACO,OAAR,GAAkBP,OAAO,CAACO,OAAR,IAAmB,EAArC;;AAEA,UAAIP,OAAO,CAACQ,GAAR,IAAeR,OAAO,CAACQ,GAAR,CAAYC,QAAZ,CAAqB,kBAArB,CAAnB,EAA6D;AAC3D,eAAOT,OAAP;AACD;;AAED,UAAIA,OAAO,CAACQ,GAAR,KAAgBR,OAAO,CAACQ,GAAR,CAAYC,QAAZ,CAAqB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,WAAlB,CAA8BC,OAAnD,KAA+Db,OAAO,CAACQ,GAAR,CAAYC,QAAZ,CAAqB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,WAAlB,CAA8BE,QAAnD,CAA/D,IAA+Hd,OAAO,CAACQ,GAAR,CAAYC,QAAZ,CAAqB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,WAAlB,CAA8BG,YAAnD,CAA/I,CAAJ,EAAsN;AACpN,eAAOf,OAAP;AACD;;AAED,UAAI,sBAAsBA,OAAO,CAACO,OAAlC,EAA2C;AACzC,YAAI,CAACP,OAAO,CAACO,OAAR,CAAgB,kBAAhB,CAAL,EAA0C;AACxC,uCAAuBP,OAAO,CAACO,OAA/B,EAAwC,kBAAxC;AACD;;AAED,eAAOP,OAAP;AACD;;AAEDA,MAAAA,OAAO,CAACO,OAAR,CAAgB,kBAAhB,IAAsCT,OAAO,CAACkB,GAAR,CAAY,IAAZ,CAAtC;AAEA,aAAOhB,OAAP;AACD;;;WA/BD,kBAAgB;AACd,aAAO,IAAID,yBAAJ,CAA8B;AAACW,QAAAA,KAAK,EAAE;AAAR,OAA9B,CAAP;AACD;;;EA5BoDO,qB","sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {inBrowser} from '@webex/common';\nimport {Interceptor} from '@webex/http-core';\nimport {get} from 'lodash';\n\nconst strings = new WeakMap();\n\n/**\n * @class\n */\nexport default class WebexUserAgentInterceptor extends Interceptor {\n  /**\n   * @param {Object} [options={}]\n   * @param {WebexCore} [options.webex]\n   * @private\n   * @returns {WebexUserAgentInterceptor}\n   */\n  constructor(options = {}) {\n    const appName = get(options, 'webex.config.appName');\n    const appVersion = get(options, 'webex.config.appVersion');\n\n    const libName = get(options, 'webex.webex', false) ? 'webex' : 'webex-js-sdk';\n    const libVersion = get(options, 'webex.version', 'development');\n\n    super(options);\n    if (appName && appVersion) {\n      strings.set(this, `${appName}/${appVersion} (${inBrowser ? 'web' : 'node'}) ${libName}/${libVersion}`);\n    }\n    else {\n      strings.set(this, `${libName}/${libVersion} (${inBrowser ? 'web' : 'node'})`);\n    }\n  }\n\n  /**\n   * @returns {WebexUserAgentInterceptor}\n   */\n  static create() {\n    return new WebexUserAgentInterceptor({webex: this});\n  }\n\n  /**\n   * @see Interceptor#onRequest\n   * @param {Object} options\n   * @returns {Object}\n   */\n  onRequest(options) {\n    options.headers = options.headers || {};\n\n    if (options.uri && options.uri.includes('https://idbroker')) {\n      return options;\n    }\n\n    if (options.uri && (options.uri.includes(this.webex.config.credentials.samlUrl) || options.uri.includes(this.webex.config.credentials.tokenUrl) || options.uri.includes(this.webex.config.credentials.authorizeUrl))) {\n      return options;\n    }\n\n    if ('spark-user-agent' in options.headers) {\n      if (!options.headers['spark-user-agent']) {\n        Reflect.deleteProperty(options.headers, 'spark-user-agent');\n      }\n\n      return options;\n    }\n\n    options.headers['spark-user-agent'] = strings.get(this);\n\n    return options;\n  }\n}\n"]}