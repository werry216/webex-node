"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _initializerDefineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/initializerDefineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _applyDecoratedDescriptor2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/applyDecoratedDescriptor"));

var _initializerWarningHelper2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/initializerWarningHelper"));

var _weakMap = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/weak-map"));

var _assign = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/assign"));

var _coreDecorators = require("core-decorators");

var _ampersandEvents = _interopRequireDefault(require("ampersand-events"));

var _class, _descriptor, _temp;

// hold onto weak references to parent' Webexs to help avoid retain cycles
var webexs = new _weakMap.default();
/**
 * Base plugin class. Doesn't depend on Ampersand State
 */

var StatelessWebexPlugin = (_class = (_temp = /*#__PURE__*/function () {
  /**
   * Constructor. One of attrs.webex or options.parent is required
   * @param {Object} attrs
   * @param {WebexCore} [attrs.webex]
   * @param {Object} options
   * @param {WebexCore} [options.parent]
   */
  function StatelessWebexPlugin() {
    var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _classCallCheck2.default)(this, StatelessWebexPlugin);
    (0, _initializerDefineProperty2.default)(this, "ready", _descriptor, this);
    var webex = attrs.webex || options.parent;

    if (!webex) {
      throw new Error('One of `attrs.webex` or `options.parent` must be supplied when initializing a StatelessWebexPlugin');
    }

    while (webex.parent || webex.collection) {
      webex = webex.parent || webex.collection;
    }

    webexs.set(this, webex);
  }
  /**
   * Proxies to {@link WebexPlugin#webex}'s `request()` method.
   * @see WebexCore#request
   * @param {Array<mixed>} args
   * @returns {Promise}
   */


  (0, _createClass2.default)(StatelessWebexPlugin, [{
    key: "config",
    get:
    /**
     * The config for this plugin's namespace. If no namespace has been set
     * returns all of webex's config.
     * @type {Object}
     */
    function get() {
      var namespace = this.getNamespace ? this.getNamespace() : this.namespace;

      if (namespace) {
        namespace = namespace.toLowerCase();
        return this.webex.config[namespace];
      }

      return this.webex.config;
    }
    /**
     * A reference to the webex logger.
     * @type {Logger}
     */

  }, {
    key: "logger",
    get: function get() {
      return this.webex.logger;
    }
    /**
     * A reference to the main sdk instance
     * @type {WebexCore}
     */

  }, {
    key: "webex",
    get: function get() {
      return webexs.get(this);
    }
  }, {
    key: "request",
    value: function request() {
      var _this$webex;

      return (_this$webex = this.webex).request.apply(_this$webex, arguments);
    }
    /**
     * Proxies to {@link WebexPlugin#webex}'s `upload()` method.
     * @see WebexCore#upload
     * @param {Array<mixed>} args
     * @returns {Promise}
     */

  }, {
    key: "upload",
    value: function upload() {
      var _this$webex2;

      return (_this$webex2 = this.webex).upload.apply(_this$webex2, arguments);
    }
  }]);
  return StatelessWebexPlugin;
}(), _temp), (_descriptor = (0, _applyDecoratedDescriptor2.default)(_class.prototype, "ready", [_coreDecorators.readonly], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return true;
  }
})), _class);
exports.default = StatelessWebexPlugin;
(0, _assign.default)(StatelessWebexPlugin.prototype, _ampersandEvents.default);
//# sourceMappingURL=stateless-webex-plugin.js.map
