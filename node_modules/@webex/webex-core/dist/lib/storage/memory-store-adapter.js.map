{"version":3,"sources":["memory-store-adapter.js"],"names":["_bind","namespace","options","reject","Error","logger","map","data","forEach","key","set","debug","resolve","clear","del","delete","get","res","NotFoundError","put","value","bind","preload"],"mappings":";;;;;;;;;;;;;;;;;;AAIA;;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAT,CAAeC,SAAf,EAAwC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACtCA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AACA,MAAI,CAACD,SAAL,EAAgB;AACd,WAAO,iBAAQE,MAAR,CAAe,IAAIC,KAAJ,CAAU,yBAAV,CAAf,CAAP;AACD;;AAED,MAAI,CAACF,OAAO,CAACG,MAAb,EAAqB;AACnB,WAAO,iBAAQF,MAAR,CAAe,IAAIC,KAAJ,CAAU,8BAAV,CAAf,CAAP;AACD;;AARqC,iBAUrBF,OAVqB;AAAA,MAU/BG,MAV+B,YAU/BA,MAV+B;AAYtC,MAAMC,GAAG,GAAG,iBAAQ,CAAC,CAAC,GAAD,EAAM,EAAN,CAAD,CAAR,CAAZ;;AAEA,MAAIJ,OAAO,CAACK,IAAZ,EAAkB;AAChB,uBAAYL,OAAO,CAACK,IAApB,EAA0BC,OAA1B,CAAkC,UAACC,GAAD,EAAS;AACzCH,MAAAA,GAAG,CAACI,GAAJ,CAAQD,GAAR,EAAaP,OAAO,CAACK,IAAR,CAAaE,GAAb,CAAb;AACD,KAFD;AAGD;;AAEDJ,EAAAA,MAAM,CAACM,KAAP,CAAa,yCAAb;AAEA,SAAO,iBAAQC,OAAR,CAAgB;AACrBC,IAAAA,KADqB,mBACb;AACNR,MAAAA,MAAM,CAACM,KAAP,CAAa,4CAAb;AAEA,aAAO,iBAAQC,OAAR,CAAgBN,GAAG,CAACO,KAAJ,EAAhB,CAAP;AACD,KALoB;AAMrBC,IAAAA,GANqB,eAMjBL,GANiB,EAMZ;AACPJ,MAAAA,MAAM,CAACM,KAAP,2CAAiDF,GAAjD;AAEA,aAAO,iBAAQG,OAAR,CAAgBN,GAAG,CAACS,MAAJ,CAAWN,GAAX,CAAhB,CAAP;AACD,KAVoB;AAWrBO,IAAAA,GAXqB,eAWjBP,GAXiB,EAWZ;AACPJ,MAAAA,MAAM,CAACM,KAAP,0CAAgDF,GAAhD;AACA,UAAMQ,GAAG,GAAGX,GAAG,CAACU,GAAJ,CAAQP,GAAR,CAAZ;;AAEA,UAAI,OAAOQ,GAAP,KAAe,WAAnB,EAAgC;AAC9B,eAAO,iBAAQd,MAAR,CAAe,IAAIe,qBAAJ,EAAf,CAAP;AACD;;AAED,aAAO,iBAAQN,OAAR,CAAgBK,GAAhB,CAAP;AACD,KApBoB;AAqBrBE,IAAAA,GArBqB,eAqBjBV,GArBiB,EAqBZW,KArBY,EAqBL;AACdf,MAAAA,MAAM,CAACM,KAAP,0CAAgDF,GAAhD;AAEA,aAAO,iBAAQG,OAAR,CAAgBN,GAAG,CAACI,GAAJ,CAAQD,GAAR,EAAaW,KAAb,CAAhB,CAAP;AACD;AAzBoB,GAAhB,CAAP;AA2BD;;eAEc;AACbC,EAAAA,IAAI,EAAErB,KADO;AAEbsB,EAAAA,OAFa,mBAELf,IAFK,EAEC;AACZ,WAAO;AACLc,MAAAA,IADK,gBACApB,SADA,EACyB;AAAA,YAAdC,OAAc,uEAAJ,EAAI;;AAC5B,YAAIK,IAAI,CAACN,SAAD,CAAR,EAAqB;AACnBC,UAAAA,OAAO,CAACK,IAAR,GAAeA,IAAI,CAACN,SAAD,CAAnB;AACD;;AAED,eAAOD,KAAK,CAACC,SAAD,EAAYC,OAAZ,CAAZ;AACD;AAPI,KAAP;AASD;AAZY,C","sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {NotFoundError} from './errors';\n\n/**\n * Binds a namespace\n * @param {string} namespace\n * @param {Object} options\n * @param {Object} options.data\n * @private\n * @returns {Promise<Object>}\n */\nfunction _bind(namespace, options = {}) {\n  options = options || {};\n  if (!namespace) {\n    return Promise.reject(new Error('`namespace` is required'));\n  }\n\n  if (!options.logger) {\n    return Promise.reject(new Error('`options.logger` is required'));\n  }\n\n  const {logger} = options;\n\n  const map = new Map([['@', {}]]);\n\n  if (options.data) {\n    Object.keys(options.data).forEach((key) => {\n      map.set(key, options.data[key]);\n    });\n  }\n\n  logger.debug('memory-store-adapter: returning binding');\n\n  return Promise.resolve({\n    clear() {\n      logger.debug('memory-store-adapter: clearing the binding');\n\n      return Promise.resolve(map.clear());\n    },\n    del(key) {\n      logger.debug(`memory-store-adapter: deleting \\`${key}\\``);\n\n      return Promise.resolve(map.delete(key));\n    },\n    get(key) {\n      logger.debug(`memory-store-adapter: reading \\`${key}\\``);\n      const res = map.get(key);\n\n      if (typeof res === 'undefined') {\n        return Promise.reject(new NotFoundError());\n      }\n\n      return Promise.resolve(res);\n    },\n    put(key, value) {\n      logger.debug(`memory-store-adapter: writing \\`${key}\\``);\n\n      return Promise.resolve(map.set(key, value));\n    }\n  });\n}\n\nexport default {\n  bind: _bind,\n  preload(data) {\n    return {\n      bind(namespace, options = {}) {\n        if (data[namespace]) {\n          options.data = data[namespace];\n        }\n\n        return _bind(namespace, options);\n      }\n    };\n  }\n};\n"]}