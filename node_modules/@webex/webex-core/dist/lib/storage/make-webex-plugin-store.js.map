{"version":3,"sources":["make-webex-plugin-store.js"],"names":["defers","serialize","value","serialized","forEach","key","val","length","undefined","map","k","empty","reduce","acc","makeWebexPluginStorage","type","context","WebexPluginStorage","keyFactory","set","webex","del","getNamespace","args","defer","get","Defer","then","res","resolve","put","logger","debug","promise","initValue","parent","catch","reason","NotFoundError","process","env","NODE_ENV","toString","includes","warn","reject"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Defer, oneFlight} from '@webex/common';\nimport {isArray, isObject, result} from 'lodash';\n\nimport {NotFoundError} from './errors';\n\nconst defers = new WeakMap();\n\n/**\n * Walks an object before writing it to the store and omits empty arrays\n * @private\n * @param {Object} value\n * @returns {Object}\n */\nfunction serialize(value) {\n  if (!isObject(value)) {\n    return value;\n  }\n\n  const serialized = value.serialize ? value.serialize() : value;\n\n  Object.keys(serialized).forEach((key) => {\n    const val = serialized[key];\n\n    if (isArray(val)) {\n      if (val.length === 0) {\n        serialized[key] = undefined;\n      }\n      else {\n        serialized[key] = val.map(serialize);\n      }\n    }\n    else if (isObject(val)) {\n      Object.keys(val).forEach((k) => {\n        val[k] = serialize(val[k]);\n      });\n    }\n  });\n\n  const empty = Object.keys(serialized).reduce((acc, key) => acc && !serialized[key], true);\n\n  if (empty) {\n    return undefined;\n  }\n\n  return serialized;\n}\n\n/**\n * [makeWebexPluginStorage description]\n * @param {[type]} type\n * @param {[type]} context\n * @private\n * @returns {[type]}\n */\nexport default function makeWebexPluginStorage(type, context) {\n  /**\n   * Interface between WebexPlugin and Webex#boundeStorage or\n   * Webex#unboundedStorage\n   */\n  class WebexPluginStorage {\n    /**\n     * @param {Object} attrs\n     * @param {Object} options\n     * @returns {WebexPluginStorage}\n     */\n    constructor() {\n      defers.set(this, new Map());\n    }\n\n    /**\n     * Clears an entire namespace\n     * @returns {Promise}\n     */\n    clear() {\n      return context.webex[`${type}Storage`].del(context.getNamespace());\n    }\n\n    /**\n     * Deletes the specified key from the store\n     * @param {string} key\n     * @returns {[type]}\n     */\n    del(...args) {\n      return context.webex[`${type}Storage`].del(context.getNamespace(), ...args);\n    }\n\n    /**\n     * Retrieves the value specified by key from the store. Rejects with\n     * NotFoundError if no value can be found\n     * @param {string} key\n     * @returns {Promise}\n     */\n    get(key) {\n      let defer = defers.get(this).get(key);\n\n      if (!defer) {\n        defer = new Defer();\n        defers.get(this).set(key, defer);\n      }\n\n      return context.webex[`${type}Storage`].get(context.getNamespace(), key)\n        .then((res) => {\n          defer.resolve();\n\n          return res;\n        });\n    }\n\n    /**\n     * Writes a value to the store\n     * @param {string} key\n     * @param {any} value\n     * @returns {Promise}\n     */\n    put(key, value) {\n      return context.webex[`${type}Storage`].put(context.getNamespace(), key, serialize(value));\n    }\n\n    /**\n     * Returns a Promise that won't resolve until the value specified by key has\n     * been attempted to be loaded from the store. This allows us to lazily\n     * prevent certain method from executing until the specified keys have been\n     * retrieved from the store.\n     * @param {string} key\n     * @returns {Promise}\n     */\n    waitFor(key) {\n      context.logger.debug(`plugin-storage(${context.getNamespace()}): waiting to init key \\`${key}\\``);\n      const defer = defers.get(this).get(key);\n\n      if (defer) {\n        context.logger.debug(`plugin-storage(${context.getNamespace()}): already inited \\`${key}\\``);\n\n        return defer.promise;\n      }\n\n      context.logger.debug(`plugin-storage(${context.getNamespace()}): initing \\`${key}\\``);\n\n      return this.initValue(key);\n    }\n\n    @oneFlight({keyFactory: (key) => `initValue-${key}`})\n    /**\n     * Attempts to load the specified key from the store and set it on the parent\n     * object.\n     * @param {string} key\n     * @returns {Promise} Resolves (but not with the retrieved value) when\n     * the value retrieval complete\n     */\n    // suppress doc warning because decorators confuse eslint\n    // eslint-disable-next-line require-jsdoc\n    initValue(key) {\n      const defer = new Defer();\n\n      defers.get(this).set(key, defer);\n\n      // Intentionally bypasses this.get so we don't resolve the promise until\n      // after the parent value is set.\n      context.webex[`${type}Storage`].get(context.getNamespace(), key)\n        .then((value) => {\n          context.logger.debug(`plugin-storage(${context.getNamespace()}): got \\`${key}\\` for first time`);\n          if (key === '@') {\n            context.parent.set(value);\n          }\n          else if (result(context[key], 'isState')) {\n            context[key].set(value);\n          }\n          else {\n            context.set(key, value);\n          }\n          context.logger.debug(`plugin-storage(${context.getNamespace()}): set \\`${key}\\` for first time`);\n          defer.resolve();\n          context.logger.debug(`plugin-storage(${context.getNamespace()}): inited \\`${key}\\``);\n        })\n        .catch((reason) => {\n          // The  next conditional is a bit of an unfortunate solution to deal\n          // with circular dependencies in unit tests. It should not effect\n          // integration tests or production code.\n          if (reason instanceof NotFoundError || process.env.NODE_ENV !== 'production' && reason.toString().includes('MockNotFoundError')) {\n            context.logger.debug(`plugin-storage(${context.getNamespace()}): no data for \\`${key}\\`, continuing`);\n\n            return defer.resolve();\n          }\n          context.logger.warn(`plugin-storage(${context.getNamespace()}): failed to init \\`${key}\\``, reason);\n\n          return defer.reject(reason);\n        });\n\n      return defer.promise;\n    }\n  }\n\n  return new WebexPluginStorage();\n}\n"]}