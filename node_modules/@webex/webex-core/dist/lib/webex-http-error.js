"use strict";

var _Reflect$construct = require("@babel/runtime-corejs2/core-js/reflect/construct");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _apply = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/reflect/apply"));

var _defineProperty = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/reflect/define-property"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _httpCore = require("@webex/http-core");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

/**
 * Webex-specific http error class
 */
var WebexHttpError = /*#__PURE__*/function (_HttpError) {
  (0, _inherits2.default)(WebexHttpError, _HttpError);

  var _super = _createSuper(WebexHttpError);

  function WebexHttpError() {
    (0, _classCallCheck2.default)(this, WebexHttpError);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(WebexHttpError, [{
    key: "parse",
    value:
    /**
     * Very similar to {@link HttpError#parse()}, but additionally adds some
     * useful headers to the message string
     * @param {HttpResponse} res
     * @returns {string}
     */
    function parse(res) {
      var message = (0, _apply.default)(_httpCore.HttpError.prototype.parse, this, [res]);
      (0, _defineProperty.default)(this, 'options', {
        enumerable: false,
        value: res.options
      });

      if (this.options.url) {
        message += "\n".concat(this.options.method, " ").concat(this.options.url);
      } else if (this.options.uri) {
        message += "\n".concat(this.options.method, " ").concat(this.options.uri);
      } else {
        message += "\n".concat(this.options.method, " ").concat(this.options.service.toUpperCase(), "/").concat(this.options.resource);
      }

      message += "\nWEBEX_TRACKING_ID: ".concat(this.options.headers.trackingid);

      if (this.options.headers && this.options.headers['x-trans-id']) {
        message += "\nX-Trans-Id: ".concat(this.options.headers['x-trans-id']);
      }

      if (this.headers['retry-after']) {
        (0, _defineProperty.default)(this, 'retryAfter', {
          enumerable: true,
          value: this.headers['retry-after'],
          writeable: false
        });
        message += "\nRETRY-AFTER: ".concat(this.retryAfter);
      }

      message += '\n';
      return message;
    }
  }]);
  return WebexHttpError;
}(_httpCore.HttpError);

exports.default = WebexHttpError;

_httpCore.HttpError.makeSubTypes(WebexHttpError);
/**
 * TooManyRequests
 */


var TooManyRequests = /*#__PURE__*/function (_HttpError$BadRequest) {
  (0, _inherits2.default)(TooManyRequests, _HttpError$BadRequest);

  var _super2 = _createSuper(TooManyRequests);

  function TooManyRequests() {
    (0, _classCallCheck2.default)(this, TooManyRequests);
    return _super2.apply(this, arguments);
  }

  return TooManyRequests;
}(_httpCore.HttpError.BadRequest);

_httpCore.HttpError[429] = TooManyRequests;
_httpCore.HttpError.TooManyRequests = TooManyRequests;
//# sourceMappingURL=webex-http-error.js.map
