"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _promise = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/promise"));

var _keys = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/keys"));

var _webexCore = require("@webex/webex-core");

/*!
 * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.
 */

/**
 * @class
 */
var AbstractUserUUIDRequestBatcher = _webexCore.Batcher.extend({
  namespace: 'User',

  /**
   * @param {string} item
   * @returns {Promise<Object>}
   */
  prepareItem: function prepareItem(item) {
    return _promise.default.resolve({
      email: item
    });
  },

  /**
   * @param {HttpResponseObject} res
   * @returns {Promise}
   */
  handleHttpSuccess: function handleHttpSuccess(res) {
    var _this = this;

    return _promise.default.all((0, _keys.default)(res.body).map(function (email) {
      if (res.body[email] && res.body[email].id) {
        return _this.handleItemSuccess(email, res.body[email]);
      }

      return _this.handleItemFailure(email, res.body[email]);
    }));
  },
  handleItemFailure: function handleItemFailure(email, response) {
    return this.getDeferredForResponse(email).then(function (defer) {
      defer.reject(response);
    });
  },

  /**
   * @param {string} email
   * @param {Object} response
   * @returns {Promise}
   */
  handleItemSuccess: function handleItemSuccess(email, response) {
    return this.getDeferredForResponse(email).then(function (defer) {
      defer.resolve(response);
    });
  },

  /**
   * @param {string} email
   * @returns {Promise<string>}
   */
  fingerprintRequest: function fingerprintRequest(email) {
    return _promise.default.resolve(email.email || email);
  },

  /**
   * @param {string} email
   * @returns {Promise<string>}
   */
  fingerprintResponse: function fingerprintResponse(email) {
    return _promise.default.resolve(email);
  }
});
/**
 * @class
 */


var FakeUserUUIDRequestBatcher = AbstractUserUUIDRequestBatcher.extend({
  /**
   * @param {Object} payload
   * @returns {Promise<HttpResponseObject>}
   */
  submitHttpRequest: function submitHttpRequest(payload) {
    return this.webex.request({
      method: 'POST',
      service: 'conversation',
      resource: '/users',
      body: payload
    });
  }
});
/**
 * @class
 */

var RealUserUUIDRequestBatcher = AbstractUserUUIDRequestBatcher.extend({
  /**
   * @param {Object} payload
   * @returns {Promise<HttpResponseObject>}
   */
  submitHttpRequest: function submitHttpRequest(payload) {
    return this.webex.request({
      method: 'POST',
      service: 'conversation',
      resource: '/users',
      body: payload,
      qs: {
        shouldCreateUsers: true
      }
    });
  }
});
/**
 * @class
 */

var UserUUIDBatcher = _webexCore.WebexPlugin.extend({
  children: {
    faker: FakeUserUUIDRequestBatcher,
    creator: RealUserUUIDRequestBatcher
  },

  /**
   * @param {Object} payload
   * @returns {Promise<Object>}
   */
  request: function request(payload) {
    return payload.create ? this.creator.request(payload.email) : this.faker.request(payload.email);
  },
  version: "1.125.6"
});

var _default = UserUUIDBatcher;
exports.default = _default;
//# sourceMappingURL=user-uuid-batcher.js.map
