"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

_Object$defineProperty(exports, "HttpStatusInterceptor", {
  enumerable: true,
  get: function get() {
    return _httpStatus.default;
  }
});

_Object$defineProperty(exports, "ProgressEvent", {
  enumerable: true,
  get: function get() {
    return _progressEvent.default;
  }
});

_Object$defineProperty(exports, "Interceptor", {
  enumerable: true,
  get: function get() {
    return _interceptor.default;
  }
});

_Object$defineProperty(exports, "HttpError", {
  enumerable: true,
  get: function get() {
    return _httpError.default;
  }
});

_Object$defineProperty(exports, "detect", {
  enumerable: true,
  get: function get() {
    return _detect.default;
  }
});

exports.request = exports.defaults = void 0;

var _getOwnPropertyDescriptor = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/reflect/get-own-property-descriptor"));

var _defineProperty = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/reflect/define-property"));

var _deleteProperty = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/reflect/delete-property"));

var _isString2 = _interopRequireDefault(require("lodash/isString"));

var _defaults2 = _interopRequireDefault(require("lodash/defaults"));

var _curry2 = _interopRequireDefault(require("lodash/curry"));

var _assign2 = _interopRequireDefault(require("lodash/assign"));

var _httpStatus = _interopRequireDefault(require("./interceptors/http-status"));

var _request2 = _interopRequireDefault(require("./request"));

var _progressEvent = _interopRequireDefault(require("./progress-event"));

var _interceptor = _interopRequireDefault(require("./lib/interceptor"));

var _httpError = _interopRequireDefault(require("./http-error"));

var _detect = _interopRequireDefault(require("./lib/detect"));

// Curry protorequest so we generate a function with default options built in.
var protorequest = (0, _curry2.default)(function protorequest(defaultOptions, options) {
  // allow for options to be a string (and therefore expect options in the third
  // position) to match request's api.
  if ((0, _isString2.default)(options)) {
    var uri = options;
    /* eslint prefer-rest-params: [0] */

    options = arguments[2] || {};
    options.uri = uri;
  } // Hide useless elements from logs


  ['download', 'interceptors', 'logger', 'upload'].forEach(function (prop) {
    var descriptor = (0, _getOwnPropertyDescriptor.default)(options, prop);
    descriptor = (0, _assign2.default)({}, descriptor, {
      enumerable: false,
      writable: true
    });
    (0, _defineProperty.default)(options, prop, descriptor);
  });
  (0, _defaults2.default)(options, defaultOptions);

  if (!options.json && options.json !== false) {
    (0, _deleteProperty.default)(options, 'json');
  }

  options.logger = options.logger || this.logger || console;
  return (0, _request2.default)(options);
});
var defaultOptions = {
  json: true,
  interceptors: [// Reminder: this is supposed to be an instantiated interceptor.
  _httpStatus.default.create()]
};
var defaults = protorequest;
exports.defaults = defaults;
var request = protorequest(defaultOptions);
exports.request = request;
//# sourceMappingURL=index.js.map
