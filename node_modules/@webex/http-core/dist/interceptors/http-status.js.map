{"version":3,"sources":["http-status.js"],"names":["LOCUS_REDIRECT_ERROR","HttpStatusInterceptor","webex","options","ErrorConstructor","error","HttpError","value","response","statusCode","resolve","body","errorCode","reject","select","Interceptor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AACA;;;;;;AAEA,IAAMA,oBAAoB,GAAG,OAA7B;AAEA;AACA;AACA;;IACqBC,qB;;;;;AACnB;AACF;AACA;AACA;AACA;AACE,iCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;AAC1B,8BAAMD,KAAN;AACA,QAAME,gBAAgB,GAAGD,OAAO,KAAKA,OAAO,CAACE,KAAR,IAAiBF,OAAO,CAACC,gBAA9B,CAAP,IAA0DE,kBAAnF;AAEA,gFAA8B;AAC5BF,MAAAA,gBAAgB,EAAE;AAChBG,QAAAA,KAAK,EAAEH;AADS;AADU,KAA9B;AAJ0B;AAS3B;AAED;AACF;AACA;AACA;;;;;;AAKE;AACF;AACA;AACA;AACA;AACE,wBAAWD,OAAX,EAAoBK,QAApB,EAA8B;AAC5B,UAAIA,QAAQ,CAACC,UAAb,EAAyB;AACvB,YAAID,QAAQ,CAACC,UAAT,GAAsB,GAA1B,EAA+B;AAC7B,iBAAO,iBAAQC,OAAR,CAAgBF,QAAhB,CAAP;AACD,SAHsB,CAIvB;;;AACA,YAAIA,QAAQ,CAACC,UAAT,KAAwB,GAAxB,IACFD,QAAQ,CAACG,IADP,IAEFH,QAAQ,CAACG,IAAT,CAAcC,SAAd,KAA4BZ,oBAF9B,EAEoD;AAClD,iBAAO,iBAAQU,OAAR,CAAgBF,QAAhB,CAAP;AACD;AACF,OAX2B,CAa5B;AACA;AACA;;;AACA,aAAO,iBAAQK,MAAR,CAAe,KAAK,KAAKT,gBAAL,CAAsBU,MAAtB,CAA6BN,QAAQ,CAACC,UAAtC,CAAL,EAAwDD,QAAxD,CAAf,CAAP;AACD;;;WA1BD,gBAAcL,OAAd,EAAuB;AACrB,aAAO,IAAIF,qBAAJ,CAA0B,IAA1B,EAAgCE,OAAhC,CAAP;AACD;;;EAvBgDY,oB","sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport HttpError from '../http-error';\nimport Interceptor from '../lib/interceptor';\n\nconst LOCUS_REDIRECT_ERROR = 2000002;\n\n/**\n * @class\n */\nexport default class HttpStatusInterceptor extends Interceptor {\n  /**\n   * @param {Object} webex\n   * @param {Object} options\n   * @returns {HttpStatusInterceptor}\n   */\n  constructor(webex, options) {\n    super(webex);\n    const ErrorConstructor = options && (options.error || options.ErrorConstructor) || HttpError;\n\n    Object.defineProperties(this, {\n      ErrorConstructor: {\n        value: ErrorConstructor\n      }\n    });\n  }\n\n  /**\n   * @param {Object} options\n   * @returns {HttpStatusInterceptor}\n   */\n  static create(options) {\n    return new HttpStatusInterceptor(this, options);\n  }\n\n  /**\n   * @param {Object} options\n   * @param {HttpResponse} response\n   * @returns {Promise}\n   */\n  onResponse(options, response) {\n    if (response.statusCode) {\n      if (response.statusCode < 400) {\n        return Promise.resolve(response);\n      }\n      // to handle locus redirects\n      if (response.statusCode === 404 &&\n        response.body &&\n        response.body.errorCode === LOCUS_REDIRECT_ERROR) {\n        return Promise.resolve(response);\n      }\n    }\n\n    // Note: the extra parenthesis below are required to make sure `new` is\n    // applied to the correct method (i.e., the result of `select()`, not\n    // `select()` itself).\n    return Promise.reject(new (this.ErrorConstructor.select(response.statusCode))(response));\n  }\n}\n"]}